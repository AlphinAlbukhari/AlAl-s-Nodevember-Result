[gd_scene load_steps=235 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="SphereMesh" id=1]
radial_segments = 256
rings = 896

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.306061, 0.309091, 0.357576, 0.360606 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeScalarOp" id=5]

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0.121212, 0.636364 )

[sub_resource type="GradientTexture" id=7]
gradient = SubResource( 6 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = SubResource( 7 )

[sub_resource type="VisualShaderNodeScalarClamp" id=9]

[sub_resource type="Gradient" id=10]
offsets = PoolRealArray( 0.41716, 0.420118, 0.571006, 0.576923 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = SubResource( 11 )

[sub_resource type="Gradient" id=13]
offsets = PoolRealArray( 0.302671, 0.310651, 0.356383, 0.360947 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=14]
gradient = SubResource( 13 )

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = SubResource( 14 )

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeVectorClamp" id=17]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorInterp" id=19]

[sub_resource type="VisualShaderNodeVectorInterp" id=20]
default_input_values = [ 0, Vector3( 1, 0, 0 ), 1, Vector3( 1, 0, 0 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="OpenSimplexNoise" id=21]
period = 91.5
persistence = 0.995

[sub_resource type="NoiseTexture" id=22]
seamless = true
noise = SubResource( 21 )

[sub_resource type="VisualShaderNodeTexture" id=23]
texture = SubResource( 22 )

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 10, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=26]
offsets = PoolRealArray( 0, 0.535503, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 0.464844, 0.303479, 0.147079, 1, 1, 0.86734, 0.261719, 1 )

[sub_resource type="GradientTexture" id=27]
gradient = SubResource( 26 )

[sub_resource type="VisualShaderNodeTexture" id=28]
texture = SubResource( 27 )

[sub_resource type="Gradient" id=29]
offsets = PoolRealArray( 0.275148, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 0.164063, 0.164063, 0.164063, 1 )

[sub_resource type="GradientTexture" id=30]
gradient = SubResource( 29 )

[sub_resource type="VisualShaderNodeTexture" id=31]
texture = SubResource( 30 )

[sub_resource type="VisualShaderNodeColorConstant" id=32]
constant = Color( 0.215686, 0.0617356, 0.0196078, 1 )

[sub_resource type="VisualShaderNodeInput" id=33]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=34]

[sub_resource type="VisualShaderNodeVectorDecompose" id=35]

[sub_resource type="VisualShaderNodeScalarOp" id=36]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=37]
default_input_values = [ 0, 0.0, 1, 0.4 ]

[sub_resource type="VisualShaderNodeVectorOp" id=38]
operator = 2

[sub_resource type="Gradient" id=39]
offsets = PoolRealArray( 0.263314, 0.271949, 0.289079, 0.321199, 0.351178, 0.353319, 0.35546, 0.400428, 0.417559, 0.445396, 0.488223, 0.514793 )
colors = PoolColorArray( 0.425781, 0.425781, 0.425781, 1, 0.585938, 0.585938, 0.585938, 1, 0.792969, 0.792969, 0.792969, 1, 0.753906, 0.753906, 0.753906, 1, 0.464844, 0.464844, 0.464844, 1, 0.527344, 0.527344, 0.527344, 1, 0.636719, 0.636719, 0.636719, 1, 0.800781, 0.800781, 0.800781, 1, 0.708017, 0.708017, 0.708017, 1, 0.667969, 0.667969, 0.667969, 1, 1, 1, 1, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=40]
gradient = SubResource( 39 )

[sub_resource type="VisualShaderNodeTexture" id=41]
texture = SubResource( 40 )

[sub_resource type="Gradient" id=42]
offsets = PoolRealArray( 0, 0.7125, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0.515625, 0.515625, 0.515625, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=43]
gradient = SubResource( 42 )

[sub_resource type="VisualShaderNodeTexture" id=44]
texture = SubResource( 43 )

[sub_resource type="VisualShaderNodeInput" id=45]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=46]

[sub_resource type="Gradient" id=47]

[sub_resource type="GradientTexture" id=48]
gradient = SubResource( 47 )

[sub_resource type="VisualShaderNodeTexture" id=49]
texture = SubResource( 48 )

[sub_resource type="VisualShaderNodeScalarOp" id=50]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=51]
operator = 2

[sub_resource type="Gradient" id=52]
offsets = PoolRealArray( 0.897216, 0.90364, 0.922705, 0.922912 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=53]
gradient = SubResource( 52 )

[sub_resource type="VisualShaderNodeTexture" id=54]
texture = SubResource( 53 )

[sub_resource type="VisualShaderNodeScalarOp" id=55]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="Gradient" id=56]
offsets = PoolRealArray( 0.483333, 0.4875 )

[sub_resource type="GradientTexture" id=57]
gradient = SubResource( 56 )

[sub_resource type="VisualShaderNodeTexture" id=58]
texture = SubResource( 57 )

[sub_resource type="VisualShaderNodeScalarOp" id=59]
operator = 9

[sub_resource type="VisualShaderNodeVectorFunc" id=60]
function = 34

[sub_resource type="Gradient" id=61]

[sub_resource type="GradientTexture" id=62]
gradient = SubResource( 61 )

[sub_resource type="VisualShaderNodeTexture" id=63]
texture = SubResource( 62 )

[sub_resource type="Gradient" id=64]
offsets = PoolRealArray( 0.457286, 0.465169, 0.482301, 0.485393 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=65]
gradient = SubResource( 64 )

[sub_resource type="VisualShaderNodeTexture" id=66]
texture = SubResource( 65 )

[sub_resource type="VisualShaderNodeScalarFunc" id=67]
function = 15

[sub_resource type="Gradient" id=68]
offsets = PoolRealArray( 0, 0.352809 )

[sub_resource type="GradientTexture" id=69]
gradient = SubResource( 68 )

[sub_resource type="VisualShaderNodeTexture" id=70]
texture = SubResource( 69 )

[sub_resource type="VisualShaderNodeScalarFunc" id=71]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=72]
operator = 2

[sub_resource type="Gradient" id=73]
offsets = PoolRealArray( 0, 0.0942184 )

[sub_resource type="GradientTexture" id=74]
gradient = SubResource( 73 )

[sub_resource type="VisualShaderNodeTexture" id=75]
texture = SubResource( 74 )

[sub_resource type="VisualShaderNodeInput" id=76]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=77]

[sub_resource type="Gradient" id=78]
offsets = PoolRealArray( 0.704981, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=79]
gradient = SubResource( 78 )

[sub_resource type="VisualShaderNodeTexture" id=80]
texture = SubResource( 79 )

[sub_resource type="VisualShaderNodeScalarOp" id=81]
operator = 2

[sub_resource type="Gradient" id=82]
offsets = PoolRealArray( 0.477387, 0.482412 )

[sub_resource type="GradientTexture" id=83]
gradient = SubResource( 82 )

[sub_resource type="VisualShaderNodeTexture" id=84]
texture = SubResource( 83 )

[sub_resource type="VisualShaderNodeScalarOp" id=85]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=86]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="Gradient" id=87]
offsets = PoolRealArray( 0.399497, 0.459799 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=88]
gradient = SubResource( 87 )

[sub_resource type="VisualShaderNodeTexture" id=89]
texture = SubResource( 88 )

[sub_resource type="VisualShaderNodeVectorInterp" id=90]

[sub_resource type="OpenSimplexNoise" id=91]
period = 0.1

[sub_resource type="NoiseTexture" id=92]
seamless = true
noise = SubResource( 91 )

[sub_resource type="VisualShaderNodeTexture" id=93]
texture = SubResource( 92 )

[sub_resource type="Gradient" id=94]
offsets = PoolRealArray( 0.0835118, 0.0856531, 0.0979899, 0.100642 )
colors = PoolColorArray( 0, 0.952941, 1, 0, 0, 0.953125, 1, 1, 0, 0.952941, 1, 1, 0, 0.952941, 1, 0 )

[sub_resource type="GradientTexture" id=95]
gradient = SubResource( 94 )

[sub_resource type="VisualShaderNodeTexture" id=96]
texture = SubResource( 95 )

[sub_resource type="VisualShaderNodeInput" id=97]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=98]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.09, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=99]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=100]

[sub_resource type="VisualShaderNodeScalarOp" id=101]
default_input_values = [ 0, 0.0, 1, 0.211 ]
operator = 1

[sub_resource type="Gradient" id=102]
offsets = PoolRealArray( 0.119914, 0.126829 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=103]
gradient = SubResource( 102 )

[sub_resource type="VisualShaderNodeTexture" id=104]
texture = SubResource( 103 )

[sub_resource type="VisualShaderNodeVectorOp" id=105]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=106]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 1, 1, 1 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="Gradient" id=107]
offsets = PoolRealArray( 0.326829, 0.331707 )

[sub_resource type="GradientTexture" id=108]
gradient = SubResource( 107 )

[sub_resource type="VisualShaderNodeTexture" id=109]
texture = SubResource( 108 )

[sub_resource type="VisualShaderNodeScalarOp" id=110]
operator = 2

[sub_resource type="OpenSimplexNoise" id=111]
period = 2.0

[sub_resource type="NoiseTexture" id=112]
width = 1024
height = 1024
seamless = true
noise = SubResource( 111 )

[sub_resource type="VisualShaderNodeTexture" id=113]
texture = SubResource( 112 )

[sub_resource type="Gradient" id=114]
offsets = PoolRealArray( 0, 0.64878 )
colors = PoolColorArray( 0.800781, 0.800781, 0.800781, 1, 0.902344, 0.902344, 0.902344, 1 )

[sub_resource type="GradientTexture" id=115]
gradient = SubResource( 114 )

[sub_resource type="VisualShaderNodeTexture" id=116]
texture = SubResource( 115 )

[sub_resource type="VisualShaderNodeVectorOp" id=117]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 3, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=118]

[sub_resource type="OpenSimplexNoise" id=119]
period = 0.1

[sub_resource type="NoiseTexture" id=120]
seamless = true
noise = SubResource( 119 )

[sub_resource type="VisualShaderNodeTexture" id=121]
texture = SubResource( 120 )

[sub_resource type="VisualShaderNodeScalarOp" id=122]
default_input_values = [ 0, 0.0, 1, 0.01 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=123]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.01, 0.007, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=124]

[sub_resource type="Gradient" id=125]
offsets = PoolRealArray( 0.907317, 0.922912, 0.941463, 1 )
colors = PoolColorArray( 0, 0.717647, 1, 0, 0.707031, 1, 0.979401, 1, 0.0546265, 0.0714901, 0.078125, 1, 0.343079, 0.601563, 0.601563, 1 )

[sub_resource type="GradientTexture" id=126]
gradient = SubResource( 125 )

[sub_resource type="VisualShaderNodeTexture" id=127]
texture = SubResource( 126 )

[sub_resource type="VisualShaderNodeVectorInterp" id=128]

[sub_resource type="OpenSimplexNoise" id=129]
period = 16.5
persistence = 0.0

[sub_resource type="NoiseTexture" id=130]
seamless = true
noise = SubResource( 129 )

[sub_resource type="VisualShaderNodeTexture" id=131]
texture = SubResource( 130 )

[sub_resource type="VisualShaderNodeVectorOp" id=132]
operator = 2

[sub_resource type="Gradient" id=133]
offsets = PoolRealArray( 0.924, 0.928 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=134]
gradient = SubResource( 133 )

[sub_resource type="VisualShaderNodeTexture" id=135]
texture = SubResource( 134 )

[sub_resource type="VisualShaderNodeVectorOp" id=136]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=137]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=138]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 5, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=139]
offsets = PoolRealArray( 0.0192719, 0.152, 0.37045 )
colors = PoolColorArray( 0, 0, 0, 0, 0, 0.371094, 0.417969, 1, 0.11116, 0.823421, 0.917969, 1 )

[sub_resource type="GradientTexture" id=140]
gradient = SubResource( 139 )

[sub_resource type="VisualShaderNodeTexture" id=141]
texture = SubResource( 140 )

[sub_resource type="VisualShaderNodeVectorInterp" id=142]

[sub_resource type="VisualShaderNodeScalarUniform" id=143]
uniform_name = "prog"

[sub_resource type="Gradient" id=144]
offsets = PoolRealArray( 0.0969697, 0.10303, 0.90303, 0.906061 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=145]
gradient = SubResource( 144 )

[sub_resource type="VisualShaderNodeTexture" id=146]
texture = SubResource( 145 )

[sub_resource type="VisualShaderNodeVectorInterp" id=147]

[sub_resource type="Gradient" id=148]
offsets = PoolRealArray( 0.913043, 0.917874 )

[sub_resource type="GradientTexture" id=149]
gradient = SubResource( 148 )

[sub_resource type="VisualShaderNodeTexture" id=150]
texture = SubResource( 149 )

[sub_resource type="VisualShaderNodeVectorOp" id=151]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 6, 2, 6 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=152]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 2, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=153]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=154]
input_name = "normal"

[sub_resource type="Curve" id=155]
min_value = -1.5
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 1, -1.25 ), -1.25, 0.0, 1, 0 ]

[sub_resource type="CurveTexture" id=156]
curve = SubResource( 155 )

[sub_resource type="VisualShaderNodeTexture" id=157]
texture = SubResource( 156 )

[sub_resource type="VisualShaderNodeVectorOp" id=158]

[sub_resource type="VisualShaderNodeVectorDecompose" id=159]

[sub_resource type="VisualShaderNodeInput" id=160]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=161]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=162]

[sub_resource type="Gradient" id=163]
offsets = PoolRealArray( 0.315217, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 0.492188, 0.492188, 0.492188, 1 )

[sub_resource type="GradientTexture" id=164]
gradient = SubResource( 163 )

[sub_resource type="VisualShaderNodeTexture" id=165]
texture = SubResource( 164 )

[sub_resource type="VisualShaderNodeVectorOp" id=166]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=167]

[sub_resource type="VisualShaderNodeVectorOp" id=168]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1.5, 0.8 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=169]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 3.7, 0.45 ) ]
operator = 7

[sub_resource type="VisualShaderNodeVectorOp" id=170]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.5, 3.4, -0.45 ) ]
operator = 6

[sub_resource type="Gradient" id=171]
offsets = PoolRealArray( 0.421212, 0.448485, 0.475949, 0.524051, 0.551515, 0.572727 )
colors = PoolColorArray( 0, 0, 0, 1, 0.164063, 0.164063, 0.164063, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.101563, 0.101563, 0.101563, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=172]
gradient = SubResource( 171 )

[sub_resource type="VisualShaderNodeTexture" id=173]
texture = SubResource( 172 )

[sub_resource type="Gradient" id=174]
offsets = PoolRealArray( 0.312364, 0.316703, 0.347072, 0.349241 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=175]
gradient = SubResource( 174 )

[sub_resource type="VisualShaderNodeTexture" id=176]
texture = SubResource( 175 )

[sub_resource type="VisualShaderNodeScalarOp" id=177]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=178]

[sub_resource type="VisualShaderNodeVectorOp" id=179]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, -0.9 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=180]

[sub_resource type="Gradient" id=181]
offsets = PoolRealArray( 0.0909091, 0.0969697, 0.909091, 0.912121 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=182]
gradient = SubResource( 181 )

[sub_resource type="VisualShaderNodeTexture" id=183]
texture = SubResource( 182 )

[sub_resource type="VisualShaderNodeScalarOp" id=184]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=185]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0.4 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=186]

[sub_resource type="Gradient" id=187]
offsets = PoolRealArray( 0.313305, 0.315451, 0.35443, 0.35567 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=188]
gradient = SubResource( 187 )

[sub_resource type="VisualShaderNodeTexture" id=189]
texture = SubResource( 188 )

[sub_resource type="VisualShaderNodeVectorOp" id=190]

[sub_resource type="VisualShaderNodeVectorOp" id=191]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 5, 5, 0.94 ) ]
operator = 7

[sub_resource type="VisualShaderNodeVectorCompose" id=192]

[sub_resource type="Gradient" id=193]
offsets = PoolRealArray( 0.922705, 0.937198 )

[sub_resource type="GradientTexture" id=194]
gradient = SubResource( 193 )

[sub_resource type="VisualShaderNodeTexture" id=195]
texture = SubResource( 194 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=196]

[sub_resource type="VisualShaderNodeScalarOp" id=197]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=198]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=199]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=200]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=201]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=202]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=203]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=204]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=205]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=206]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=207]

[sub_resource type="VisualShaderNodeVectorInterp" id=208]

[sub_resource type="VisualShaderNodeVectorOp" id=209]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 3.55, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=210]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.3, 0 ) ]

[sub_resource type="VisualShaderNodeScalarUniform" id=211]
uniform_name = "rot"

[sub_resource type="VisualShaderNodeInput" id=212]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=213]

[sub_resource type="VisualShaderNodeScalarOp" id=214]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=215]
default_input_values = [ 0, 0.0, 1, 0.4 ]

[sub_resource type="VisualShaderNodeTexture" id=216]
texture = SubResource( 57 )

[sub_resource type="VisualShaderNodeScalarOp" id=217]
operator = 9

[sub_resource type="VisualShaderNodeScalarFunc" id=218]
function = 31

[sub_resource type="VisualShaderNodeScalarClamp" id=219]

[sub_resource type="VisualShaderNodeVectorOp" id=220]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.01, 0.05, 3 ) ]

[sub_resource type="VisualShaderNodeVectorInterp" id=221]

[sub_resource type="VisualShaderNodeTexture" id=222]
texture = SubResource( 62 )

[sub_resource type="VisualShaderNodeVectorOp" id=223]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 40, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=224]
uniform_name = "pos"

[sub_resource type="VisualShaderNodeVectorOp" id=225]

[sub_resource type="VisualShaderNodeVectorInterp" id=226]

[sub_resource type="VisualShaderNodeInput" id=227]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=228]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeInput" id=229]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=230]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 2, 0 ) ]

[sub_resource type="VisualShader" id=231]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_36;
uniform sampler2D tex_vtx_32;
uniform sampler2D tex_vtx_28;
uniform sampler2D tex_vtx_27;
uniform sampler2D tex_vtx_16;
uniform sampler2D tex_vtx_21;
uniform float rot;
uniform vec3 pos;
uniform sampler2D tex_vtx_4;
uniform sampler2D tex_vtx_11;
uniform sampler2D tex_vtx_60;
uniform float morph;
uniform sampler2D tex_frg_37;
uniform sampler2D tex_frg_33;
uniform sampler2D tex_frg_22;
uniform sampler2D tex_frg_25;
uniform sampler2D tex_frg_6;
uniform sampler2D tex_frg_26;
uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_9;
uniform sampler2D tex_frg_12;
uniform sampler2D tex_frg_17;
uniform sampler2D tex_frg_15;
uniform sampler2D tex_frg_71;
uniform sampler2D tex_frg_72;
uniform sampler2D tex_frg_75;
uniform sampler2D tex_frg_60;
uniform sampler2D tex_frg_69;
uniform float prog;
uniform sampler2D tex_frg_66;
uniform sampler2D tex_frg_54;
uniform sampler2D tex_frg_58;
uniform sampler2D tex_frg_79;
uniform sampler2D tex_frg_81;
uniform sampler2D tex_frg_83;
uniform sampler2D tex_frg_87;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_52;
uniform sampler2D tex_frg_45;
uniform sampler2D tex_frg_47;



void vertex() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// VectorOp:37
	vec3 n_in37p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out37p0 = vec3(n_out3p1) + n_in37p1;

// Texture:36
	vec4 tex_vtx_36_read = texture(tex_vtx_36, n_out37p0.xy);
	vec3 n_out36p0 = tex_vtx_36_read.rgb;
	float n_out36p1 = tex_vtx_36_read.a;

// Texture:32
	vec4 tex_vtx_32_read = texture(tex_vtx_32, UV.xy);
	vec3 n_out32p0 = tex_vtx_32_read.rgb;
	float n_out32p1 = tex_vtx_32_read.a;

// ScalarOp:33
	float n_out33p0 = dot(n_out36p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out32p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:34
	vec3 n_in34p1 = vec3(0.00000, 0.00000, 0.40000);
	vec3 n_out34p0 = vec3(n_out33p0) * n_in34p1;

// Texture:28
	vec4 tex_vtx_28_read = texture(tex_vtx_28, n_out37p0.xy);
	vec3 n_out28p0 = tex_vtx_28_read.rgb;
	float n_out28p1 = tex_vtx_28_read.a;

// Texture:27
	vec4 tex_vtx_27_read = texture(tex_vtx_27, UV.xy);
	vec3 n_out27p0 = tex_vtx_27_read.rgb;
	float n_out27p1 = tex_vtx_27_read.a;

// ScalarOp:29
	float n_out29p0 = dot(n_out28p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out27p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:30
	vec3 n_in30p1 = vec3(0.00000, 0.00000, -0.90000);
	vec3 n_out30p0 = vec3(n_out29p0) * n_in30p1;

// Input:8
	vec3 n_out8p0 = VERTEX;

// VectorOp:9
	vec3 n_in9p1 = vec3(0.00000, 2.00000, 0.00000);
	vec3 n_out9p0 = n_out8p0 + n_in9p1;

// Input:19
	vec3 n_out19p0 = vec3(UV, 0.0);

// VectorDecompose:20
	float n_out20p0 = n_out19p0.x;
	float n_out20p1 = n_out19p0.y;
	float n_out20p2 = n_out19p0.z;

// Texture:16
	vec4 tex_vtx_16_read = texture(tex_vtx_16, vec3(n_out20p1).xy);
	vec3 n_out16p0 = tex_vtx_16_read.rgb;
	float n_out16p1 = tex_vtx_16_read.a;

// VectorDecompose:18
	float n_out18p0 = n_out16p0.x;
	float n_out18p1 = n_out16p0.y;
	float n_out18p2 = n_out16p0.z;

// Input:15
	vec3 n_out15p0 = NORMAL;

// VectorOp:14
	vec3 n_out14p0 = vec3(n_out18p0) * n_out15p0;

// VectorOp:17
	vec3 n_out17p0 = n_out9p0 + n_out14p0;

// Texture:21
	vec4 tex_vtx_21_read = texture(tex_vtx_21, vec3(n_out20p1).xy);
	vec3 n_out21p0 = tex_vtx_21_read.rgb;
	float n_out21p1 = tex_vtx_21_read.a;

// VectorOp:22
	vec3 n_in22p1 = vec3(0.00000, -1.00000, 0.00000);
	vec3 n_out22p0 = n_out21p0 * n_in22p1;

// VectorOp:23
	vec3 n_out23p0 = n_out17p0 + n_out22p0;

// VectorOp:24
	vec3 n_in24p1 = vec3(1.00000, 1.50000, 0.80000);
	vec3 n_out24p0 = n_out23p0 * n_in24p1;

// VectorOp:25
	vec3 n_in25p1 = vec3(0.50000, 3.70000, 0.45000);
	vec3 n_out25p0 = min(n_out24p0, n_in25p1);

// VectorOp:26
	vec3 n_in26p1 = vec3(-0.50000, 3.40000, -0.45000);
	vec3 n_out26p0 = max(n_out25p0, n_in26p1);

// VectorOp:31
	vec3 n_out31p0 = n_out30p0 + n_out26p0;

// VectorOp:35
	vec3 n_out35p0 = n_out34p0 + n_out31p0;

// VectorOp:38
	vec3 n_in38p1 = vec3(5.00000, 5.00000, 0.94000);
	vec3 n_out38p0 = min(n_out35p0, n_in38p1);

// VectorOp:53
	vec3 n_in53p1 = vec3(0.00000, 3.55000, 0.00000);
	vec3 n_out53p0 = n_out38p0 - n_in53p1;

// VectorDecompose:40
	float n_out40p0 = n_out53p0.x;
	float n_out40p1 = n_out53p0.y;
	float n_out40p2 = n_out53p0.z;

// ScalarUniform:55
	float n_out55p0 = rot;

// ScalarFunc:42
	float n_out42p0 = cos(n_out55p0);

// ScalarOp:41
	float n_out41p0 = n_out40p1 * n_out42p0;

// ScalarFunc:43
	float n_out43p0 = sin(n_out55p0);

// ScalarOp:44
	float n_out44p0 = n_out40p2 * n_out43p0;

// ScalarOp:50
	float n_out50p0 = n_out41p0 + n_out44p0;

// ScalarFunc:45
	float n_out45p0 = cos(n_out55p0);

// ScalarOp:47
	float n_out47p0 = n_out40p2 * n_out45p0;

// ScalarFunc:46
	float n_out46p0 = sin(n_out55p0);

// ScalarOp:48
	float n_out48p0 = n_out40p1 * n_out46p0;

// ScalarOp:49
	float n_out49p0 = n_out47p0 - n_out48p0;

// VectorCompose:39
	vec3 n_out39p0 = vec3(n_out40p0, n_out50p0, n_out49p0);

// VectorUniform:69
	vec3 n_out69p0 = pos;

// VectorOp:54
	vec3 n_out54p0 = n_out39p0 + n_out69p0;

// VectorOp:64
	vec3 n_in64p1 = vec3(-0.01000, 0.05000, 3.00000);
	vec3 n_out64p0 = n_out53p0 + n_in64p1;

// VectorOp:68
	vec3 n_in68p1 = vec3(10.00000, 40.00000, 1.00000);
	vec3 n_out68p0 = n_out64p0 * n_in68p1;

// Texture:4
	vec4 tex_vtx_4_read = texture(tex_vtx_4, vec3(n_out3p1).xy);
	vec3 n_out4p0 = tex_vtx_4_read.rgb;
	float n_out4p1 = tex_vtx_4_read.a;

// VectorOp:5
	vec3 n_in5p1 = vec3(0.00000, -1.00000, 0.00000);
	vec3 n_out5p0 = n_out4p0 * n_in5p1;

// VectorOp:7
	vec3 n_out7p0 = n_out5p0 + n_out8p0;

// VectorOp:12
	vec3 n_in12p1 = vec3(6.00000, 2.00000, 6.00000);
	vec3 n_out12p0 = n_out7p0 * n_in12p1;

// VectorOp:13
	vec3 n_in13p1 = vec3(0.00000, 2.00000, 0.00000);
	vec3 n_out13p0 = n_out12p0 + n_in13p1;

// Texture:11
	vec4 tex_vtx_11_read = texture(tex_vtx_11, vec3(n_out3p1).xy);
	vec3 n_out11p0 = tex_vtx_11_read.rgb;
	float n_out11p1 = tex_vtx_11_read.a;

// VectorMix:52
	vec3 n_out52p0 = mix(n_out38p0, n_out13p0, n_out11p0);

// VectorDecompose:57
	float n_out57p0 = n_out52p0.x;
	float n_out57p1 = n_out52p0.y;
	float n_out57p2 = n_out52p0.z;

// ScalarOp:58
	float n_in58p1 = 0.10000;
	float n_out58p0 = n_out57p2 * n_in58p1;

// ScalarOp:59
	float n_in59p1 = 0.40000;
	float n_out59p0 = n_out58p0 + n_in59p1;

// Texture:60
	vec4 tex_vtx_60_read = texture(tex_vtx_60, vec3(n_out59p0).xy);
	vec3 n_out60p0 = tex_vtx_60_read.rgb;
	float n_out60p1 = tex_vtx_60_read.a;

// ScalarOp:61
	float n_in61p1 = 0.00000;
	float n_out61p0 = step(dot(n_out60p0, vec3(0.333333, 0.333333, 0.333333)), n_in61p1);

// ScalarFunc:62
	float n_out62p0 = 1.0 - n_out61p0;

// ScalarClamp:63
	float n_in63p1 = 0.00000;
	float n_in63p2 = 1.00000;
	float n_out63p0 = clamp(n_out62p0, n_in63p1, n_in63p2);

// VectorMix:65
	vec3 n_out65p0 = mix(n_out54p0, n_out68p0, vec3(n_out63p0));

// VectorMix:10
	vec3 n_out10p0 = mix(n_out65p0, n_out13p0, n_out11p0);

// Input:71
	vec3 n_out71p0 = VERTEX;

// ScalarUniform:72
	float n_out72p0 = morph;

// VectorMix:70
	vec3 n_out70p0 = mix(n_out10p0, n_out71p0, vec3(n_out72p0));

// Output:0
	VERTEX = n_out70p0;
	COLOR.rgb = n_out52p0;

}

void fragment() {
// Input:35
	vec3 n_out35p0 = COLOR.rgb;

// VectorDecompose:36
	float n_out36p0 = n_out35p0.x;
	float n_out36p1 = n_out35p0.y;
	float n_out36p2 = n_out35p0.z;

// ScalarOp:38
	float n_in38p1 = 3.00000;
	float n_out38p0 = n_out36p1 - n_in38p1;

// Texture:37
	vec4 tex_frg_37_read = texture(tex_frg_37, vec3(n_out38p0).xy);
	vec3 n_out37p0 = tex_frg_37_read.rgb;
	float n_out37p1 = tex_frg_37_read.a;

// Input:28
	vec3 n_out28p0 = COLOR.rgb;

// VectorDecompose:29
	float n_out29p0 = n_out28p0.x;
	float n_out29p1 = n_out28p0.y;
	float n_out29p2 = n_out28p0.z;

// ScalarOp:30
	float n_in30p1 = 0.10000;
	float n_out30p0 = n_out29p2 * n_in30p1;

// ScalarOp:31
	float n_in31p1 = 0.40000;
	float n_out31p0 = n_out30p0 + n_in31p1;

// Texture:33
	vec4 tex_frg_33_read = texture(tex_frg_33, vec3(n_out31p0).xy);
	vec3 n_out33p0 = tex_frg_33_read.rgb;
	float n_out33p1 = tex_frg_33_read.a;

// ScalarOp:40
	float n_in40p1 = 2.00000;
	float n_out40p0 = dot(n_out33p0, vec3(0.333333, 0.333333, 0.333333)) * n_in40p1;

// Input:23
	vec3 n_out23p0 = COLOR.rgb;

// VectorOp:24
	vec3 n_in24p1 = vec3(10.00000, 10.00000, 0.00000);
	vec3 n_out24p0 = n_out23p0 * n_in24p1;

// Texture:22
	vec4 tex_frg_22_read = texture(tex_frg_22, n_out24p0.xy);
	vec3 n_out22p0 = tex_frg_22_read.rgb;
	float n_out22p1 = tex_frg_22_read.a;

// Texture:25
	vec4 tex_frg_25_read = texture(tex_frg_25, n_out22p0.xy);
	vec3 n_out25p0 = tex_frg_25_read.rgb;
	float n_out25p1 = tex_frg_25_read.a;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out2p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Texture:26
	vec4 tex_frg_26_read = texture(tex_frg_26, n_out6p0.xy);
	vec3 n_out26p0 = tex_frg_26_read.rgb;
	float n_out26p1 = tex_frg_26_read.a;

// Color:27
	vec3 n_out27p0 = vec3(0.215686, 0.061736, 0.019608);
	float n_out27p1 = 1.000000;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, vec3(n_out3p1).xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, UV.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, n_out9p0.xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// ScalarOp:11
	float n_out11p0 = dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333)) + dot(n_out12p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarClamp:13
	float n_in13p1 = 0.00000;
	float n_in13p2 = 1.00000;
	float n_out13p0 = clamp(n_out11p0, n_in13p1, n_in13p2);

// VectorMix:20
	vec3 n_out20p0 = mix(n_out26p0, n_out27p0, vec3(n_out13p0));

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, vec3(n_out3p1).xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// Texture:15
	vec4 tex_frg_15_read = texture(tex_frg_15, UV.xy);
	vec3 n_out15p0 = tex_frg_15_read.rgb;
	float n_out15p1 = tex_frg_15_read.a;

// VectorOp:18
	vec3 n_out18p0 = n_out17p0 + n_out15p0;

// VectorClamp:19
	vec3 n_in19p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in19p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out19p0 = clamp(n_out18p0, n_in19p1, n_in19p2);

// VectorMix:21
	vec3 n_out21p0 = mix(n_out25p0, n_out20p0, n_out19p0);

// VectorOp:32
	vec3 n_out32p0 = vec3(n_out40p0) * n_out21p0;

// VectorOp:39
	vec3 n_out39p0 = n_out37p0 * n_out32p0;

// Input:61
	vec3 n_out61p0 = vec3(UV, 0.0);

// VectorOp:73
	vec3 n_in73p1 = vec3(1.00000, 3.00000, 0.00000);
	vec3 n_out73p0 = n_out61p0 * n_in73p1;

// Texture:71
	vec4 tex_frg_71_read = texture(tex_frg_71, n_out73p0.xy);
	vec3 n_out71p0 = tex_frg_71_read.rgb;
	float n_out71p1 = tex_frg_71_read.a;

// Texture:72
	vec4 tex_frg_72_read = texture(tex_frg_72, n_out71p0.xy);
	vec3 n_out72p0 = tex_frg_72_read.rgb;
	float n_out72p1 = tex_frg_72_read.a;

// Texture:75
	vec4 tex_frg_75_read = texture(tex_frg_75, UV.xy);
	vec3 n_out75p0 = tex_frg_75_read.rgb;
	float n_out75p1 = tex_frg_75_read.a;

// ScalarOp:76
	float n_in76p1 = 0.01000;
	float n_out76p0 = dot(n_out75p0, vec3(0.333333, 0.333333, 0.333333)) * n_in76p1;

// VectorOp:74
	vec3 n_out74p0 = n_out61p0 + vec3(n_out76p0);

// VectorOp:77
	vec3 n_in77p1 = vec3(0.01000, 0.00700, 0.00000);
	vec3 n_out77p0 = n_out74p0 - n_in77p1;

// VectorOp:62
	vec3 n_in62p1 = vec3(0.09000, 0.00000, 0.00000);
	vec3 n_out62p0 = n_out77p0 + n_in62p1;

// VectorOp:63
	vec3 n_in63p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out63p0 = mod(n_out62p0, n_in63p1);

// Texture:60
	vec4 tex_frg_60_read = texture(tex_frg_60, n_out63p0.xy);
	vec3 n_out60p0 = tex_frg_60_read.rgb;
	float n_out60p1 = tex_frg_60_read.a;

// VectorDecompose:64
	float n_out64p0 = n_out77p0.x;
	float n_out64p1 = n_out77p0.y;
	float n_out64p2 = n_out77p0.z;

// Texture:69
	vec4 tex_frg_69_read = texture(tex_frg_69, vec3(n_out64p1).xy);
	vec3 n_out69p0 = tex_frg_69_read.rgb;
	float n_out69p1 = tex_frg_69_read.a;

// ScalarUniform:89
	float n_out89p0 = prog;

// ScalarOp:65
	float n_out65p0 = n_out64p1 - n_out89p0;

// Texture:66
	vec4 tex_frg_66_read = texture(tex_frg_66, vec3(n_out65p0).xy);
	vec3 n_out66p0 = tex_frg_66_read.rgb;
	float n_out66p1 = tex_frg_66_read.a;

// ScalarOp:70
	float n_out70p0 = dot(n_out69p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out66p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:67
	vec3 n_out67p0 = vec3(n_out70p0) * vec3(n_out60p1);

// VectorMix:68
	vec3 n_out68p0 = mix(n_out72p0, n_out60p0, n_out67p0);

// Texture:54
	vec4 tex_frg_54_read = texture(tex_frg_54, vec3(n_out31p0).xy);
	vec3 n_out54p0 = tex_frg_54_read.rgb;
	float n_out54p1 = tex_frg_54_read.a;

// Input:50
	vec3 n_out50p0 = vec3(UV, 0.0);

// VectorDecompose:51
	float n_out51p0 = n_out50p0.x;
	float n_out51p1 = n_out50p0.y;
	float n_out51p2 = n_out50p0.z;

// Texture:58
	vec4 tex_frg_58_read = texture(tex_frg_58, vec3(n_out51p1).xy);
	vec3 n_out58p0 = tex_frg_58_read.rgb;
	float n_out58p1 = tex_frg_58_read.a;

// ScalarOp:57
	float n_out57p0 = dot(n_out54p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out58p0, vec3(0.333333, 0.333333, 0.333333));

// VectorMix:59
	vec3 n_out59p0 = mix(n_out39p0, n_out68p0, vec3(n_out57p0));

// VectorDecompose:78
	float n_out78p0 = n_out61p0.x;
	float n_out78p1 = n_out61p0.y;
	float n_out78p2 = n_out61p0.z;

// Texture:79
	vec4 tex_frg_79_read = texture(tex_frg_79, vec3(n_out78p1).xy);
	vec3 n_out79p0 = tex_frg_79_read.rgb;
	float n_out79p1 = tex_frg_79_read.a;

// Input:85
	vec3 n_out85p0 = vec3(UV, 0.0);

// VectorOp:86
	vec3 n_in86p1 = vec3(1.00000, 5.00000, 0.00000);
	vec3 n_out86p0 = n_out85p0 * n_in86p1;

// Texture:81
	vec4 tex_frg_81_read = texture(tex_frg_81, n_out86p0.xy);
	vec3 n_out81p0 = tex_frg_81_read.rgb;
	float n_out81p1 = tex_frg_81_read.a;

// Texture:83
	vec4 tex_frg_83_read = texture(tex_frg_83, vec3(n_out78p1).xy);
	vec3 n_out83p0 = tex_frg_83_read.rgb;
	float n_out83p1 = tex_frg_83_read.a;

// VectorOp:84
	vec3 n_out84p0 = n_out81p0 * n_out83p0;

// Texture:87
	vec4 tex_frg_87_read = texture(tex_frg_87, n_out84p0.xy);
	vec3 n_out87p0 = tex_frg_87_read.rgb;
	float n_out87p1 = tex_frg_87_read.a;

// VectorMix:88
	vec3 n_out88p0 = mix(n_out79p0, n_out87p0, vec3(n_out87p1));

// VectorMix:80
	vec3 n_out80p0 = mix(n_out59p0, n_out88p0, vec3(n_out79p1));

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, vec3(n_out3p1).xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out4p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarOp:56
	float n_in56p1 = 1.00000;
	float n_out56p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) * n_in56p1;

// Texture:52
	vec4 tex_frg_52_read = texture(tex_frg_52, vec3(n_out51p1).xy);
	vec3 n_out52p0 = tex_frg_52_read.rgb;
	float n_out52p1 = tex_frg_52_read.a;

// Texture:45
	vec4 tex_frg_45_read = texture(tex_frg_45, vec3(n_out31p0).xy);
	vec3 n_out45p0 = tex_frg_45_read.rgb;
	float n_out45p1 = tex_frg_45_read.a;

// Texture:47
	vec4 tex_frg_47_read = texture(tex_frg_47, n_out45p0.xy);
	vec3 n_out47p0 = tex_frg_47_read.rgb;
	float n_out47p1 = tex_frg_47_read.a;

// ScalarOp:53
	float n_out53p0 = dot(n_out52p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out47p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarFunc:46
	float n_out46p0 = round(n_out53p0);

// ScalarFunc:48
	float n_out48p0 = 1.0 - n_out46p0;

// ScalarOp:49
	float n_out49p0 = n_out56p0 * n_out48p0;

// Output:0
	ALBEDO = n_out80p0;
	ALPHA = n_out49p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 4622.05, 293.179 )
modes/cull = 2
modes/depth_draw = 3
flags/unshaded = true
nodes/vertex/0/position = Vector2( 5300, 340 )
nodes/vertex/2/node = SubResource( 161 )
nodes/vertex/2/position = Vector2( -240, 220 )
nodes/vertex/3/node = SubResource( 178 )
nodes/vertex/3/position = Vector2( -100, 220 )
nodes/vertex/4/node = SubResource( 195 )
nodes/vertex/4/position = Vector2( 120, 260 )
nodes/vertex/5/node = SubResource( 206 )
nodes/vertex/5/position = Vector2( 320, 300 )
nodes/vertex/7/node = SubResource( 225 )
nodes/vertex/7/position = Vector2( 500, 300 )
nodes/vertex/8/node = SubResource( 229 )
nodes/vertex/8/position = Vector2( 320, 420 )
nodes/vertex/9/node = SubResource( 230 )
nodes/vertex/9/position = Vector2( 520, 420 )
nodes/vertex/10/node = SubResource( 147 )
nodes/vertex/10/position = Vector2( 4820, 360 )
nodes/vertex/11/node = SubResource( 150 )
nodes/vertex/11/position = Vector2( 120, 460 )
nodes/vertex/12/node = SubResource( 151 )
nodes/vertex/12/position = Vector2( 740, 360 )
nodes/vertex/13/node = SubResource( 152 )
nodes/vertex/13/position = Vector2( 940, 360 )
nodes/vertex/14/node = SubResource( 153 )
nodes/vertex/14/position = Vector2( 760, 540 )
nodes/vertex/15/node = SubResource( 154 )
nodes/vertex/15/position = Vector2( 540, 740 )
nodes/vertex/16/node = SubResource( 157 )
nodes/vertex/16/position = Vector2( 300, 540 )
nodes/vertex/17/node = SubResource( 158 )
nodes/vertex/17/position = Vector2( 960, 480 )
nodes/vertex/18/node = SubResource( 159 )
nodes/vertex/18/position = Vector2( 520, 600 )
nodes/vertex/19/node = SubResource( 160 )
nodes/vertex/19/position = Vector2( -120, 660 )
nodes/vertex/20/node = SubResource( 162 )
nodes/vertex/20/position = Vector2( 20, 680 )
nodes/vertex/21/node = SubResource( 165 )
nodes/vertex/21/position = Vector2( 540, 800 )
nodes/vertex/22/node = SubResource( 166 )
nodes/vertex/22/position = Vector2( 940, 680 )
nodes/vertex/23/node = SubResource( 167 )
nodes/vertex/23/position = Vector2( 1160, 580 )
nodes/vertex/24/node = SubResource( 168 )
nodes/vertex/24/position = Vector2( 1360, 480 )
nodes/vertex/25/node = SubResource( 169 )
nodes/vertex/25/position = Vector2( 1540, 440 )
nodes/vertex/26/node = SubResource( 170 )
nodes/vertex/26/position = Vector2( 1720, 440 )
nodes/vertex/27/node = SubResource( 173 )
nodes/vertex/27/position = Vector2( 1456.84, 198.109 )
nodes/vertex/28/node = SubResource( 176 )
nodes/vertex/28/position = Vector2( 1480, 20 )
nodes/vertex/29/node = SubResource( 177 )
nodes/vertex/29/position = Vector2( 1680, 220 )
nodes/vertex/30/node = SubResource( 179 )
nodes/vertex/30/position = Vector2( 1840, 220 )
nodes/vertex/31/node = SubResource( 180 )
nodes/vertex/31/position = Vector2( 2060, 320 )
nodes/vertex/32/node = SubResource( 183 )
nodes/vertex/32/position = Vector2( 2040, 140 )
nodes/vertex/33/node = SubResource( 184 )
nodes/vertex/33/position = Vector2( 2260, 60 )
nodes/vertex/34/node = SubResource( 185 )
nodes/vertex/34/position = Vector2( 2460, 100 )
nodes/vertex/35/node = SubResource( 186 )
nodes/vertex/35/position = Vector2( 2660.2, 199.127 )
nodes/vertex/36/node = SubResource( 189 )
nodes/vertex/36/position = Vector2( 1480, -160 )
nodes/vertex/37/node = SubResource( 190 )
nodes/vertex/37/position = Vector2( 1300, 20 )
nodes/vertex/38/node = SubResource( 191 )
nodes/vertex/38/position = Vector2( 2840, 220 )
nodes/vertex/39/node = SubResource( 192 )
nodes/vertex/39/position = Vector2( 4120, 300 )
nodes/vertex/40/node = SubResource( 196 )
nodes/vertex/40/position = Vector2( 3500, 300 )
nodes/vertex/41/node = SubResource( 197 )
nodes/vertex/41/position = Vector2( 3760, 380 )
nodes/vertex/42/node = SubResource( 198 )
nodes/vertex/42/position = Vector2( 3440, 480 )
nodes/vertex/43/node = SubResource( 199 )
nodes/vertex/43/position = Vector2( 3440, 600 )
nodes/vertex/44/node = SubResource( 200 )
nodes/vertex/44/position = Vector2( 3700, 560 )
nodes/vertex/45/node = SubResource( 201 )
nodes/vertex/45/position = Vector2( 3460, 80 )
nodes/vertex/46/node = SubResource( 202 )
nodes/vertex/46/position = Vector2( 3480, 240 )
nodes/vertex/47/node = SubResource( 203 )
nodes/vertex/47/position = Vector2( 3720, 60 )
nodes/vertex/48/node = SubResource( 204 )
nodes/vertex/48/position = Vector2( 3720, 200 )
nodes/vertex/49/node = SubResource( 205 )
nodes/vertex/49/position = Vector2( 3920, 140 )
nodes/vertex/50/node = SubResource( 207 )
nodes/vertex/50/position = Vector2( 3880, 520 )
nodes/vertex/52/node = SubResource( 208 )
nodes/vertex/52/position = Vector2( 2340, -80 )
nodes/vertex/53/node = SubResource( 209 )
nodes/vertex/53/position = Vector2( 3040, 220 )
nodes/vertex/54/node = SubResource( 210 )
nodes/vertex/54/position = Vector2( 4340, 320 )
nodes/vertex/55/node = SubResource( 211 )
nodes/vertex/55/position = Vector2( 3140, 460 )
nodes/vertex/56/node = SubResource( 212 )
nodes/vertex/56/position = Vector2( 2315.8, -191.464 )
nodes/vertex/57/node = SubResource( 213 )
nodes/vertex/57/position = Vector2( 2495.8, -171.464 )
nodes/vertex/58/node = SubResource( 214 )
nodes/vertex/58/position = Vector2( 2695.8, -111.464 )
nodes/vertex/59/node = SubResource( 215 )
nodes/vertex/59/position = Vector2( 2855.8, -111.464 )
nodes/vertex/60/node = SubResource( 216 )
nodes/vertex/60/position = Vector2( 3020, -160 )
nodes/vertex/61/node = SubResource( 217 )
nodes/vertex/61/position = Vector2( 3180, -80 )
nodes/vertex/62/node = SubResource( 218 )
nodes/vertex/62/position = Vector2( 3340, -60 )
nodes/vertex/63/node = SubResource( 219 )
nodes/vertex/63/position = Vector2( 3540, -80 )
nodes/vertex/64/node = SubResource( 220 )
nodes/vertex/64/position = Vector2( 3260, 140 )
nodes/vertex/65/node = SubResource( 221 )
nodes/vertex/65/position = Vector2( 4680, 300 )
nodes/vertex/67/node = SubResource( 222 )
nodes/vertex/67/position = Vector2( 4400, 120 )
nodes/vertex/68/node = SubResource( 223 )
nodes/vertex/68/position = Vector2( 4520, 380 )
nodes/vertex/69/node = SubResource( 224 )
nodes/vertex/69/position = Vector2( 4120, 440 )
nodes/vertex/70/node = SubResource( 226 )
nodes/vertex/70/position = Vector2( 5100.58, 376.457 )
nodes/vertex/71/node = SubResource( 227 )
nodes/vertex/71/position = Vector2( 4860, 460 )
nodes/vertex/72/node = SubResource( 228 )
nodes/vertex/72/position = Vector2( 4880, 520 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 4, 0, 4, 0, 5, 0, 5, 0, 7, 0, 8, 0, 7, 1, 8, 0, 9, 0, 3, 1, 11, 0, 11, 0, 10, 2, 7, 0, 12, 0, 12, 0, 13, 0, 13, 0, 10, 1, 9, 0, 17, 0, 14, 0, 17, 1, 15, 0, 14, 1, 16, 0, 18, 0, 18, 0, 14, 0, 19, 0, 20, 0, 20, 1, 16, 0, 20, 1, 21, 0, 21, 0, 22, 0, 17, 0, 23, 0, 22, 0, 23, 1, 23, 0, 24, 0, 24, 0, 25, 0, 25, 0, 26, 0, 28, 0, 29, 0, 27, 0, 29, 1, 29, 0, 30, 0, 30, 0, 31, 0, 26, 0, 31, 1, 32, 0, 33, 1, 33, 0, 34, 0, 34, 0, 35, 0, 31, 0, 35, 1, 36, 0, 33, 0, 3, 1, 37, 0, 37, 0, 28, 0, 37, 0, 36, 0, 35, 0, 38, 0, 42, 0, 41, 1, 43, 0, 44, 1, 45, 0, 47, 1, 46, 0, 48, 1, 47, 0, 49, 0, 48, 0, 49, 1, 41, 0, 50, 0, 44, 0, 50, 1, 38, 0, 52, 0, 13, 0, 52, 1, 11, 0, 52, 2, 52, 0, 0, 6, 40, 2, 47, 0, 40, 2, 44, 0, 40, 1, 48, 0, 40, 0, 39, 0, 40, 1, 41, 0, 50, 0, 39, 1, 49, 0, 39, 2, 38, 0, 53, 0, 39, 0, 54, 0, 55, 0, 42, 0, 55, 0, 43, 0, 55, 0, 46, 0, 55, 0, 45, 0, 57, 2, 58, 0, 58, 0, 59, 0, 59, 0, 60, 0, 60, 0, 61, 0, 53, 0, 40, 0, 53, 0, 64, 0, 62, 0, 63, 0, 61, 0, 62, 0, 65, 0, 10, 0, 52, 0, 57, 0, 54, 0, 65, 0, 63, 0, 65, 2, 64, 0, 68, 0, 68, 0, 65, 1, 69, 0, 54, 1, 10, 0, 70, 0, 71, 0, 70, 1, 72, 0, 70, 2, 70, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 7160, 200 )
nodes/fragment/2/node = SubResource( 18 )
nodes/fragment/2/position = Vector2( 20, 380 )
nodes/fragment/3/node = SubResource( 35 )
nodes/fragment/3/position = Vector2( 340, 420 )
nodes/fragment/4/node = SubResource( 54 )
nodes/fragment/4/position = Vector2( 600, 420 )
nodes/fragment/5/node = SubResource( 75 )
nodes/fragment/5/position = Vector2( 780, 400 )
nodes/fragment/6/node = SubResource( 93 )
nodes/fragment/6/position = Vector2( 1860, 60 )
nodes/fragment/9/node = SubResource( 146 )
nodes/fragment/9/position = Vector2( 1580, 280 )
nodes/fragment/10/node = SubResource( 4 )
nodes/fragment/10/position = Vector2( 1620, 100 )
nodes/fragment/11/node = SubResource( 5 )
nodes/fragment/11/position = Vector2( 2001.54, 316.689 )
nodes/fragment/12/node = SubResource( 8 )
nodes/fragment/12/position = Vector2( 1800, 340 )
nodes/fragment/13/node = SubResource( 9 )
nodes/fragment/13/position = Vector2( 2180, 400 )
nodes/fragment/15/node = SubResource( 12 )
nodes/fragment/15/position = Vector2( 2300, 140 )
nodes/fragment/17/node = SubResource( 15 )
nodes/fragment/17/position = Vector2( 2340, -40 )
nodes/fragment/18/node = SubResource( 16 )
nodes/fragment/18/position = Vector2( 2560, 200 )
nodes/fragment/19/node = SubResource( 17 )
nodes/fragment/19/position = Vector2( 2720, 220 )
nodes/fragment/20/node = SubResource( 19 )
nodes/fragment/20/position = Vector2( 2380, 340 )
nodes/fragment/21/node = SubResource( 20 )
nodes/fragment/21/position = Vector2( 3640, 360 )
nodes/fragment/22/node = SubResource( 23 )
nodes/fragment/22/position = Vector2( 2880, 80 )
nodes/fragment/23/node = SubResource( 24 )
nodes/fragment/23/position = Vector2( 2500, 140 )
nodes/fragment/24/node = SubResource( 25 )
nodes/fragment/24/position = Vector2( 2700, 100 )
nodes/fragment/25/node = SubResource( 28 )
nodes/fragment/25/position = Vector2( 3120, 100 )
nodes/fragment/26/node = SubResource( 31 )
nodes/fragment/26/position = Vector2( 2100, 160 )
nodes/fragment/27/node = SubResource( 32 )
nodes/fragment/27/position = Vector2( 2200, 340 )
nodes/fragment/28/node = SubResource( 33 )
nodes/fragment/28/position = Vector2( 3300, 160 )
nodes/fragment/29/node = SubResource( 34 )
nodes/fragment/29/position = Vector2( 3480, 180 )
nodes/fragment/30/node = SubResource( 36 )
nodes/fragment/30/position = Vector2( 3680, 240 )
nodes/fragment/31/node = SubResource( 37 )
nodes/fragment/31/position = Vector2( 3840, 240 )
nodes/fragment/32/node = SubResource( 38 )
nodes/fragment/32/position = Vector2( 4420, 260 )
nodes/fragment/33/node = SubResource( 41 )
nodes/fragment/33/position = Vector2( 4020, 160 )
nodes/fragment/34/node = SubResource( 44 )
nodes/fragment/34/position = Vector2( 4560, -380 )
nodes/fragment/35/node = SubResource( 45 )
nodes/fragment/35/position = Vector2( 3580, 0 )
nodes/fragment/36/node = SubResource( 46 )
nodes/fragment/36/position = Vector2( 3820, 0 )
nodes/fragment/37/node = SubResource( 49 )
nodes/fragment/37/position = Vector2( 4320, 0 )
nodes/fragment/38/node = SubResource( 50 )
nodes/fragment/38/position = Vector2( 4136.04, 72.4714 )
nodes/fragment/39/node = SubResource( 51 )
nodes/fragment/39/position = Vector2( 4600, 220 )
nodes/fragment/40/node = SubResource( 55 )
nodes/fragment/40/position = Vector2( 4200, 180 )
nodes/fragment/41/node = SubResource( 58 )
nodes/fragment/41/position = Vector2( 4120, 400 )
nodes/fragment/42/node = SubResource( 59 )
nodes/fragment/42/position = Vector2( 4400, 400 )
nodes/fragment/43/node = SubResource( 60 )
nodes/fragment/43/position = Vector2( 4580, 360 )
nodes/fragment/44/node = SubResource( 63 )
nodes/fragment/44/position = Vector2( 4580, 420 )
nodes/fragment/45/node = SubResource( 66 )
nodes/fragment/45/position = Vector2( 4380, 500 )
nodes/fragment/46/node = SubResource( 67 )
nodes/fragment/46/position = Vector2( 5220, 480 )
nodes/fragment/47/node = SubResource( 70 )
nodes/fragment/47/position = Vector2( 4800, 440 )
nodes/fragment/48/node = SubResource( 71 )
nodes/fragment/48/position = Vector2( 5320, 420 )
nodes/fragment/49/node = SubResource( 72 )
nodes/fragment/49/position = Vector2( 5700, 340 )
nodes/fragment/50/node = SubResource( 76 )
nodes/fragment/50/position = Vector2( 4740, 300 )
nodes/fragment/51/node = SubResource( 77 )
nodes/fragment/51/position = Vector2( 4900, 300 )
nodes/fragment/52/node = SubResource( 80 )
nodes/fragment/52/position = Vector2( 5120, 220 )
nodes/fragment/53/node = SubResource( 81 )
nodes/fragment/53/position = Vector2( 5020, 440 )
nodes/fragment/54/node = SubResource( 84 )
nodes/fragment/54/position = Vector2( 5380, 100 )
nodes/fragment/56/node = SubResource( 85 )
nodes/fragment/56/position = Vector2( 5520, 320 )
nodes/fragment/57/node = SubResource( 86 )
nodes/fragment/57/position = Vector2( 5680, 220 )
nodes/fragment/58/node = SubResource( 89 )
nodes/fragment/58/position = Vector2( 5360, 280 )
nodes/fragment/59/node = SubResource( 90 )
nodes/fragment/59/position = Vector2( 6080, 120 )
nodes/fragment/60/node = SubResource( 96 )
nodes/fragment/60/position = Vector2( 5600, 0 )
nodes/fragment/61/node = SubResource( 97 )
nodes/fragment/61/position = Vector2( 4540, -220 )
nodes/fragment/62/node = SubResource( 98 )
nodes/fragment/62/position = Vector2( 5240, -60 )
nodes/fragment/63/node = SubResource( 99 )
nodes/fragment/63/position = Vector2( 5420, -20 )
nodes/fragment/64/node = SubResource( 100 )
nodes/fragment/64/position = Vector2( 5040, -160 )
nodes/fragment/65/node = SubResource( 101 )
nodes/fragment/65/position = Vector2( 5240, -200 )
nodes/fragment/66/node = SubResource( 104 )
nodes/fragment/66/position = Vector2( 5420, -180 )
nodes/fragment/67/node = SubResource( 105 )
nodes/fragment/67/position = Vector2( 5780, -40 )
nodes/fragment/68/node = SubResource( 106 )
nodes/fragment/68/position = Vector2( 6020, -20 )
nodes/fragment/69/node = SubResource( 109 )
nodes/fragment/69/position = Vector2( 5240, -380 )
nodes/fragment/70/node = SubResource( 110 )
nodes/fragment/70/position = Vector2( 5620, -160 )
nodes/fragment/71/node = SubResource( 113 )
nodes/fragment/71/position = Vector2( 5620, -380 )
nodes/fragment/72/node = SubResource( 116 )
nodes/fragment/72/position = Vector2( 5860, -220 )
nodes/fragment/73/node = SubResource( 117 )
nodes/fragment/73/position = Vector2( 5060, -260 )
nodes/fragment/74/node = SubResource( 118 )
nodes/fragment/74/position = Vector2( 4740, -160 )
nodes/fragment/75/node = SubResource( 121 )
nodes/fragment/75/position = Vector2( 4320, -200 )
nodes/fragment/76/node = SubResource( 122 )
nodes/fragment/76/position = Vector2( 4540, -100 )
nodes/fragment/77/node = SubResource( 123 )
nodes/fragment/77/position = Vector2( 4900, -60 )
nodes/fragment/78/node = SubResource( 124 )
nodes/fragment/78/position = Vector2( 4960, -480 )
nodes/fragment/79/node = SubResource( 127 )
nodes/fragment/79/position = Vector2( 6220, -40 )
nodes/fragment/80/node = SubResource( 128 )
nodes/fragment/80/position = Vector2( 6640, 180 )
nodes/fragment/81/node = SubResource( 131 )
nodes/fragment/81/position = Vector2( 6180, -460 )
nodes/fragment/82/node = SubResource( 132 )
nodes/fragment/82/position = Vector2( 6500, -40 )
nodes/fragment/83/node = SubResource( 135 )
nodes/fragment/83/position = Vector2( 6180, -240 )
nodes/fragment/84/node = SubResource( 136 )
nodes/fragment/84/position = Vector2( 6400, -240 )
nodes/fragment/85/node = SubResource( 137 )
nodes/fragment/85/position = Vector2( 5820, -360 )
nodes/fragment/86/node = SubResource( 138 )
nodes/fragment/86/position = Vector2( 6000, -360 )
nodes/fragment/87/node = SubResource( 141 )
nodes/fragment/87/position = Vector2( 6600, -260 )
nodes/fragment/88/node = SubResource( 142 )
nodes/fragment/88/position = Vector2( 6820, -80 )
nodes/fragment/89/node = SubResource( 143 )
nodes/fragment/89/position = Vector2( 5060, -40 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 4, 0, 4, 0, 5, 0, 2, 0, 6, 0, 3, 1, 10, 0, 10, 0, 11, 0, 9, 0, 12, 0, 12, 0, 11, 1, 11, 0, 13, 0, 3, 1, 17, 0, 13, 0, 20, 2, 18, 0, 19, 0, 19, 0, 21, 2, 20, 0, 21, 1, 23, 0, 24, 0, 24, 0, 22, 0, 15, 0, 18, 1, 17, 0, 18, 0, 22, 0, 25, 0, 25, 0, 21, 0, 6, 0, 26, 0, 26, 0, 20, 0, 27, 0, 20, 1, 28, 0, 29, 0, 29, 2, 30, 0, 30, 0, 31, 0, 21, 0, 32, 1, 31, 0, 33, 0, 35, 0, 36, 0, 36, 1, 38, 0, 38, 0, 37, 0, 37, 0, 39, 0, 33, 0, 40, 0, 40, 0, 32, 0, 32, 0, 39, 1, 31, 0, 41, 0, 42, 0, 43, 0, 41, 0, 44, 0, 41, 0, 42, 0, 31, 0, 45, 0, 45, 0, 47, 0, 46, 0, 48, 0, 48, 0, 49, 1, 50, 0, 51, 0, 51, 1, 52, 0, 52, 0, 53, 0, 47, 0, 53, 1, 53, 0, 46, 0, 31, 0, 54, 0, 5, 0, 56, 0, 56, 0, 49, 0, 54, 0, 57, 0, 49, 0, 0, 1, 51, 1, 58, 0, 58, 0, 57, 1, 39, 0, 59, 0, 57, 0, 59, 2, 62, 0, 63, 0, 63, 0, 60, 0, 64, 1, 65, 0, 65, 0, 66, 0, 60, 1, 67, 1, 68, 0, 59, 1, 60, 0, 68, 1, 67, 0, 68, 2, 64, 1, 69, 0, 69, 0, 70, 0, 66, 0, 70, 1, 70, 0, 67, 0, 71, 0, 72, 0, 72, 0, 68, 0, 61, 0, 73, 0, 73, 0, 71, 0, 61, 0, 74, 0, 75, 0, 76, 0, 76, 0, 74, 1, 74, 0, 77, 0, 77, 0, 64, 0, 77, 0, 62, 0, 61, 0, 78, 0, 78, 1, 79, 0, 79, 1, 80, 2, 59, 0, 80, 0, 80, 0, 0, 0, 79, 0, 82, 1, 78, 1, 83, 0, 81, 0, 84, 0, 83, 0, 84, 1, 85, 0, 86, 0, 86, 0, 81, 0, 84, 0, 87, 0, 87, 0, 82, 0, 87, 1, 88, 2, 88, 0, 80, 1, 79, 0, 88, 0, 87, 0, 88, 1, 89, 0, 65, 1 )

[sub_resource type="ShaderMaterial" id=232]
shader = SubResource( 231 )
shader_param/rot = -1.52
shader_param/pos = Vector3( 0.14, 0, 0 )
shader_param/morph = 1.0
shader_param/prog = 0.2

[sub_resource type="Animation" id=233]
length = 5.1
tracks/0/type = "value"
tracks/0/path = NodePath("painting:material/0:shader_param/rot")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.1, 2.1, 2.7, 4.1, 4.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ -1.52, -1.52, -1.52, 0.06, 0.06, 0.1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("painting:material/0:shader_param/pos")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.1, 1.9, 3, 3.7, 4.3, 4.7, 5.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 0.535886, 0.90125, 0.68302 ),
"update": 0,
"values": [ Vector3( 0.14, 0, 0 ), Vector3( 0.14, 0, 0 ), Vector3( 0.14, 2.84, 0 ), Vector3( 0.14, 2.84, 0 ), Vector3( 0.14, 2.84, 3.24 ), Vector3( 0.14, 2.84, 3.24 ), Vector3( 0.14, 0.585, 3.15 ), Vector3( 0.14, 0.585, 3.04 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("painting:material/0:shader_param/prog")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.1, 4.3, 4.4, 4.5, 4.6, 4.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.2, 0.2, 0.2, 0.209, 0.214, 0.215, 0.217 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("painting:material/0:shader_param/morph")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.4, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0 ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="painting" type="MeshInstance" parent="."]
extra_cull_margin = 4.0
mesh = SubResource( 1 )
material/0 = SubResource( 232 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 233 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( -0.710665, -0.0989217, 0.696542, 0, 0.990065, 0.140607, -0.703531, 0.0999248, -0.703604, 7.62001, 2.66349, -4.00211 )
