[gd_scene load_steps=107 format=2]

[ext_resource path="res://addons/shaderV/rgba/noise/worley2d.gd" type="Script" id=1]
[ext_resource path="res://addons/shaderV/rgba/noise/worley3d.gd" type="Script" id=2]
[ext_resource path="res://60fps image sequence export.gd" type="Script" id=3]

[sub_resource type="PlaneMesh" id=1]
subdivide_width = 256
subdivide_depth = 256

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0, 0.0819672, 0.1606, 0.163934, 0.344262, 0.373771 )
colors = PoolColorArray( 0.195313, 0, 0, 1, 1, 1, 1, 1, 0.078125, 0.078125, 0.078125, 1, 0.0507813, 0.0507813, 0.0507813, 1, 0.222656, 0.222656, 0.222656, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = SubResource( 3 )

[sub_resource type="OpenSimplexNoise" id=5]
period = 70.9

[sub_resource type="NoiseTexture" id=6]
noise = SubResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = SubResource( 6 )

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0.388889, 0.404321 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = SubResource( 9 )

[sub_resource type="Gradient" id=11]
offsets = PoolRealArray( 0.511828, 0.55243, 0.554987, 0.576017, 0.61242, 0.638116, 0.642398, 0.688172 )
colors = PoolColorArray( 0, 0, 0, 0, 0.179688, 0.179688, 0.179688, 1, 0, 0.682353, 0.670588, 1, 0, 1, 0.976471, 1, 0, 1, 0.976471, 1, 0, 0.682353, 0.670588, 1, 0.195313, 0.195313, 0.195313, 1, 0.403922, 0.180392, 0, 0 )

[sub_resource type="GradientTexture" id=12]
gradient = SubResource( 11 )

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = SubResource( 12 )

[sub_resource type="VisualShaderNodeVectorInterp" id=14]

[sub_resource type="VisualShaderNodeCustom" id=15]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=16]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=18]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 10, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.4 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=21]

[sub_resource type="VisualShaderNodeVectorOp" id=22]

[sub_resource type="Gradient" id=23]
offsets = PoolRealArray( 0.550538, 0.554987, 0.576017, 0.63871, 0.645161 )
colors = PoolColorArray( 0, 0, 0, 0, 0, 0.682353, 0.670588, 1, 0, 1, 0.976471, 1, 0, 1, 0.976471, 1, 0.403922, 0.180392, 0, 0 )

[sub_resource type="GradientTexture" id=24]
gradient = SubResource( 23 )

[sub_resource type="VisualShaderNodeTexture" id=25]
texture = SubResource( 24 )

[sub_resource type="VisualShaderNodeCustom" id=26]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1, 4, 0 ]
script = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorLen" id=27]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorInterp" id=29]
output_port_for_preview = 0

[sub_resource type="OpenSimplexNoise" id=30]
period = 5.1
persistence = 1.0

[sub_resource type="NoiseTexture" id=31]
noise = SubResource( 30 )

[sub_resource type="VisualShaderNodeTexture" id=32]
texture = SubResource( 31 )

[sub_resource type="Gradient" id=33]
offsets = PoolRealArray( 0.576017, 0.639, 0.639676, 0.684211, 0.720648 )
colors = PoolColorArray( 0.192157, 0.192157, 0.192157, 0, 1, 1, 1, 0, 0.277344, 0.277344, 0.277344, 1, 0.898438, 0.898438, 0.898438, 1, 0.907792, 0.907792, 0.907792, 1 )

[sub_resource type="GradientTexture" id=34]
gradient = SubResource( 33 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = SubResource( 34 )

[sub_resource type="VisualShaderNodeVectorOp" id=36]
operator = 2

[sub_resource type="Gradient" id=37]
colors = PoolColorArray( 0.238281, 0.217804, 0, 1, 1, 0.926514, 0.328125, 1 )

[sub_resource type="GradientTexture" id=38]
gradient = SubResource( 37 )

[sub_resource type="VisualShaderNodeTexture" id=39]
texture = SubResource( 38 )

[sub_resource type="VisualShaderNodeVectorOp" id=40]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.3, 1.3, 1.3 ) ]
operator = 5

[sub_resource type="VisualShaderNodeVectorOp" id=41]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 3, 3 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=42]
input_name = "uv"

[sub_resource type="VisualShaderNodeCustom" id=43]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=44]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.85, 0 ) ]
operator = 1

[sub_resource type="Gradient" id=45]
offsets = PoolRealArray( 0, 0.165992, 0.465587 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=46]
gradient = SubResource( 45 )

[sub_resource type="VisualShaderNodeTexture" id=47]
output_port_for_preview = 0
texture = SubResource( 46 )

[sub_resource type="VisualShaderNodeVectorInterp" id=48]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=49]
operator = 2

[sub_resource type="Gradient" id=50]
offsets = PoolRealArray( 0, 0.145749, 1 )
colors = PoolColorArray( 0, 0.101563, 0.00634766, 1, 0, 0.234375, 0.0146484, 1, 0.171875, 1, 0, 1 )

[sub_resource type="GradientTexture" id=51]
gradient = SubResource( 50 )

[sub_resource type="VisualShaderNodeTexture" id=52]
texture = SubResource( 51 )

[sub_resource type="VisualShaderNodeVectorOp" id=53]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=54]
offsets = PoolRealArray( 0.757085, 0.781377 )

[sub_resource type="GradientTexture" id=55]
gradient = SubResource( 54 )

[sub_resource type="VisualShaderNodeTexture" id=56]
texture = SubResource( 55 )

[sub_resource type="OpenSimplexNoise" id=57]
period = 68.8

[sub_resource type="NoiseTexture" id=58]
noise = SubResource( 57 )

[sub_resource type="VisualShaderNodeTexture" id=59]
texture = SubResource( 58 )

[sub_resource type="VisualShaderNodeScalarOp" id=60]
default_input_values = [ 0, 0.0, 1, 0.15 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=61]

[sub_resource type="Gradient" id=62]
offsets = PoolRealArray( 0, 0.081761, 0.339623 )
colors = PoolColorArray( 0.515625, 0.515625, 0.515625, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=63]
gradient = SubResource( 62 )

[sub_resource type="VisualShaderNodeTexture" id=64]
texture = SubResource( 63 )

[sub_resource type="VisualShaderNodeScalarClamp" id=65]

[sub_resource type="VisualShaderNodeVectorOp" id=66]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.7, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=67]

[sub_resource type="VisualShaderNodeInput" id=68]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=69]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorLen" id=70]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=71]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.85, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=72]
texture = SubResource( 6 )

[sub_resource type="VisualShaderNodeScalarOp" id=73]
default_input_values = [ 0, 0.0, 1, 0.15 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=74]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=75]

[sub_resource type="VisualShaderNodeTexture" id=76]
texture = SubResource( 9 )

[sub_resource type="VisualShaderNodeVectorOp" id=77]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.02, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=78]

[sub_resource type="Gradient" id=79]
offsets = PoolRealArray( 0.503226, 0.550321, 0.554604, 0.576017, 0.61242, 0.638116, 0.642398, 0.690323 )
colors = PoolColorArray( 0, 0, 0, 0, 0.328125, 0.328125, 0.328125, 1, 0, 0.682353, 0.670588, 1, 0, 1, 0.976471, 1, 0, 1, 0.976471, 1, 0, 0.682353, 0.670588, 1, 0.329412, 0.329412, 0.329412, 1, 0.402344, 0.179169, 0, 0 )

[sub_resource type="GradientTexture" id=80]
gradient = SubResource( 79 )

[sub_resource type="VisualShaderNodeTexture" id=81]
texture = SubResource( 80 )

[sub_resource type="VisualShaderNodeVectorOp" id=82]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -0.08, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=83]

[sub_resource type="VisualShaderNodeCustom" id=84]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorLen" id=85]
output_port_for_preview = 0

[sub_resource type="Gradient" id=86]
offsets = PoolRealArray( 0, 0.0283401, 0.0566802, 0.109312, 0.129555, 0.206478 )
colors = PoolColorArray( 0.953125, 0.953125, 0.953125, 1, 0.9375, 0.9375, 0.9375, 1, 0.933594, 0.933594, 0.933594, 1, 0.734375, 0.734375, 0.734375, 1, 0, 0, 0, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=87]
gradient = SubResource( 86 )

[sub_resource type="VisualShaderNodeTexture" id=88]
output_port_for_preview = 0
texture = SubResource( 87 )

[sub_resource type="VisualShaderNodeVectorOp" id=89]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=90]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=91]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=92]
texture = SubResource( 55 )

[sub_resource type="VisualShaderNodeVectorOp" id=93]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.15, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=94]

[sub_resource type="VisualShaderNodeVectorOp" id=95]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.85, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=96]
texture = SubResource( 58 )

[sub_resource type="VisualShaderNodeScalarOp" id=97]
default_input_values = [ 0, 0.0, 1, 0.15 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=98]

[sub_resource type="VisualShaderNodeTexture" id=99]
texture = SubResource( 63 )

[sub_resource type="VisualShaderNodeScalarOp" id=100]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="VisualShader" id=101]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_vtx_5;
uniform sampler2D tex_vtx_8;
uniform sampler2D tex_vtx_18;
uniform sampler2D tex_vtx_21;
uniform sampler2D tex_vtx_26;
uniform sampler2D tex_vtx_34;
uniform sampler2D tex_vtx_30;
uniform sampler2D tex_frg_11;
uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_14;
uniform sampler2D tex_frg_28;
uniform sampler2D tex_frg_33;
uniform sampler2D tex_frg_32;
uniform sampler2D tex_frg_35;
uniform sampler2D tex_frg_40;
uniform sampler2D tex_frg_43;
uniform sampler2D tex_frg_45;


// Worley2D

vec2 cellular2dNoiseFunc(vec2 P, float _jitter_w2d) {
	float K = 0.142857142857; // 1/7
	float Ko = 0.428571428571; // 3/7
	
	vec2 Pi = floor(P) - floor(floor(P) * (1.0 / 289.0)) * 289.0;
	vec2 Pf = fract(P);
	vec3 oi = vec3(-1.0, 0.0, 1.0);
	vec3 of = vec3(-0.5, 0.5, 1.5);
	vec3 px = (34.0*(Pi.x+oi)+1.0)*(Pi.x+oi)-floor((34.0*(Pi.x+oi)+1.0)*(Pi.x+oi)*(1.0/289.0))* 289.0;
	vec3 p = (34.0*(px.x+Pi.y+ oi)+1.0)*(px.x+Pi.y+ oi)-floor((34.0*(px.x+Pi.y+oi)+1.0)*(px.x+Pi.y+ oi)*(1.0/289.0))*289.0;
	vec3 ox = fract(p*K) - Ko;
	vec3 oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	vec3 dx = Pf.x + 0.5 + _jitter_w2d*ox;
	vec3 dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d1 = dx * dx + dy * dy;
	p = (34.0*(px.y+Pi.y+oi)+1.0)*(px.y+Pi.y+oi)-floor((34.0*(px.y+Pi.y+oi)+1.0)*(px.y+Pi.y+oi)*(1.0/289.0))*289.0;
	ox = fract(p*K) - Ko;
	oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	dx = Pf.x - 0.5 + _jitter_w2d*ox;
	dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d2 = dx * dx + dy * dy;
	p = (34.0*(px.z+Pi.y+oi)+1.0)*(px.z+Pi.y+oi)-floor((34.0*(px.z+Pi.y+oi)+1.0)*(px.z+Pi.y+oi)*(1.0/289.0))*289.0;
	ox = fract(p*K) - Ko;
	oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	dx = Pf.x - 1.5 + _jitter_w2d*ox;
	dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d3 = dx * dx + dy * dy;
	vec3 d1a = min(d1, d2);
	d2 = max(d1, d2);
	d2 = min(d2, d3);
	d1 = min(d1a, d2);
	d2 = max(d1a, d2);
	d1.xy = (d1.x < d1.y) ? d1.xy : d1.yx;
	d1.xz = (d1.x < d1.z) ? d1.xz : d1.zx;
	d1.yz = min(d1.yz, d2.yz);
	d1.y = min(d1.y, d1.z);
	d1.y = min(d1.y, d2.x);
	return sqrt(d1.xy);
}


void vertex() {
// Texture:5
	vec4 tex_vtx_5_read = texture(tex_vtx_5, UV.xy);
	vec3 n_out5p0 = tex_vtx_5_read.rgb;
	float n_out5p1 = tex_vtx_5_read.a;

// ScalarOp:6
	float n_in6p1 = 0.15000;
	float n_out6p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) * n_in6p1;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:7
	vec3 n_out7p0 = vec3(n_out6p0) + n_out2p0;

// VectorOp:4
	vec3 n_in4p1 = vec3(0.25000, 0.85000, 0.00000);
	vec3 n_out4p0 = n_out7p0 - n_in4p1;

// VectorLen:3
	float n_out3p0 = length(n_out4p0);

// Texture:8
	vec4 tex_vtx_8_read = texture(tex_vtx_8, vec3(n_out3p0).xy);
	vec3 n_out8p0 = tex_vtx_8_read.rgb;
	float n_out8p1 = tex_vtx_8_read.a;

// ScalarOp:9
	float n_in9p1 = 2.00000;
	float n_out9p0 = pow(dot(n_out8p0, vec3(0.333333, 0.333333, 0.333333)), n_in9p1);

// ScalarClamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out9p0, n_in10p1, n_in10p2);

// VectorOp:11
	vec3 n_in11p1 = vec3(0.00000, 0.70000, 0.00000);
	vec3 n_out11p0 = vec3(n_out10p0) * n_in11p1;

// Input:13
	vec3 n_out13p0 = VERTEX;

// VectorOp:12
	vec3 n_out12p0 = n_out11p0 + n_out13p0;

// Texture:18
	vec4 tex_vtx_18_read = texture(tex_vtx_18, UV.xy);
	vec3 n_out18p0 = tex_vtx_18_read.rgb;
	float n_out18p1 = tex_vtx_18_read.a;

// ScalarOp:19
	float n_in19p1 = 0.15000;
	float n_out19p0 = dot(n_out18p0, vec3(0.333333, 0.333333, 0.333333)) * n_in19p1;

// Input:15
	vec3 n_out15p0 = vec3(UV, 0.0);

// VectorOp:20
	vec3 n_out20p0 = vec3(n_out19p0) + n_out15p0;

// VectorOp:17
	vec3 n_in17p1 = vec3(0.25000, 0.85000, 0.00000);
	vec3 n_out17p0 = n_out20p0 - n_in17p1;

// VectorLen:16
	float n_out16p0 = length(n_out17p0);

// Texture:21
	vec4 tex_vtx_21_read = texture(tex_vtx_21, vec3(n_out16p0).xy);
	vec3 n_out21p0 = tex_vtx_21_read.rgb;
	float n_out21p1 = tex_vtx_21_read.a;

// VectorOp:24
	vec3 n_in24p1 = vec3(0.00000, 0.02000, 0.00000);
	vec3 n_out24p0 = n_out21p0 * n_in24p1;

// VectorOp:25
	vec3 n_out25p0 = n_out12p0 + n_out24p0;

// Texture:26
	vec4 tex_vtx_26_read = texture(tex_vtx_26, vec3(n_out16p0).xy);
	vec3 n_out26p0 = tex_vtx_26_read.rgb;
	float n_out26p1 = tex_vtx_26_read.a;

// VectorOp:27
	vec3 n_in27p1 = vec3(0.00000, -0.08000, 0.00000);
	vec3 n_out27p0 = vec3(n_out26p1) * n_in27p1;

// VectorOp:28
	vec3 n_out28p0 = n_out25p0 + n_out27p0;

// Texture:34
	vec4 tex_vtx_34_read = texture(tex_vtx_34, vec3(n_out16p0).xy);
	vec3 n_out34p0 = tex_vtx_34_read.rgb;
	float n_out34p1 = tex_vtx_34_read.a;

// Input:32
	vec3 n_out32p0 = vec3(UV, 0.0);

// VectorOp:31
	vec3 n_in31p1 = vec3(2.00000, 2.00000, 0.00000);
	vec3 n_out31p0 = n_out32p0 * n_in31p1;

// Worley2D:29
	vec3 n_in29p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in29p2 = 5.00000;
	float n_in29p3 = 1.00000;
	float n_out29p0;
	float n_out29p1;
	{
		vec2 n_out29p0n_out29p1 = cellular2dNoiseFunc((n_out31p0.xy+n_in29p1.xy)*n_in29p2, min(max(n_in29p3, 0.0), 1.0));
		n_out29p0 = n_out29p0n_out29p1.x;
		n_out29p1 = n_out29p0n_out29p1.y;
	}

// Texture:30
	vec4 tex_vtx_30_read = texture(tex_vtx_30, vec3(n_out29p0).xy);
	vec3 n_out30p0 = tex_vtx_30_read.rgb;
	float n_out30p1 = tex_vtx_30_read.a;

// ScalarOp:33
	float n_out33p0 = dot(n_out34p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out30p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:35
	vec3 n_in35p1 = vec3(0.00000, 0.15000, 0.00000);
	vec3 n_out35p0 = vec3(n_out33p0) * n_in35p1;

// VectorOp:36
	vec3 n_out36p0 = n_out28p0 + n_out35p0;

// Output:0
	VERTEX = n_out36p0;

}

void fragment() {
// Texture:11
	vec4 tex_frg_11_read = texture(tex_frg_11, UV.xy);
	vec3 n_out11p0 = tex_frg_11_read.rgb;
	float n_out11p1 = tex_frg_11_read.a;

// ScalarOp:6
	float n_in6p1 = 0.15000;
	float n_out6p0 = dot(n_out11p0, vec3(0.333333, 0.333333, 0.333333)) * n_in6p1;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:7
	vec3 n_out7p0 = vec3(n_out6p0) + n_out2p0;

// VectorOp:4
	vec3 n_in4p1 = vec3(0.25000, 0.85000, 0.00000);
	vec3 n_out4p0 = n_out7p0 - n_in4p1;

// VectorLen:3
	float n_out3p0 = length(n_out4p0);

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, vec3(n_out3p0).xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, vec3(n_out3p0).xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// Input:20
	vec3 n_out20p0 = vec3(UV, 0.0);

// VectorOp:21
	vec3 n_in21p1 = vec3(10.00000, 10.00000, 0.00000);
	vec3 n_out21p0 = n_out20p0 * n_in21p1;

// Worley2D:19
	vec3 n_in19p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in19p2 = 5.00000;
	float n_in19p3 = 1.00000;
	float n_out19p0;
	float n_out19p1;
	{
		vec2 n_out19p0n_out19p1 = cellular2dNoiseFunc((n_out21p0.xy+n_in19p1.xy)*n_in19p2, min(max(n_in19p3, 0.0), 1.0));
		n_out19p0 = n_out19p0n_out19p1.x;
		n_out19p1 = n_out19p0n_out19p1.y;
	}

// ScalarOp:22
	float n_in22p1 = 4.00000;
	float n_out22p0 = pow(n_out19p0, n_in22p1);

// ScalarOp:23
	float n_in23p1 = 0.40000;
	float n_out23p0 = n_out22p0 * n_in23p1;

// Texture:28
	vec4 tex_frg_28_read = texture(tex_frg_28, vec3(n_out3p0).xy);
	vec3 n_out28p0 = tex_frg_28_read.rgb;
	float n_out28p1 = tex_frg_28_read.a;

// VectorMix:25
	vec3 n_out25p0 = mix(n_out14p0, vec3(n_out23p0), vec3(n_out28p1));

// VectorOp:27
	vec3 n_out27p0 = n_out25p0 + n_out14p0;

// VectorMix:15
	vec3 n_out15p0 = mix(n_out10p0, n_out27p0, vec3(n_out14p1));

// Texture:33
	vec4 tex_frg_33_read = texture(tex_frg_33, vec3(n_out3p0).xy);
	vec3 n_out33p0 = tex_frg_33_read.rgb;
	float n_out33p1 = tex_frg_33_read.a;

// Texture:32
	vec4 tex_frg_32_read = texture(tex_frg_32, UV.xy);
	vec3 n_out32p0 = tex_frg_32_read.rgb;
	float n_out32p1 = tex_frg_32_read.a;

// Texture:35
	vec4 tex_frg_35_read = texture(tex_frg_35, n_out32p0.xy);
	vec3 n_out35p0 = tex_frg_35_read.rgb;
	float n_out35p1 = tex_frg_35_read.a;

// VectorOp:34
	vec3 n_out34p0 = n_out33p0 * n_out35p0;

// VectorOp:36
	vec3 n_in36p1 = vec3(1.30000, 1.30000, 1.30000);
	vec3 n_out36p0 = pow(n_out34p0, n_in36p1);

// VectorOp:37
	vec3 n_in37p1 = vec3(4.00000, 3.00000, 3.00000);
	vec3 n_out37p0 = n_out36p0 * n_in37p1;

// Input:38
	vec3 n_out38p0 = vec3(UV, 0.0);

// VectorOp:44
	vec3 n_in44p1 = vec3(2.00000, 2.00000, 0.00000);
	vec3 n_out44p0 = n_out38p0 * n_in44p1;

// Worley2D:39
	vec3 n_in39p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in39p2 = 5.00000;
	float n_in39p3 = 1.00000;
	float n_out39p0;
	float n_out39p1;
	{
		vec2 n_out39p0n_out39p1 = cellular2dNoiseFunc((n_out44p0.xy+n_in39p1.xy)*n_in39p2, min(max(n_in39p3, 0.0), 1.0));
		n_out39p0 = n_out39p0n_out39p1.x;
		n_out39p1 = n_out39p0n_out39p1.y;
	}

// Texture:40
	vec4 tex_frg_40_read = texture(tex_frg_40, vec3(n_out39p0).xy);
	vec3 n_out40p0 = tex_frg_40_read.rgb;
	float n_out40p1 = tex_frg_40_read.a;

// Texture:43
	vec4 tex_frg_43_read = texture(tex_frg_43, n_out40p0.xy);
	vec3 n_out43p0 = tex_frg_43_read.rgb;
	float n_out43p1 = tex_frg_43_read.a;

// Texture:45
	vec4 tex_frg_45_read = texture(tex_frg_45, vec3(n_out3p0).xy);
	vec3 n_out45p0 = tex_frg_45_read.rgb;
	float n_out45p1 = tex_frg_45_read.a;

// ScalarOp:42
	float n_out42p0 = dot(n_out45p0, vec3(0.333333, 0.333333, 0.333333)) * n_out40p1;

// VectorMix:41
	vec3 n_out41p0 = mix(n_out37p0, n_out43p0, vec3(n_out42p0));

// VectorMix:31
	vec3 n_out31p0 = mix(n_out15p0, n_out41p0, vec3(n_out33p1));

// Output:0
	ALBEDO = n_out31p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 1424.28, 521.774 )
nodes/vertex/0/position = Vector2( 1840, 540 )
nodes/vertex/2/node = SubResource( 74 )
nodes/vertex/2/position = Vector2( -959.886, 152.114 )
nodes/vertex/3/node = SubResource( 85 )
nodes/vertex/3/position = Vector2( -299.886, 112.114 )
nodes/vertex/4/node = SubResource( 95 )
nodes/vertex/4/position = Vector2( -479.886, 92.1139 )
nodes/vertex/5/node = SubResource( 96 )
nodes/vertex/5/position = Vector2( -1059.89, -107.886 )
nodes/vertex/6/node = SubResource( 97 )
nodes/vertex/6/position = Vector2( -839.886, 12.1139 )
nodes/vertex/7/node = SubResource( 98 )
nodes/vertex/7/position = Vector2( -659.886, 92.1139 )
nodes/vertex/8/node = SubResource( 99 )
nodes/vertex/8/position = Vector2( -99.8861, 52.1139 )
nodes/vertex/9/node = SubResource( 100 )
nodes/vertex/9/position = Vector2( 80, 100 )
nodes/vertex/10/node = SubResource( 65 )
nodes/vertex/10/position = Vector2( 260, 100 )
nodes/vertex/11/node = SubResource( 66 )
nodes/vertex/11/position = Vector2( 440, 120 )
nodes/vertex/12/node = SubResource( 67 )
nodes/vertex/12/position = Vector2( 700, 180 )
nodes/vertex/13/node = SubResource( 68 )
nodes/vertex/13/position = Vector2( 500, 280 )
nodes/vertex/15/node = SubResource( 69 )
nodes/vertex/15/position = Vector2( -1120, 500 )
nodes/vertex/16/node = SubResource( 70 )
nodes/vertex/16/position = Vector2( -460, 460 )
nodes/vertex/17/node = SubResource( 71 )
nodes/vertex/17/position = Vector2( -640, 440 )
nodes/vertex/18/node = SubResource( 72 )
nodes/vertex/18/position = Vector2( -1220, 240 )
nodes/vertex/19/node = SubResource( 73 )
nodes/vertex/19/position = Vector2( -1000, 360 )
nodes/vertex/20/node = SubResource( 75 )
nodes/vertex/20/position = Vector2( -820, 440 )
nodes/vertex/21/node = SubResource( 76 )
nodes/vertex/21/position = Vector2( -260, 400 )
nodes/vertex/24/node = SubResource( 77 )
nodes/vertex/24/position = Vector2( 20, 460 )
nodes/vertex/25/node = SubResource( 78 )
nodes/vertex/25/position = Vector2( 920, 300 )
nodes/vertex/26/node = SubResource( 81 )
nodes/vertex/26/position = Vector2( 720, 420 )
nodes/vertex/27/node = SubResource( 82 )
nodes/vertex/27/position = Vector2( 960, 440 )
nodes/vertex/28/node = SubResource( 83 )
nodes/vertex/28/position = Vector2( 1185.97, 393.629 )
nodes/vertex/29/node = SubResource( 84 )
nodes/vertex/29/position = Vector2( 480, 820 )
nodes/vertex/30/node = SubResource( 88 )
nodes/vertex/30/position = Vector2( 720, 800 )
nodes/vertex/31/node = SubResource( 89 )
nodes/vertex/31/position = Vector2( 261.519, 847.797 )
nodes/vertex/32/node = SubResource( 90 )
nodes/vertex/32/position = Vector2( 90.2208, 868.926 )
nodes/vertex/33/node = SubResource( 91 )
nodes/vertex/33/position = Vector2( 980, 720 )
nodes/vertex/34/node = SubResource( 92 )
nodes/vertex/34/position = Vector2( 720, 620 )
nodes/vertex/35/node = SubResource( 93 )
nodes/vertex/35/position = Vector2( 1220, 620 )
nodes/vertex/36/node = SubResource( 94 )
nodes/vertex/36/position = Vector2( 1440, 560 )
nodes/vertex/connections = PoolIntArray( 5, 0, 6, 0, 6, 0, 7, 0, 3, 0, 8, 0, 7, 0, 4, 0, 4, 0, 3, 0, 8, 0, 9, 0, 9, 0, 10, 0, 10, 0, 11, 0, 11, 0, 12, 0, 13, 0, 12, 1, 2, 0, 7, 1, 18, 0, 19, 0, 19, 0, 20, 0, 16, 0, 21, 0, 20, 0, 17, 0, 17, 0, 16, 0, 15, 0, 20, 1, 12, 0, 25, 0, 24, 0, 25, 1, 21, 0, 24, 0, 16, 0, 26, 0, 25, 0, 28, 0, 27, 0, 28, 1, 26, 1, 27, 0, 29, 0, 30, 0, 32, 0, 31, 0, 31, 0, 29, 0, 34, 0, 33, 0, 16, 0, 34, 0, 33, 0, 35, 0, 28, 0, 36, 0, 35, 0, 36, 1, 30, 0, 33, 1, 36, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 2780, 80 )
nodes/fragment/2/node = SubResource( 16 )
nodes/fragment/2/position = Vector2( -300, 100 )
nodes/fragment/3/node = SubResource( 27 )
nodes/fragment/3/position = Vector2( 360, 60 )
nodes/fragment/4/node = SubResource( 44 )
nodes/fragment/4/position = Vector2( 180, 40 )
nodes/fragment/5/node = SubResource( 59 )
nodes/fragment/5/position = Vector2( 2440, -120 )
nodes/fragment/6/node = SubResource( 60 )
nodes/fragment/6/position = Vector2( -180, -40 )
nodes/fragment/7/node = SubResource( 61 )
nodes/fragment/7/position = Vector2( 0, 40 )
nodes/fragment/8/node = SubResource( 64 )
nodes/fragment/8/position = Vector2( 140, -160 )
nodes/fragment/10/node = SubResource( 4 )
nodes/fragment/10/position = Vector2( 760, 20 )
nodes/fragment/11/node = SubResource( 7 )
nodes/fragment/11/position = Vector2( -560, -40 )
nodes/fragment/13/node = SubResource( 10 )
nodes/fragment/13/position = Vector2( 760, 220 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( 580, -180 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( 1460, -40 )
nodes/fragment/19/node = SubResource( 15 )
nodes/fragment/19/position = Vector2( 0, -340 )
nodes/fragment/20/node = SubResource( 17 )
nodes/fragment/20/position = Vector2( -360, -340 )
nodes/fragment/21/node = SubResource( 18 )
nodes/fragment/21/position = Vector2( -180, -380 )
nodes/fragment/22/node = SubResource( 19 )
nodes/fragment/22/position = Vector2( 240, -380 )
nodes/fragment/23/node = SubResource( 20 )
nodes/fragment/23/position = Vector2( 460, -340 )
nodes/fragment/25/node = SubResource( 21 )
nodes/fragment/25/position = Vector2( 1000, -160 )
nodes/fragment/27/node = SubResource( 22 )
nodes/fragment/27/position = Vector2( 1213.25, -110.53 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( 760, -160 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( 20, -500 )
nodes/fragment/30/node = SubResource( 28 )
nodes/fragment/30/position = Vector2( -160, -460 )
nodes/fragment/31/node = SubResource( 29 )
nodes/fragment/31/position = Vector2( 2480, 120 )
nodes/fragment/32/node = SubResource( 32 )
nodes/fragment/32/position = Vector2( 1000, 240 )
nodes/fragment/33/node = SubResource( 35 )
nodes/fragment/33/position = Vector2( 1340, 60 )
nodes/fragment/34/node = SubResource( 36 )
nodes/fragment/34/position = Vector2( 1540, 160 )
nodes/fragment/35/node = SubResource( 39 )
nodes/fragment/35/position = Vector2( 1340, 260 )
nodes/fragment/36/node = SubResource( 40 )
nodes/fragment/36/position = Vector2( 1740, 120 )
nodes/fragment/37/node = SubResource( 41 )
nodes/fragment/37/position = Vector2( 1960, 160 )
nodes/fragment/38/node = SubResource( 42 )
nodes/fragment/38/position = Vector2( 1100, 520 )
nodes/fragment/39/node = SubResource( 43 )
nodes/fragment/39/position = Vector2( 1460, 440 )
nodes/fragment/40/node = SubResource( 47 )
nodes/fragment/40/position = Vector2( 1680, 400 )
nodes/fragment/41/node = SubResource( 48 )
nodes/fragment/41/position = Vector2( 2160, 280 )
nodes/fragment/42/node = SubResource( 49 )
nodes/fragment/42/position = Vector2( 1920, 320 )
nodes/fragment/43/node = SubResource( 52 )
nodes/fragment/43/position = Vector2( 1900, 440 )
nodes/fragment/44/node = SubResource( 53 )
nodes/fragment/44/position = Vector2( 1271.3, 498.871 )
nodes/fragment/45/node = SubResource( 56 )
nodes/fragment/45/position = Vector2( 1700, 220 )
nodes/fragment/connections = PoolIntArray( 6, 0, 7, 0, 3, 0, 8, 0, 7, 0, 4, 0, 4, 0, 3, 0, 3, 0, 10, 0, 11, 0, 6, 0, 2, 0, 7, 1, 3, 0, 13, 0, 3, 0, 14, 0, 10, 0, 15, 0, 20, 0, 21, 0, 21, 0, 19, 0, 22, 0, 23, 0, 23, 0, 25, 1, 14, 0, 25, 0, 25, 0, 27, 0, 27, 0, 15, 1, 14, 1, 15, 2, 14, 0, 27, 1, 3, 0, 28, 0, 28, 1, 25, 2, 21, 0, 29, 0, 30, 0, 29, 4, 15, 0, 31, 0, 3, 0, 33, 0, 33, 0, 34, 0, 32, 0, 35, 0, 34, 0, 36, 0, 36, 0, 37, 0, 33, 1, 31, 2, 31, 0, 0, 0, 39, 0, 40, 0, 41, 0, 31, 1, 40, 1, 42, 1, 42, 0, 41, 2, 40, 0, 43, 0, 43, 0, 41, 1, 38, 0, 44, 0, 44, 0, 39, 0, 45, 0, 42, 0, 35, 0, 34, 1, 3, 0, 45, 0, 37, 0, 41, 0, 19, 0, 22, 0 )

[sub_resource type="ShaderMaterial" id=102]
shader = SubResource( 101 )

[sub_resource type="Animation" id=103]
resource_name = "New Anim"
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("tBiome:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 360, 0 ) ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 3 )

[node name="tBiome" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 6.51683e-07, 0, 1, 0, -6.51683e-07, 0, 1, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 102 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( -0.762702, -0.192435, 0.617458, 0, 0.954709, 0.297542, -0.64675, 0.226936, -0.728159, 1.9096, 1.05392, -1.88829 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 103 )
