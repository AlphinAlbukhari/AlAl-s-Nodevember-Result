[gd_scene load_steps=115 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="CylinderMesh" id=1]
height = 7.0
rings = 1024

[sub_resource type="OpenSimplexNoise" id=2]
period = 0.1

[sub_resource type="NoiseTexture" id=3]
width = 1
height = 2
noise = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 30, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0, 0.436464, 0.453039, 0.469613, 0.508287 )
colors = PoolColorArray( 1, 0.375, 0, 1, 0.726563, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0.78125, 0.78125, 0.78125, 1 )

[sub_resource type="GradientTexture" id=7]
gradient = SubResource( 6 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = SubResource( 7 )

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="Gradient" id=10]
offsets = PoolRealArray( 0, 0.186296, 0.220557, 0.254818, 0.492505, 0.75803, 0.777302, 0.826552, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0.644531, 0.644531, 0.644531, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0.643137, 0.643137, 0.643137, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = SubResource( 11 )

[sub_resource type="Gradient" id=13]
colors = PoolColorArray( 0.164063, 0.164063, 0.164063, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=14]
gradient = SubResource( 13 )

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = SubResource( 14 )

[sub_resource type="Gradient" id=16]
offsets = PoolRealArray( 0.0942184, 0.0985011, 0.12848, 0.130621, 0.379015, 0.381156, 0.41, 0.410023 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=17]
gradient = SubResource( 16 )

[sub_resource type="VisualShaderNodeTexture" id=18]
texture = SubResource( 17 )

[sub_resource type="VisualShaderNodeVectorInterp" id=19]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="Gradient" id=20]
offsets = PoolRealArray( 0 )
colors = PoolColorArray( 1, 0.867188, 0, 1 )

[sub_resource type="GradientTexture" id=21]
gradient = SubResource( 20 )

[sub_resource type="VisualShaderNodeTexture" id=22]
texture = SubResource( 21 )

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=24]
operator = 2

[sub_resource type="Gradient" id=25]
offsets = PoolRealArray( 0, 0.417559, 0.520343, 0.61242, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0.773438, 0.773438, 0.773438, 1, 1, 1, 1, 1, 0.835938, 0.835938, 0.835938, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=26]
gradient = SubResource( 25 )

[sub_resource type="VisualShaderNodeTexture" id=27]
texture = SubResource( 26 )

[sub_resource type="OpenSimplexNoise" id=28]
period = 34.6
persistence = 0.0

[sub_resource type="NoiseTexture" id=29]
seamless = true
noise = SubResource( 28 )

[sub_resource type="VisualShaderNodeTexture" id=30]
texture = SubResource( 29 )

[sub_resource type="VisualShaderNodeVectorOp" id=31]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0.2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=32]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=33]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=34]

[sub_resource type="VisualShaderNodeVectorClamp" id=35]

[sub_resource type="VisualShaderNodeInput" id=36]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=37]

[sub_resource type="VisualShaderNodeScalarFunc" id=38]
function = 15

[sub_resource type="VisualShaderNodeScalarFunc" id=39]
function = 31

[sub_resource type="Gradient" id=40]
offsets = PoolRealArray( 0.0877944, 0.0899358, 0.0963597, 0.107066, 0.11349, 0.124197, 0.12848, 0.373673, 0.376874, 0.383298, 0.385439, 0.401274, 0.409766, 0.415418, 0.420382 )
colors = PoolColorArray( 1, 1, 1, 1, 0.59375, 0.59375, 0.59375, 1, 0.699219, 0.699219, 0.699219, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.816406, 0.816406, 0.816406, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.613281, 0.613281, 0.613281, 1, 0.726563, 0.726563, 0.726563, 1, 0.886719, 0.886719, 0.886719, 1, 1, 1, 1, 1, 0.652344, 0.652344, 0.652344, 1, 0.640625, 0.640625, 0.640625, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=41]
gradient = SubResource( 40 )

[sub_resource type="VisualShaderNodeTexture" id=42]
texture = SubResource( 41 )

[sub_resource type="VisualShaderNodeVectorOp" id=43]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=44]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=45]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorOp" id=46]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=47]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorLen" id=48]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=49]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 6

[sub_resource type="Gradient" id=50]
offsets = PoolRealArray( 0.0592255, 0.070615 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=51]
gradient = SubResource( 50 )

[sub_resource type="VisualShaderNodeTexture" id=52]
texture = SubResource( 51 )

[sub_resource type="VisualShaderNodeVectorOp" id=53]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=54]
default_input_values = [ 0, 0.0, 1, 0.1, 2, 1.0 ]

[sub_resource type="Gradient" id=55]
offsets = PoolRealArray( 0.00628931, 0.0377358, 0.188679, 0.283019, 0.465409, 0.660377, 0.754717, 0.949686, 1 )
colors = PoolColorArray( 0.574219, 0.574219, 0.574219, 1, 0.769531, 0.769531, 0.769531, 1, 0, 0, 0, 1, 0.576471, 0.576471, 0.576471, 1, 0.667969, 0.667969, 0.667969, 1, 0.578125, 0.578125, 0.578125, 1, 0, 0, 0, 1, 0.768627, 0.768627, 0.768627, 1, 0.675781, 0.675781, 0.675781, 1 )

[sub_resource type="GradientTexture" id=56]
gradient = SubResource( 55 )

[sub_resource type="VisualShaderNodeTexture" id=57]
texture = SubResource( 56 )

[sub_resource type="VisualShaderNodeVectorOp" id=58]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.5, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=59]

[sub_resource type="VisualShaderNodeInput" id=60]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id=61]

[sub_resource type="VisualShaderNodeInput" id=62]
input_name = "light"

[sub_resource type="VisualShaderNodeScalarOp" id=63]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=64]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeVectorOp" id=65]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=66]
input_name = "albedo"

[sub_resource type="Gradient" id=67]

[sub_resource type="GradientTexture" id=68]
gradient = SubResource( 67 )

[sub_resource type="VisualShaderNodeTexture" id=69]
texture = SubResource( 68 )

[sub_resource type="VisualShaderNodeInput" id=70]
input_name = "vertex"

[sub_resource type="Curve" id=71]
min_value = -5.0
max_value = 2.0
_data = [ Vector2( 0, 0.8 ), 0.217671, -9.23663, 0, 0, Vector2( 0.179592, -2.70909 ), 0.0, 0.0, 0, 0, Vector2( 0.181633, -3.66364 ), 0.0, 0.0, 0, 0, Vector2( 0.193878, -2.13636 ), 124.727, 93.5455, 1, 1, Vector2( 0.206122, -0.990909 ), 0.0, 0.0, 0, 0, Vector2( 0.24898, -1 ), 0.0, 0.0, 0, 0, Vector2( 0.259184, -1.69091 ), 0.0, 0.0, 0, 0, Vector2( 0.271255, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.295918, 1.21818 ), 0.0, 1.32588, 0, 0, Vector2( 0.502041, 1.61818 ), -0.0409538, -0.0409538, 0, 0, Vector2( 0.7, 1.21818 ), -1.25328, 0.0, 0, 0, Vector2( 0.763265, -1.65455 ), 0.0, 0.0, 0, 0, Vector2( 0.765306, -1 ), 0.0, 0.0, 0, 0, Vector2( 0.812245, -1.03636 ), 0.0, 0.0, 0, 0, Vector2( 0.818367, -2 ), 0.0, -337.378, 0, 1, Vector2( 0.822355, -3.34545 ), 0.0, 0.0, 0, 0, Vector2( 0.834694, -2.07273 ), 0.0, 0.0, 0, 0, Vector2( 1, 0.8 ), 10.6088, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=72]
curve = SubResource( 71 )

[sub_resource type="VisualShaderNodeTexture" id=73]
texture = SubResource( 72 )

[sub_resource type="Gradient" id=74]
offsets = PoolRealArray( 0, 0.123077, 0.256831, 0.395349, 0.502326 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=75]
gradient = SubResource( 74 )

[sub_resource type="VisualShaderNodeTexture" id=76]
texture = SubResource( 75 )

[sub_resource type="OpenSimplexNoise" id=77]
period = 34.6

[sub_resource type="NoiseTexture" id=78]
seamless = true
noise = SubResource( 77 )

[sub_resource type="VisualShaderNodeTexture" id=79]
texture = SubResource( 78 )

[sub_resource type="VisualShaderNodeColorOp" id=80]
operator = 6

[sub_resource type="VisualShaderNodeVectorClamp" id=81]

[sub_resource type="VisualShaderNodeVectorOp" id=82]

[sub_resource type="VisualShaderNodeScalarOp" id=83]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=84]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=85]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=86]

[sub_resource type="VisualShaderNodeScalarFunc" id=87]
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=88]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=89]

[sub_resource type="VisualShaderNodeInput" id=90]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=91]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, -1.4, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=92]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=93]

[sub_resource type="VisualShaderNodeVectorDecompose" id=94]

[sub_resource type="VisualShaderNodeScalarOp" id=95]
operator = 2

[sub_resource type="Gradient" id=96]
offsets = PoolRealArray( 0.488372, 0.632558 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=97]
gradient = SubResource( 96 )

[sub_resource type="VisualShaderNodeTexture" id=98]
texture = SubResource( 97 )

[sub_resource type="VisualShaderNodeInput" id=99]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=100]

[sub_resource type="VisualShaderNodeScalarFunc" id=101]
function = 15

[sub_resource type="VisualShaderNodeScalarFunc" id=102]
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=103]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=104]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.15, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=105]

[sub_resource type="VisualShaderNodeScalarOp" id=106]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=107]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=108]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=109]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=110]

[sub_resource type="VisualShader" id=111]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_vtx_32;
uniform sampler2D tex_vtx_15;
uniform sampler2D tex_vtx_14;
uniform sampler2D tex_vtx_11;
uniform sampler2D tex_frg_24;
uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_13;
uniform sampler2D tex_frg_15;
uniform sampler2D tex_frg_16;
uniform sampler2D tex_frg_19;
uniform sampler2D tex_frg_21;
uniform sampler2D tex_frg_17;
uniform sampler2D tex_frg_35;
uniform sampler2D tex_frg_43;
uniform sampler2D tex_lgt_9;



void vertex() {
// Input:33
	vec3 n_out33p0 = vec3(UV, 0.0);

// VectorDecompose:34
	float n_out34p0 = n_out33p0.x;
	float n_out34p1 = n_out33p0.y;
	float n_out34p2 = n_out33p0.z;

// ScalarFunc:35
	float n_out35p0 = round(n_out34p0);

// ScalarFunc:36
	float n_out36p0 = round(n_out34p1);

// ScalarOp:37
	float n_out37p0 = n_out35p0 * n_out36p0;

// VectorOp:38
	vec3 n_in38p1 = vec3(0.00000, 0.15000, 0.00000);
	vec3 n_out38p0 = vec3(n_out37p0) * n_in38p1;

// Input:20
	vec3 n_out20p0 = vec3(UV, 0.0);

// VectorDecompose:21
	float n_out21p0 = n_out20p0.x;
	float n_out21p1 = n_out20p0.y;
	float n_out21p2 = n_out20p0.z;

// ScalarFunc:22
	float n_out22p0 = round(n_out21p1);

// Input:25
	vec3 n_out25p0 = NORMAL;

// VectorOp:26
	vec3 n_in26p1 = vec3(1.00000, -1.40000, 1.00000);
	vec3 n_out26p0 = n_out25p0 * n_in26p1;

// VectorOp:23
	vec3 n_out23p0 = vec3(n_out22p0) * n_out26p0;

// Input:27
	vec3 n_out27p0 = vec3(UV, 0.0);

// VectorDecompose:28
	float n_out28p0 = n_out27p0.x;
	float n_out28p1 = n_out27p0.y;
	float n_out28p2 = n_out27p0.z;

// Texture:32
	vec4 tex_vtx_32_read = texture(tex_vtx_32, vec3(n_out28p1).xy);
	vec3 n_out32p0 = tex_vtx_32_read.rgb;
	float n_out32p1 = tex_vtx_32_read.a;

// Texture:15
	vec4 tex_vtx_15_read = texture(tex_vtx_15, UV.xy);
	vec3 n_out15p0 = tex_vtx_15_read.rgb;
	float n_out15p1 = tex_vtx_15_read.a;

// ScalarOp:31
	float n_out31p0 = dot(n_out32p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out15p0, vec3(0.333333, 0.333333, 0.333333));

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Texture:14
	vec4 tex_vtx_14_read = texture(tex_vtx_14, vec3(n_out3p1).xy);
	vec3 n_out14p0 = tex_vtx_14_read.rgb;
	float n_out14p1 = tex_vtx_14_read.a;

// ColorOp:16
	vec3 n_out16p0 = vec3(1.0) - (vec3(1.0) - vec3(n_out31p0)) / (n_out14p0);

// VectorClamp:17
	vec3 n_in17p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in17p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out17p0 = clamp(n_out16p0, n_in17p1, n_in17p2);

// ScalarOp:19
	float n_in19p1 = 1.00000;
	float n_out19p0 = dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333)) * n_in19p1;

// ScalarOp:4
	float n_in4p1 = 2.00000;
	float n_out4p0 = n_out3p1 * n_in4p1;

// Texture:11
	vec4 tex_vtx_11_read = texture(tex_vtx_11, vec3(n_out4p0).xy);
	vec3 n_out11p0 = tex_vtx_11_read.rgb;
	float n_out11p1 = tex_vtx_11_read.a;

// ScalarOp:6
	float n_in6p1 = 1.00000;
	float n_out6p0 = dot(n_out11p0, vec3(0.333333, 0.333333, 0.333333)) * n_in6p1;

// VectorOp:18
	vec3 n_out18p0 = vec3(n_out19p0) + vec3(n_out6p0);

// Input:8
	vec3 n_out8p0 = NORMAL;

// VectorOp:7
	vec3 n_out7p0 = n_out18p0 * n_out8p0;

// Input:10
	vec3 n_out10p0 = VERTEX;

// VectorOp:9
	vec3 n_out9p0 = n_out7p0 + n_out10p0;

// VectorOp:24
	vec3 n_out24p0 = n_out23p0 + n_out9p0;

// VectorOp:39
	vec3 n_out39p0 = n_out38p0 + n_out24p0;

// Output:0
	VERTEX = n_out39p0;

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// VectorOp:8
	vec3 n_in8p1 = vec3(0.00000, 0.50000, 0.00000);
	vec3 n_out8p0 = vec3(n_out3p0) * n_in8p1;

// VectorOp:9
	vec3 n_out9p0 = n_out2p0 + n_out8p0;

// VectorOp:12
	vec3 n_in12p1 = vec3(1.00000, 30.00000, 0.00000);
	vec3 n_out12p0 = n_out9p0 * n_in12p1;

// VectorOp:27
	vec3 n_in27p1 = vec3(1.00000, 0.20000, 0.00000);
	vec3 n_out27p0 = n_out12p0 * n_in27p1;

// Texture:24
	vec4 tex_frg_24_read = texture(tex_frg_24, n_out27p0.xy);
	vec3 n_out24p0 = tex_frg_24_read.rgb;
	float n_out24p1 = tex_frg_24_read.a;

// ScalarOp:29
	float n_in29p1 = 2.00000;
	float n_out29p0 = dot(n_out24p0, vec3(0.333333, 0.333333, 0.333333)) * n_in29p1;

// VectorClamp:30
	vec3 n_in30p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in30p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out30p0 = clamp(vec3(n_out29p0), n_in30p1, n_in30p2);

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, n_out12p0.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:13
	vec4 tex_frg_13_read = texture(tex_frg_13, n_out10p0.xy);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// ScalarOp:4
	float n_in4p1 = 2.00000;
	float n_out4p0 = n_out3p1 * n_in4p1;

// Texture:15
	vec4 tex_frg_15_read = texture(tex_frg_15, vec3(n_out4p0).xy);
	vec3 n_out15p0 = tex_frg_15_read.rgb;
	float n_out15p1 = tex_frg_15_read.a;

// Texture:16
	vec4 tex_frg_16_read = texture(tex_frg_16, n_out15p0.xy);
	vec3 n_out16p0 = tex_frg_16_read.rgb;
	float n_out16p1 = tex_frg_16_read.a;

// VectorOp:14
	vec3 n_out14p0 = n_out13p0 * n_out16p0;

// Texture:19
	vec4 tex_frg_19_read = texture(tex_frg_19, UV.xy);
	vec3 n_out19p0 = tex_frg_19_read.rgb;
	float n_out19p1 = tex_frg_19_read.a;

// Texture:21
	vec4 tex_frg_21_read = texture(tex_frg_21, UV.xy);
	vec3 n_out21p0 = tex_frg_21_read.rgb;
	float n_out21p1 = tex_frg_21_read.a;

// VectorOp:20
	vec3 n_out20p0 = n_out19p0 * n_out21p0;

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, vec3(n_out3p1).xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// VectorMix:18
	vec3 n_out18p0 = mix(n_out14p0, n_out20p0, n_out17p0);

// VectorOp:28
	vec3 n_out28p0 = n_out30p0 * n_out18p0;

// Input:31
	vec3 n_out31p0 = vec3(UV, 0.0);

// VectorDecompose:32
	float n_out32p0 = n_out31p0.x;
	float n_out32p1 = n_out31p0.y;
	float n_out32p2 = n_out31p0.z;

// Texture:35
	vec4 tex_frg_35_read = texture(tex_frg_35, vec3(n_out32p1).xy);
	vec3 n_out35p0 = tex_frg_35_read.rgb;
	float n_out35p1 = tex_frg_35_read.a;

// VectorOp:36
	vec3 n_out36p0 = n_out28p0 * n_out35p0;

// ScalarFunc:33
	float n_out33p0 = round(n_out32p1);

// ScalarFunc:34
	float n_out34p0 = 1.0 - n_out33p0;

// ScalarClamp:45
	float n_in45p1 = 0.10000;
	float n_in45p2 = 1.00000;
	float n_out45p0 = clamp(n_out34p0, n_in45p1, n_in45p2);

// VectorOp:44
	vec3 n_out44p0 = n_out36p0 * vec3(n_out45p0);

// VectorOp:37
	vec3 n_in37p1 = vec3(2.00000, 2.00000, 0.00000);
	vec3 n_out37p0 = n_out31p0 * n_in37p1;

// VectorOp:38
	vec3 n_in38p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out38p0 = mod(n_out37p0, n_in38p1);

// VectorOp:39
	vec3 n_in39p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out39p0 = n_out38p0 - n_in39p1;

// VectorLen:40
	float n_out40p0 = length(n_out39p0);

// Texture:43
	vec4 tex_frg_43_read = texture(tex_frg_43, vec3(n_out40p0).xy);
	vec3 n_out43p0 = tex_frg_43_read.rgb;
	float n_out43p1 = tex_frg_43_read.a;

// ScalarOp:42
	float n_out42p0 = max(n_out34p0, dot(n_out43p0, vec3(0.333333, 0.333333, 0.333333)));

// Output:0
	ALBEDO = n_out44p0;
	ALPHA = n_out42p0;

}

void light() {
// Input:2
	vec3 n_out2p0 = NORMAL;

// Input:4
	vec3 n_out4p0 = LIGHT;

// DotProduct:3
	float n_out3p0 = dot(n_out2p0, n_out4p0);

// ScalarOp:5
	float n_in5p1 = 0.50000;
	float n_out5p0 = n_out3p0 * n_in5p1;

// ScalarOp:6
	float n_in6p1 = 0.50000;
	float n_out6p0 = n_out5p0 + n_in6p1;

// Texture:9
	vec4 tex_lgt_9_read = texture(tex_lgt_9, vec3(n_out6p0).xy);
	vec3 n_out9p0 = tex_lgt_9_read.rgb;
	float n_out9p1 = tex_lgt_9_read.a;

// Input:8
	vec3 n_out8p0 = ALBEDO;

// VectorOp:7
	vec3 n_out7p0 = n_out9p0 * n_out8p0;

// Output:0
	DIFFUSE_LIGHT = n_out7p0;

}
"
graph_offset = Vector2( 357.48, -215.969 )
modes/cull = 2
modes/depth_draw = 3
nodes/vertex/0/position = Vector2( 3040, -40 )
nodes/vertex/2/node = SubResource( 84 )
nodes/vertex/2/position = Vector2( -200, -200 )
nodes/vertex/3/node = SubResource( 94 )
nodes/vertex/3/position = Vector2( -20, -60 )
nodes/vertex/4/node = SubResource( 106 )
nodes/vertex/4/position = Vector2( 300, 20 )
nodes/vertex/6/node = SubResource( 107 )
nodes/vertex/6/position = Vector2( 720, 60 )
nodes/vertex/7/node = SubResource( 108 )
nodes/vertex/7/position = Vector2( 1380, 60 )
nodes/vertex/8/node = SubResource( 109 )
nodes/vertex/8/position = Vector2( 1180, 160 )
nodes/vertex/9/node = SubResource( 110 )
nodes/vertex/9/position = Vector2( 1560, 60 )
nodes/vertex/10/node = SubResource( 70 )
nodes/vertex/10/position = Vector2( 1360, 220 )
nodes/vertex/11/node = SubResource( 73 )
nodes/vertex/11/position = Vector2( 540, 20 )
nodes/vertex/14/node = SubResource( 76 )
nodes/vertex/14/position = Vector2( 360, -180 )
nodes/vertex/15/node = SubResource( 79 )
nodes/vertex/15/position = Vector2( 140, -420 )
nodes/vertex/16/node = SubResource( 80 )
nodes/vertex/16/position = Vector2( 600, -200 )
nodes/vertex/17/node = SubResource( 81 )
nodes/vertex/17/position = Vector2( 780, -140 )
nodes/vertex/18/node = SubResource( 82 )
nodes/vertex/18/position = Vector2( 1200, -20 )
nodes/vertex/19/node = SubResource( 83 )
nodes/vertex/19/position = Vector2( 980, -100 )
nodes/vertex/20/node = SubResource( 85 )
nodes/vertex/20/position = Vector2( 1240, -140 )
nodes/vertex/21/node = SubResource( 86 )
nodes/vertex/21/position = Vector2( 1380, -120 )
nodes/vertex/22/node = SubResource( 87 )
nodes/vertex/22/position = Vector2( 1600, -80 )
nodes/vertex/23/node = SubResource( 88 )
nodes/vertex/23/position = Vector2( 2120, -80 )
nodes/vertex/24/node = SubResource( 89 )
nodes/vertex/24/position = Vector2( 2300, 40 )
nodes/vertex/25/node = SubResource( 90 )
nodes/vertex/25/position = Vector2( 1720, 20 )
nodes/vertex/26/node = SubResource( 91 )
nodes/vertex/26/position = Vector2( 1940, 0 )
nodes/vertex/27/node = SubResource( 92 )
nodes/vertex/27/position = Vector2( -380, -600 )
nodes/vertex/28/node = SubResource( 93 )
nodes/vertex/28/position = Vector2( -220, -560 )
nodes/vertex/31/node = SubResource( 95 )
nodes/vertex/31/position = Vector2( 410.207, -371.843 )
nodes/vertex/32/node = SubResource( 98 )
nodes/vertex/32/position = Vector2( 100, -620 )
nodes/vertex/33/node = SubResource( 99 )
nodes/vertex/33/position = Vector2( 1860, -260 )
nodes/vertex/34/node = SubResource( 100 )
nodes/vertex/34/position = Vector2( 2020, -220 )
nodes/vertex/35/node = SubResource( 101 )
nodes/vertex/35/position = Vector2( 2296.49, -236.391 )
nodes/vertex/36/node = SubResource( 102 )
nodes/vertex/36/position = Vector2( 2300, -160 )
nodes/vertex/37/node = SubResource( 103 )
nodes/vertex/37/position = Vector2( 2480, -220 )
nodes/vertex/38/node = SubResource( 104 )
nodes/vertex/38/position = Vector2( 2660, -160 )
nodes/vertex/39/node = SubResource( 105 )
nodes/vertex/39/position = Vector2( 2865.75, -51.0869 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 4, 0, 8, 0, 7, 1, 7, 0, 9, 0, 10, 0, 9, 1, 4, 0, 11, 0, 11, 0, 6, 0, 14, 0, 16, 1, 16, 0, 17, 0, 18, 0, 7, 0, 3, 1, 14, 0, 6, 0, 18, 1, 20, 0, 21, 0, 21, 1, 22, 0, 22, 0, 23, 0, 23, 0, 24, 0, 9, 0, 24, 1, 25, 0, 26, 0, 26, 0, 23, 1, 19, 0, 18, 0, 27, 0, 28, 0, 15, 0, 31, 1, 31, 0, 16, 0, 17, 0, 19, 0, 28, 1, 32, 0, 32, 0, 31, 0, 33, 0, 34, 0, 34, 0, 35, 0, 34, 1, 36, 0, 35, 0, 37, 0, 36, 0, 37, 1, 37, 0, 38, 0, 38, 0, 39, 0, 24, 0, 39, 1, 39, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 3000, 500 )
nodes/fragment/2/node = SubResource( 23 )
nodes/fragment/2/position = Vector2( -280, -60 )
nodes/fragment/3/node = SubResource( 34 )
nodes/fragment/3/position = Vector2( -80, 60 )
nodes/fragment/4/node = SubResource( 47 )
nodes/fragment/4/position = Vector2( 420, 60 )
nodes/fragment/5/node = SubResource( 57 )
nodes/fragment/5/position = Vector2( 600, -100 )
nodes/fragment/8/node = SubResource( 58 )
nodes/fragment/8/position = Vector2( 160, -20 )
nodes/fragment/9/node = SubResource( 59 )
nodes/fragment/9/position = Vector2( 400, -160 )
nodes/fragment/10/node = SubResource( 4 )
nodes/fragment/10/position = Vector2( 800, -220 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( 580, -260 )
nodes/fragment/13/node = SubResource( 8 )
nodes/fragment/13/position = Vector2( 1000, -200 )
nodes/fragment/14/node = SubResource( 9 )
nodes/fragment/14/position = Vector2( 1196.77, 17.4208 )
nodes/fragment/15/node = SubResource( 12 )
nodes/fragment/15/position = Vector2( 640, 100 )
nodes/fragment/16/node = SubResource( 15 )
nodes/fragment/16/position = Vector2( 880, 140 )
nodes/fragment/17/node = SubResource( 18 )
nodes/fragment/17/position = Vector2( 1060, 540 )
nodes/fragment/18/node = SubResource( 19 )
nodes/fragment/18/position = Vector2( 1720, 300 )
nodes/fragment/19/node = SubResource( 22 )
nodes/fragment/19/position = Vector2( 1140, 160 )
nodes/fragment/20/node = SubResource( 24 )
nodes/fragment/20/position = Vector2( 1400, 280 )
nodes/fragment/21/node = SubResource( 27 )
nodes/fragment/21/position = Vector2( 1120, 340 )
nodes/fragment/24/node = SubResource( 30 )
nodes/fragment/24/position = Vector2( 1600, 20 )
nodes/fragment/27/node = SubResource( 31 )
nodes/fragment/27/position = Vector2( 900, -380 )
nodes/fragment/28/node = SubResource( 32 )
nodes/fragment/28/position = Vector2( 2160, 240 )
nodes/fragment/29/node = SubResource( 33 )
nodes/fragment/29/position = Vector2( 1780, 180 )
nodes/fragment/30/node = SubResource( 35 )
nodes/fragment/30/position = Vector2( 1960, 200 )
nodes/fragment/31/node = SubResource( 36 )
nodes/fragment/31/position = Vector2( 1440, 660 )
nodes/fragment/32/node = SubResource( 37 )
nodes/fragment/32/position = Vector2( 1800, 440 )
nodes/fragment/33/node = SubResource( 38 )
nodes/fragment/33/position = Vector2( 2020, 560 )
nodes/fragment/34/node = SubResource( 39 )
nodes/fragment/34/position = Vector2( 2220, 580 )
nodes/fragment/35/node = SubResource( 42 )
nodes/fragment/35/position = Vector2( 2140, 360 )
nodes/fragment/36/node = SubResource( 43 )
nodes/fragment/36/position = Vector2( 2400, 340 )
nodes/fragment/37/node = SubResource( 44 )
nodes/fragment/37/position = Vector2( 1760, 640 )
nodes/fragment/38/node = SubResource( 45 )
nodes/fragment/38/position = Vector2( 1920, 640 )
nodes/fragment/39/node = SubResource( 46 )
nodes/fragment/39/position = Vector2( 2080, 700 )
nodes/fragment/40/node = SubResource( 48 )
nodes/fragment/40/position = Vector2( 2240, 700 )
nodes/fragment/42/node = SubResource( 49 )
nodes/fragment/42/position = Vector2( 2720, 660 )
nodes/fragment/43/node = SubResource( 52 )
nodes/fragment/43/position = Vector2( 2400, 700 )
nodes/fragment/44/node = SubResource( 53 )
nodes/fragment/44/position = Vector2( 2760, 440 )
nodes/fragment/45/node = SubResource( 54 )
nodes/fragment/45/position = Vector2( 2560, 560 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 4, 0, 4, 0, 5, 0, 3, 0, 8, 0, 2, 0, 9, 0, 8, 0, 9, 1, 9, 0, 12, 0, 12, 0, 10, 0, 10, 0, 13, 0, 13, 0, 14, 0, 4, 0, 15, 0, 15, 0, 16, 0, 16, 0, 14, 1, 3, 1, 17, 0, 14, 0, 18, 0, 17, 0, 18, 2, 19, 0, 20, 0, 21, 0, 20, 1, 20, 0, 18, 1, 12, 0, 27, 0, 27, 0, 24, 0, 18, 0, 28, 1, 24, 0, 29, 0, 29, 0, 30, 0, 30, 0, 28, 0, 31, 0, 32, 0, 32, 1, 33, 0, 32, 1, 35, 0, 35, 0, 36, 1, 28, 0, 36, 0, 31, 0, 37, 0, 37, 0, 38, 0, 38, 0, 39, 0, 39, 0, 40, 0, 40, 0, 43, 0, 43, 0, 42, 1, 34, 0, 42, 0, 42, 0, 0, 1, 33, 0, 34, 0, 36, 0, 44, 0, 45, 0, 44, 1, 44, 0, 0, 0, 34, 0, 45, 0 )
nodes/light/0/position = Vector2( 1260, 200 )
nodes/light/2/node = SubResource( 60 )
nodes/light/2/position = Vector2( -80, 200 )
nodes/light/3/node = SubResource( 61 )
nodes/light/3/position = Vector2( 168.28, 265.437 )
nodes/light/4/node = SubResource( 62 )
nodes/light/4/position = Vector2( -52.7198, 338.437 )
nodes/light/5/node = SubResource( 63 )
nodes/light/5/position = Vector2( 360, 240 )
nodes/light/6/node = SubResource( 64 )
nodes/light/6/position = Vector2( 560, 220 )
nodes/light/7/node = SubResource( 65 )
nodes/light/7/position = Vector2( 1040, 240 )
nodes/light/8/node = SubResource( 66 )
nodes/light/8/position = Vector2( 860, 360 )
nodes/light/9/node = SubResource( 69 )
nodes/light/9/position = Vector2( 760, 100 )
nodes/light/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 5, 0, 5, 0, 6, 0, 8, 0, 7, 1, 6, 0, 9, 0, 9, 0, 7, 0, 7, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=112]
shader = SubResource( 111 )

[sub_resource type="Animation" id=113]
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("Candy:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 90 ), Vector3( 0, 360, 90 ) ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.77736, -0.0482412, 0.627203, -0.00805122, 0.99621, 0.0866021, -0.629004, -0.0723708, 0.774026, 0, 0, 7.08383 )

[node name="Candy" type="MeshInstance" parent="."]
transform = Transform( -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 112 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 9.35407 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 113 )
