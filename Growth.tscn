[gd_scene load_steps=186 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="CylinderMesh" id=1]
top_radius = 0.1
bottom_radius = 0.1
rings = 64

[sub_resource type="VisualShaderNodeVectorDecompose" id=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 15

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.35, 0.85, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=10]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=11]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=13]

[sub_resource type="OpenSimplexNoise" id=14]
seed = 63
octaves = 9
period = 23.7
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=15]
seamless = true
noise = SubResource( 14 )

[sub_resource type="VisualShaderNodeTexture" id=16]
output_port_for_preview = 0
texture = SubResource( 15 )

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="Gradient" id=18]
offsets = PoolRealArray( 0.137405, 0.477099, 0.59542, 0.71374, 0.751908, 0.835878 )
colors = PoolColorArray( 0.438965, 0.453125, 0, 1, 0.155248, 0.160256, 0, 1, 0.831333, 0.86, 0, 1, 0.792969, 0.777997, 0.613312, 1, 0.785156, 0.785156, 0.785156, 1, 0.9, 0.8892, 0.792, 0 )

[sub_resource type="GradientTexture" id=19]
gradient = SubResource( 18 )

[sub_resource type="VisualShaderNodeTexture" id=20]
texture = SubResource( 19 )

[sub_resource type="VisualShaderNodeScalarFunc" id=21]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=22]

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.75, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=25]

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id=27]

[sub_resource type="OpenSimplexNoise" id=28]
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=29]
seamless = true
noise = SubResource( 28 )

[sub_resource type="VisualShaderNodeTexture" id=30]
texture = SubResource( 29 )

[sub_resource type="VisualShaderNodeVectorInterp" id=31]

[sub_resource type="Gradient" id=32]
colors = PoolColorArray( 0, 0.0507813, 0.000793457, 1, 0, 0.746094, 0.0641174, 1 )

[sub_resource type="GradientTexture" id=33]
gradient = SubResource( 32 )

[sub_resource type="VisualShaderNodeTexture" id=34]
texture = SubResource( 33 )

[sub_resource type="Gradient" id=35]
offsets = PoolRealArray( 0, 0.0419847, 0.866412 )
colors = PoolColorArray( 1, 1, 1, 1, 0.59375, 0.59375, 0.59375, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=36]
gradient = SubResource( 35 )

[sub_resource type="VisualShaderNodeTexture" id=37]
texture = SubResource( 36 )

[sub_resource type="VisualShaderNodeVectorOp" id=38]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=39]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=40]

[sub_resource type="Gradient" id=41]
offsets = PoolRealArray( 0, 0.503817, 0.507634 )
colors = PoolColorArray( 1, 1, 1, 1, 0.113281, 0.113281, 0.113281, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=42]
gradient = SubResource( 41 )

[sub_resource type="VisualShaderNodeTexture" id=43]
texture = SubResource( 42 )

[sub_resource type="VisualShaderNodeVectorOp" id=44]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=45]
function = 19

[sub_resource type="Gradient" id=46]
offsets = PoolRealArray( 0, 0.188482, 0.377404, 0.397906, 0.727749, 0.942408 )
colors = PoolColorArray( 0.321569, 0, 0, 1, 0.235294, 0, 0, 1, 0.132702, 0, 0, 1, 0.121569, 0, 0, 1, 0.0313726, 0, 0, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=47]
gradient = SubResource( 46 )

[sub_resource type="VisualShaderNodeTexture" id=48]
texture = SubResource( 47 )

[sub_resource type="VisualShaderNodeInput" id=49]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=50]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.75, 0.7, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=51]

[sub_resource type="VisualShaderNodeScalarOp" id=52]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=53]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.75, 0.8, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=54]

[sub_resource type="VisualShaderNodeScalarOp" id=55]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=56]
operator = 7

[sub_resource type="VisualShaderNodeScalarFunc" id=57]
function = 31

[sub_resource type="VisualShaderNodeScalarFunc" id=58]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=59]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="Gradient" id=60]
offsets = PoolRealArray( 0, 0.0458015, 1 )
colors = PoolColorArray( 0, 0, 0, 0, 0.0379464, 0.171875, 0, 1, 0.147596, 0.660156, 0, 1 )

[sub_resource type="GradientTexture" id=61]
gradient = SubResource( 60 )

[sub_resource type="VisualShaderNodeTexture" id=62]
texture = SubResource( 61 )

[sub_resource type="VisualShaderNodeVectorOp" id=63]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=64]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=65]

[sub_resource type="VisualShaderNodeScalarFunc" id=66]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=67]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=68]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=69]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=70]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=71]

[sub_resource type="Gradient" id=72]
offsets = PoolRealArray( 0.221374, 0.240458, 0.270992 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=73]
gradient = SubResource( 72 )

[sub_resource type="VisualShaderNodeTexture" id=74]
texture = SubResource( 73 )

[sub_resource type="VisualShaderNodeInput" id=75]
input_name = "uv"

[sub_resource type="Gradient" id=76]
offsets = PoolRealArray( 0.938931, 0.961832, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0.300781, 0.00469971, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=77]
gradient = SubResource( 76 )

[sub_resource type="VisualShaderNodeTexture" id=78]
texture = SubResource( 77 )

[sub_resource type="VisualShaderNodeVectorOp" id=79]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=80]
function = 20

[sub_resource type="VisualShaderNodeVectorOp" id=81]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.01, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=82]
operator = 2

[sub_resource type="OpenSimplexNoise" id=83]
period = 21.9

[sub_resource type="NoiseTexture" id=84]
seamless = true
noise = SubResource( 83 )

[sub_resource type="VisualShaderNodeTexture" id=85]
texture = SubResource( 84 )

[sub_resource type="VisualShaderNodeScalarOp" id=86]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=87]

[sub_resource type="Gradient" id=88]
offsets = PoolRealArray( 0.632212, 0.757212, 0.889423 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=89]
gradient = SubResource( 88 )

[sub_resource type="VisualShaderNodeTexture" id=90]
texture = SubResource( 89 )

[sub_resource type="VisualShaderNodeVectorOp" id=91]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.05, 0.05, 0 ) ]
operator = 1

[sub_resource type="Gradient" id=92]
offsets = PoolRealArray( 0.98855, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0.0563965, 0.257813, 0, 1 )

[sub_resource type="GradientTexture" id=93]
gradient = SubResource( 92 )

[sub_resource type="VisualShaderNodeTexture" id=94]
texture = SubResource( 93 )

[sub_resource type="VisualShaderNodeVectorOp" id=95]
operator = 2

[sub_resource type="VisualShaderNodeScalarInterp" id=96]
default_input_values = [ 0, 1.0, 1, 1.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeInput" id=97]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorFunc" id=98]
function = 25

[sub_resource type="VisualShaderNodeVectorDecompose" id=99]

[sub_resource type="VisualShaderNodeScalarOp" id=100]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=101]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=102]

[sub_resource type="VisualShaderNodeVectorOp" id=103]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=104]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=105]

[sub_resource type="VisualShaderNodeScalarOp" id=106]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=107]
operator = 2

[sub_resource type="Gradient" id=108]
offsets = PoolRealArray( 0, 0.0267176 )

[sub_resource type="GradientTexture" id=109]
gradient = SubResource( 108 )

[sub_resource type="VisualShaderNodeTexture" id=110]
texture = SubResource( 109 )

[sub_resource type="VisualShaderNodeInput" id=111]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id=112]
operator = 2

[sub_resource type="Gradient" id=113]
offsets = PoolRealArray( 0, 0.484733, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 0.270588, 0.196078, 0.121569, 1, 0.490196, 0.356863, 0.0705882, 1 )

[sub_resource type="GradientTexture" id=114]
gradient = SubResource( 113 )

[sub_resource type="VisualShaderNodeTexture" id=115]
texture = SubResource( 114 )

[sub_resource type="VisualShaderNodeVectorOp" id=116]

[sub_resource type="VisualShaderNodeVectorOp" id=117]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -1, 1, -0.5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=118]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorInterp" id=119]

[sub_resource type="VisualShaderNodeInput" id=120]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorDecompose" id=121]

[sub_resource type="VisualShaderNodeScalarClamp" id=122]

[sub_resource type="VisualShaderNodeInput" id=123]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=124]

[sub_resource type="VisualShaderNodeScalarFunc" id=125]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=126]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=127]

[sub_resource type="VisualShaderNodeScalarFunc" id=128]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=129]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=130]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=131]

[sub_resource type="VisualShaderNodeScalarOp" id=132]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=133]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=134]

[sub_resource type="VisualShaderNodeScalarOp" id=135]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=136]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=137]
constant = 1.57

[sub_resource type="VisualShaderNodeVectorOp" id=138]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 9, 9, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=139]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.33, -1, 0.9 ) ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=140]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=141]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.75, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=142]

[sub_resource type="VisualShaderNodeScalarOp" id=143]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=144]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=145]
texture = SubResource( 47 )

[sub_resource type="VisualShaderNodeVectorOp" id=146]

[sub_resource type="Gradient" id=147]
colors = PoolColorArray( 0, 0, 0, 1, 0.386719, 0.386719, 0.386719, 1 )

[sub_resource type="GradientTexture" id=148]
gradient = SubResource( 147 )

[sub_resource type="VisualShaderNodeTexture" id=149]
texture = SubResource( 148 )

[sub_resource type="VisualShaderNodeScalarFunc" id=150]
function = 19

[sub_resource type="VisualShaderNodeScalarClamp" id=151]

[sub_resource type="VisualShaderNodeVectorInterp" id=152]

[sub_resource type="VisualShaderNodeInput" id=153]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=154]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.44, 1.35, -0.03 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=155]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 1, 1.5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=156]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.32, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=157]

[sub_resource type="VisualShaderNodeVectorOp" id=158]

[sub_resource type="VisualShaderNodeVectorDecompose" id=159]

[sub_resource type="Curve" id=160]
min_value = -0.1
max_value = 0.2
_data = [ Vector2( 0.407018, -0.0536364 ), 0.0, 0.0, 0, 0, Vector2( 0.698246, 0.0527273 ), -0.0914438, -0.0914438, 0, 0, Vector2( 1, -0.0236364 ), -0.253065, 0.0, 1, 0 ]

[sub_resource type="CurveTexture" id=161]
curve = SubResource( 160 )

[sub_resource type="VisualShaderNodeTexture" id=162]
texture = SubResource( 161 )

[sub_resource type="VisualShaderNodeVectorOp" id=163]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=164]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -2, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=165]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -2, -1, -2 ) ]
operator = 6

[sub_resource type="VisualShaderNodeVectorOp" id=166]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=167]
uniform_name = "branch"

[sub_resource type="VisualShaderNodeInput" id=168]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=169]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVec3Uniform" id=170]
uniform_name = "pos"

[sub_resource type="VisualShaderNodeVectorInterp" id=171]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeScalarUniform" id=172]
uniform_name = "trans"

[sub_resource type="VisualShaderNodeVec3Uniform" id=173]
uniform_name = "scale"

[sub_resource type="VisualShaderNodeVec3Uniform" id=174]
uniform_name = "pos2"

[sub_resource type="VisualShaderNodeScalarUniform" id=175]
uniform_name = "scale_flower"

[sub_resource type="VisualShaderNodeVectorCompose" id=176]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 1.0 ]

[sub_resource type="VisualShaderNodeVectorInterp" id=177]

[sub_resource type="VisualShaderNodeScalarUniform" id=178]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeScalarOp" id=179]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=180]
texture = SubResource( 73 )

[sub_resource type="VisualShaderNodeTexture" id=181]
texture = SubResource( 89 )

[sub_resource type="VisualShader" id=182]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_9;
uniform sampler2D tex_vtx_8;
uniform sampler2D tex_vtx_11;
uniform float branch;
uniform sampler2D tex_vtx_4;
uniform float trans;
uniform vec3 pos;
uniform sampler2D tex_vtx_41;
uniform float scale_flower;
uniform vec3 pos2;
uniform vec3 scale;
uniform sampler2D tex_vtx_52;
uniform float morph;
uniform sampler2D tex_frg_37;
uniform sampler2D tex_frg_7;
uniform sampler2D tex_frg_6;
uniform sampler2D tex_frg_33;
uniform sampler2D tex_frg_21;
uniform sampler2D tex_frg_23;
uniform sampler2D tex_frg_30;
uniform sampler2D tex_frg_32;
uniform sampler2D tex_frg_71;
uniform sampler2D tex_frg_67;
uniform sampler2D tex_frg_62;
uniform sampler2D tex_frg_50;
uniform sampler2D tex_frg_84;



void vertex() {
// Texture:9
	vec4 tex_vtx_9_read = texture(tex_vtx_9, UV.xy);
	vec3 n_out9p0 = tex_vtx_9_read.rgb;
	float n_out9p1 = tex_vtx_9_read.a;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Texture:8
	vec4 tex_vtx_8_read = texture(tex_vtx_8, vec3(n_out3p1).xy);
	vec3 n_out8p0 = tex_vtx_8_read.rgb;
	float n_out8p1 = tex_vtx_8_read.a;

// VectorOp:10
	vec3 n_out10p0 = n_out9p0 * n_out8p0;

// Texture:11
	vec4 tex_vtx_11_read = texture(tex_vtx_11, n_out10p0.xy);
	vec3 n_out11p0 = tex_vtx_11_read.rgb;
	float n_out11p1 = tex_vtx_11_read.a;

// VectorOp:13
	vec3 n_in13p1 = vec3(-1.00000, 1.00000, -0.50000);
	vec3 n_out13p0 = n_out11p0 * n_in13p1;

// ScalarUniform:58
	float n_out58p0 = branch;

// VectorOp:56
	vec3 n_out56p0 = n_out13p0 * vec3(n_out58p0);

// ScalarOp:7
	float n_in7p1 = 2.00000;
	float n_out7p0 = n_out3p1 * n_in7p1;

// Texture:4
	vec4 tex_vtx_4_read = texture(tex_vtx_4, vec3(n_out7p0).xy);
	vec3 n_out4p0 = tex_vtx_4_read.rgb;
	float n_out4p1 = tex_vtx_4_read.a;

// ScalarUniform:62
	float n_out62p0 = trans;

// VectorMix:61
	vec3 n_in61p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out61p0 = mix(n_out4p0, n_in61p1, vec3(n_out62p0));

// Input:6
	vec3 n_out6p0 = VERTEX;

// VectorOp:5
	vec3 n_out5p0 = n_out61p0 + n_out6p0;

// VectorOp:12
	vec3 n_out12p0 = n_out56p0 + n_out5p0;

// VectorUniform:60
	vec3 n_out60p0 = pos;

// VectorOp:54
	vec3 n_out54p0 = n_out12p0 + n_out60p0;

// VectorOp:55
	vec3 n_in55p1 = vec3(-2.00000, -1.00000, -2.00000);
	vec3 n_out55p0 = max(n_out54p0, n_in55p1);

// Input:35
	vec3 n_out35p0 = vec3(UV, 0.0);

// VectorOp:36
	vec3 n_in36p1 = vec3(0.25000, 0.75000, 0.00000);
	vec3 n_out36p0 = n_out35p0 - n_in36p1;

// VectorLen:37
	float n_out37p0 = length(n_out36p0);

// ScalarOp:38
	float n_in38p1 = 4.00000;
	float n_out38p0 = n_out37p0 * n_in38p1;

// Texture:41
	vec4 tex_vtx_41_read = texture(tex_vtx_41, vec3(n_out38p0).xy);
	vec3 n_out41p0 = tex_vtx_41_read.rgb;
	float n_out41p1 = tex_vtx_41_read.a;

// VectorOp:39
	vec3 n_in39p1 = vec3(0.00000, 0.00000, 1.00000);
	vec3 n_out39p0 = n_out41p0 * n_in39p1;

// Input:14
	vec3 n_out14p0 = VERTEX;

// VectorDecompose:20
	float n_out20p0 = n_out14p0.x;
	float n_out20p1 = n_out14p0.y;
	float n_out20p2 = n_out14p0.z;

// Scalar:32
	float n_out32p0 = 1.570000;

// ScalarFunc:24
	float n_out24p0 = cos(n_out32p0);

// ScalarOp:30
	float n_out30p0 = n_out20p1 * n_out24p0;

// ScalarFunc:25
	float n_out25p0 = sin(n_out32p0);

// ScalarOp:31
	float n_out31p0 = n_out20p2 * n_out25p0;

// ScalarOp:26
	float n_out26p0 = n_out30p0 - n_out31p0;

// ScalarFunc:21
	float n_out21p0 = sin(n_out32p0);

// ScalarOp:28
	float n_out28p0 = n_out20p1 * n_out21p0;

// ScalarFunc:22
	float n_out22p0 = cos(n_out32p0);

// ScalarOp:29
	float n_out29p0 = n_out20p2 * n_out22p0;

// ScalarOp:23
	float n_out23p0 = n_out28p0 + n_out29p0;

// VectorCompose:27
	vec3 n_out27p0 = vec3(n_out20p0, n_out26p0, n_out23p0);

// ScalarUniform:65
	float n_out65p0 = scale_flower;

// VectorCompose:66
	float n_in66p2 = 1.00000;
	vec3 n_out66p0 = vec3(n_out65p0, n_out65p0, n_in66p2);

// VectorOp:33
	vec3 n_out33p0 = n_out27p0 * n_out66p0;

// VectorOp:34
	vec3 n_in34p1 = vec3(-0.33000, -1.00000, 0.90000);
	vec3 n_out34p0 = n_out33p0 - n_in34p1;

// VectorOp:40
	vec3 n_out40p0 = n_out39p0 + n_out34p0;

// Input:17
	vec3 n_out17p0 = NORMAL;

// VectorDecompose:18
	float n_out18p0 = n_out17p0.x;
	float n_out18p1 = n_out17p0.y;
	float n_out18p2 = n_out17p0.z;

// ScalarClamp:19
	float n_in19p1 = 0.00000;
	float n_in19p2 = 1.00000;
	float n_out19p0 = clamp(n_out18p1, n_in19p1, n_in19p2);

// VectorMix:16
	vec3 n_out16p0 = mix(n_out55p0, n_out40p0, vec3(n_out19p0));

// Input:45
	vec3 n_out45p0 = VERTEX;

// VectorUniform:64
	vec3 n_out64p0 = pos2;

// VectorOp:46
	vec3 n_out46p0 = n_out45p0 + n_out64p0;

// VectorUniform:63
	vec3 n_out63p0 = scale;

// VectorOp:47
	vec3 n_out47p0 = n_out46p0 * n_out63p0;

// VectorOp:48
	vec3 n_in48p1 = vec3(0.32000, 0.00000, 0.00000);
	vec3 n_out48p0 = n_out47p0 + n_in48p1;

// Texture:52
	vec4 tex_vtx_52_read = texture(tex_vtx_52, UV.xy);
	vec3 n_out52p0 = tex_vtx_52_read.rgb;
	float n_out52p1 = tex_vtx_52_read.a;

// VectorDecompose:51
	float n_out51p0 = n_out52p0.x;
	float n_out51p1 = n_out52p0.y;
	float n_out51p2 = n_out52p0.z;

// VectorOp:53
	vec3 n_in53p1 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_out53p0 = vec3(n_out51p0) * n_in53p1;

// VectorOp:49
	vec3 n_out49p0 = n_out48p0 + n_out53p0;

// ScalarFunc:42
	float n_out42p0 = -(n_out18p1);

// ScalarClamp:43
	float n_in43p1 = 0.00000;
	float n_in43p2 = 1.00000;
	float n_out43p0 = clamp(n_out42p0, n_in43p1, n_in43p2);

// VectorMix:44
	vec3 n_out44p0 = mix(n_out16p0, n_out49p0, vec3(n_out43p0));

// Input:59
	vec3 n_out59p0 = VERTEX;

// ScalarUniform:68
	float n_out68p0 = morph;

// VectorMix:67
	vec3 n_out67p0 = mix(n_out44p0, n_out59p0, vec3(n_out68p0));

// Output:0
	VERTEX = n_out67p0;
	COLOR.rgb = n_out44p0;

}

void fragment() {
// Input:35
	vec3 n_out35p0 = vec3(UV, 0.0);

// VectorDecompose:36
	float n_out36p0 = n_out35p0.x;
	float n_out36p1 = n_out35p0.y;
	float n_out36p2 = n_out35p0.z;

// Texture:37
	vec4 tex_frg_37_read = texture(tex_frg_37, vec3(n_out36p1).xy);
	vec3 n_out37p0 = tex_frg_37_read.rgb;
	float n_out37p1 = tex_frg_37_read.a;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, UV.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, vec3(n_out3p1).xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorOp:8
	vec3 n_out8p0 = n_out7p0 * n_out6p0;

// Texture:33
	vec4 tex_frg_33_read = texture(tex_frg_33, n_out8p0.xy);
	vec3 n_out33p0 = tex_frg_33_read.rgb;
	float n_out33p1 = tex_frg_33_read.a;

// Input:26
	vec3 n_out26p0 = vec3(UV, 0.0);

// VectorOp:27
	vec3 n_in27p1 = vec3(0.25000, 0.75000, 0.00000);
	vec3 n_out27p0 = n_out26p0 - n_in27p1;

// VectorFunc:28
	vec3 n_out28p0 = normalize(n_out27p0);

// Texture:21
	vec4 tex_frg_21_read = texture(tex_frg_21, n_out28p0.xy);
	vec3 n_out21p0 = tex_frg_21_read.rgb;
	float n_out21p1 = tex_frg_21_read.a;

// ScalarOp:22
	float n_in22p1 = 0.20000;
	float n_out22p0 = dot(n_out21p0, vec3(0.333333, 0.333333, 0.333333)) * n_in22p1;

// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// VectorOp:20
	vec3 n_out20p0 = vec3(n_out22p0) + n_out11p0;

// VectorOp:17
	vec3 n_in17p1 = vec3(0.35000, 0.85000, 0.00000);
	vec3 n_out17p0 = n_out20p0 - n_in17p1;

// VectorLen:18
	float n_out18p0 = length(n_out17p0);

// ScalarOp:19
	float n_in19p1 = 4.00000;
	float n_out19p0 = n_out18p0 * n_in19p1;

// Texture:23
	vec4 tex_frg_23_read = texture(tex_frg_23, vec3(n_out19p0).xy);
	vec3 n_out23p0 = tex_frg_23_read.rgb;
	float n_out23p1 = tex_frg_23_read.a;

// Texture:30
	vec4 tex_frg_30_read = texture(tex_frg_30, UV.xy);
	vec3 n_out30p0 = tex_frg_30_read.rgb;
	float n_out30p1 = tex_frg_30_read.a;

// Texture:32
	vec4 tex_frg_32_read = texture(tex_frg_32, n_out30p0.xy);
	vec3 n_out32p0 = tex_frg_32_read.rgb;
	float n_out32p1 = tex_frg_32_read.a;

// VectorDecompose:12
	float n_out12p0 = n_out11p0.x;
	float n_out12p1 = n_out11p0.y;
	float n_out12p2 = n_out11p0.z;

// ScalarFunc:14
	float n_out14p0 = round(n_out12p0);

// ScalarFunc:16
	float n_out16p0 = 1.0 - n_out14p0;

// ScalarFunc:13
	float n_out13p0 = round(n_out12p1);

// ScalarOp:15
	float n_out15p0 = n_out16p0 * n_out13p0;

// ScalarFunc:24
	float n_out24p0 = 1.0 - n_out15p0;

// VectorMix:31
	vec3 n_out31p0 = mix(n_out23p0, n_out32p0, vec3(n_out24p0));

// VectorOp:34
	vec3 n_out34p0 = n_out33p0 * n_out31p0;

// VectorOp:38
	vec3 n_out38p0 = n_out37p0 * n_out34p0;

// Input:40
	vec3 n_out40p0 = vec3(UV, 0.0);

// VectorOp:58
	vec3 n_in58p1 = vec3(1.00000, 2.00000, 0.00000);
	vec3 n_out58p0 = n_out40p0 * n_in58p1;

// VectorOp:51
	vec3 n_in51p1 = vec3(0.00000, 1.50000, 0.00000);
	vec3 n_out51p0 = n_out58p0 - n_in51p1;

// VectorDecompose:53
	float n_out53p0 = n_out51p0.x;
	float n_out53p1 = n_out51p0.y;
	float n_out53p2 = n_out51p0.z;

// VectorFunc:52
	vec3 n_out52p0 = abs(vec3(n_out53p1));

// ScalarOp:56
	float n_in56p1 = 2.00000;
	float n_out56p0 = dot(n_out52p0, vec3(0.333333, 0.333333, 0.333333)) * n_in56p1;

// ScalarFunc:55
	float n_out55p0 = 1.0 - n_out56p0;

// Texture:71
	vec4 tex_frg_71_read = texture(tex_frg_71, vec3(n_out55p0).xy);
	vec3 n_out71p0 = tex_frg_71_read.rgb;
	float n_out71p1 = tex_frg_71_read.a;

// Texture:67
	vec4 tex_frg_67_read = texture(tex_frg_67, UV.xy);
	vec3 n_out67p0 = tex_frg_67_read.rgb;
	float n_out67p1 = tex_frg_67_read.a;

// ScalarOp:68
	float n_in68p1 = 0.10000;
	float n_out68p0 = dot(n_out67p0, vec3(0.333333, 0.333333, 0.333333)) * n_in68p1;

// ScalarFunc:54
	float n_out54p0 = sin(n_out55p0);

// VectorOp:57
	vec3 n_in57p1 = vec3(2.00000, 0.00000, 0.00000);
	vec3 n_out57p0 = vec3(n_out54p0) * n_in57p1;

// Input:60
	vec3 n_out60p0 = vec3(UV, 0.0);

// VectorOp:65
	vec3 n_in65p1 = vec3(0.01000, 0.00000, 0.00000);
	vec3 n_out65p0 = n_out60p0 - n_in65p1;

// VectorOp:63
	vec3 n_in63p1 = vec3(10.00000, 1.00000, 0.00000);
	vec3 n_out63p0 = n_out65p0 * n_in63p1;

// VectorOp:59
	vec3 n_out59p0 = n_out57p0 + n_out63p0;

// VectorFunc:64
	vec3 n_out64p0 = fract(n_out59p0);

// VectorOp:69
	vec3 n_out69p0 = vec3(n_out68p0) + n_out64p0;

// VectorOp:70
	vec3 n_in70p1 = vec3(0.05000, 0.05000, 0.00000);
	vec3 n_out70p0 = n_out69p0 - n_in70p1;

// Texture:62
	vec4 tex_frg_62_read = texture(tex_frg_62, n_out70p0.xy);
	vec3 n_out62p0 = tex_frg_62_read.rgb;
	float n_out62p1 = tex_frg_62_read.a;

// VectorOp:41
	vec3 n_in41p1 = vec3(0.75000, 0.70000, 0.00000);
	vec3 n_out41p0 = n_out40p0 - n_in41p1;

// VectorLen:42
	float n_out42p0 = length(n_out41p0);

// ScalarOp:43
	float n_in43p1 = 4.00000;
	float n_out43p0 = n_out42p0 * n_in43p1;

// ScalarFunc:48
	float n_out48p0 = 1.0 - n_out43p0;

// VectorOp:44
	vec3 n_in44p1 = vec3(0.75000, 0.80000, 0.00000);
	vec3 n_out44p0 = n_out40p0 - n_in44p1;

// VectorLen:45
	float n_out45p0 = length(n_out44p0);

// ScalarOp:46
	float n_in46p1 = 4.00000;
	float n_out46p0 = n_out45p0 * n_in46p1;

// ScalarFunc:49
	float n_out49p0 = 1.0 - n_out46p0;

// ScalarOp:47
	float n_out47p0 = min(n_out48p0, n_out49p0);

// Texture:50
	vec4 tex_frg_50_read = texture(tex_frg_50, vec3(n_out47p0).xy);
	vec3 n_out50p0 = tex_frg_50_read.rgb;
	float n_out50p1 = tex_frg_50_read.a;

// VectorOp:66
	vec3 n_out66p0 = n_out62p0 * n_out50p0;

// VectorOp:72
	vec3 n_out72p0 = n_out71p0 * n_out66p0;

// VectorMix:79
	vec3 n_out79p0 = mix(n_out38p0, n_out72p0, vec3(n_out50p1));

// ScalarOp:25
	float n_out25p0 = n_out23p1 + n_out24p0;

// ScalarOp:29
	float n_in29p1 = 3.00000;
	float n_out29p0 = pow(n_out25p0, n_in29p1);

// Input:74
	vec3 n_out74p0 = vec3(UV, 0.0);

// VectorFunc:75
	vec3 n_out75p0 = round(n_out74p0);

// VectorDecompose:76
	float n_out76p0 = n_out75p0.x;
	float n_out76p1 = n_out75p0.y;
	float n_out76p2 = n_out75p0.z;

// ScalarOp:77
	float n_out77p0 = n_out76p0 * n_out76p1;

// ScalarMix:73
	float n_in73p0 = 1.00000;
	float n_out73p0 = mix(n_in73p0, n_out50p1, n_out77p0);

// ScalarOp:78
	float n_out78p0 = n_out29p0 * n_out73p0;

// Input:80
	vec3 n_out80p0 = COLOR.rgb;

// VectorDecompose:81
	float n_out81p0 = n_out80p0.x;
	float n_out81p1 = n_out80p0.y;
	float n_out81p2 = n_out80p0.z;

// ScalarOp:82
	float n_in82p1 = 1.00000;
	float n_out82p0 = n_out81p1 + n_in82p1;

// Texture:84
	vec4 tex_frg_84_read = texture(tex_frg_84, vec3(n_out82p0).xy);
	vec3 n_out84p0 = tex_frg_84_read.rgb;
	float n_out84p1 = tex_frg_84_read.a;

// ScalarOp:83
	float n_out83p0 = n_out78p0 * dot(n_out84p0, vec3(0.333333, 0.333333, 0.333333));

// Output:0
	ALBEDO = n_out79p0;
	ALPHA = n_out83p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -296.689, 341.687 )
modes/cull = 2
modes/depth_draw = 3
flags/unshaded = true
nodes/vertex/0/position = Vector2( 3080, 240 )
nodes/vertex/2/node = SubResource( 123 )
nodes/vertex/2/position = Vector2( -202.96, 33.3333 )
nodes/vertex/3/node = SubResource( 134 )
nodes/vertex/3/position = Vector2( -22.9603, 33.3333 )
nodes/vertex/4/node = SubResource( 145 )
nodes/vertex/4/position = Vector2( 372, 0 )
nodes/vertex/5/node = SubResource( 158 )
nodes/vertex/5/position = Vector2( 760, 120 )
nodes/vertex/6/node = SubResource( 169 )
nodes/vertex/6/position = Vector2( 320, 300 )
nodes/vertex/7/node = SubResource( 179 )
nodes/vertex/7/position = Vector2( 200, 40 )
nodes/vertex/8/node = SubResource( 180 )
nodes/vertex/8/position = Vector2( 200, -160 )
nodes/vertex/9/node = SubResource( 181 )
nodes/vertex/9/position = Vector2( 180, -360 )
nodes/vertex/10/node = SubResource( 112 )
nodes/vertex/10/position = Vector2( 420, -180 )
nodes/vertex/11/node = SubResource( 115 )
nodes/vertex/11/position = Vector2( 620, -120 )
nodes/vertex/12/node = SubResource( 116 )
nodes/vertex/12/position = Vector2( 1300, 20 )
nodes/vertex/13/node = SubResource( 117 )
nodes/vertex/13/position = Vector2( 800, -40 )
nodes/vertex/14/node = SubResource( 118 )
nodes/vertex/14/position = Vector2( -420, 380 )
nodes/vertex/16/node = SubResource( 119 )
nodes/vertex/16/position = Vector2( 2400, 220 )
nodes/vertex/17/node = SubResource( 120 )
nodes/vertex/17/position = Vector2( 580, 500 )
nodes/vertex/18/node = SubResource( 121 )
nodes/vertex/18/position = Vector2( 780, 540 )
nodes/vertex/19/node = SubResource( 122 )
nodes/vertex/19/position = Vector2( 1100, 540 )
nodes/vertex/20/node = SubResource( 124 )
nodes/vertex/20/position = Vector2( -260, 360 )
nodes/vertex/21/node = SubResource( 125 )
nodes/vertex/21/position = Vector2( -40, 260 )
nodes/vertex/22/node = SubResource( 126 )
nodes/vertex/22/position = Vector2( -40, 340 )
nodes/vertex/23/node = SubResource( 127 )
nodes/vertex/23/position = Vector2( 620, 240 )
nodes/vertex/24/node = SubResource( 128 )
nodes/vertex/24/position = Vector2( -80, 540 )
nodes/vertex/25/node = SubResource( 129 )
nodes/vertex/25/position = Vector2( -80, 660 )
nodes/vertex/26/node = SubResource( 130 )
nodes/vertex/26/position = Vector2( 560, 380 )
nodes/vertex/27/node = SubResource( 131 )
nodes/vertex/27/position = Vector2( 900, 320 )
nodes/vertex/28/node = SubResource( 132 )
nodes/vertex/28/position = Vector2( 160, 220 )
nodes/vertex/29/node = SubResource( 133 )
nodes/vertex/29/position = Vector2( 160, 320 )
nodes/vertex/30/node = SubResource( 135 )
nodes/vertex/30/position = Vector2( 160, 460 )
nodes/vertex/31/node = SubResource( 136 )
nodes/vertex/31/position = Vector2( 160, 580 )
nodes/vertex/32/node = SubResource( 137 )
nodes/vertex/32/position = Vector2( -260, 520 )
nodes/vertex/33/node = SubResource( 138 )
nodes/vertex/33/position = Vector2( 1100, 300 )
nodes/vertex/34/node = SubResource( 139 )
nodes/vertex/34/position = Vector2( 1300, 300 )
nodes/vertex/35/node = SubResource( 140 )
nodes/vertex/35/position = Vector2( 940, 160 )
nodes/vertex/36/node = SubResource( 141 )
nodes/vertex/36/position = Vector2( 1100, 140 )
nodes/vertex/37/node = SubResource( 142 )
nodes/vertex/37/position = Vector2( 1300, 160 )
nodes/vertex/38/node = SubResource( 143 )
nodes/vertex/38/position = Vector2( 1460, 140 )
nodes/vertex/39/node = SubResource( 144 )
nodes/vertex/39/position = Vector2( 1860, 180 )
nodes/vertex/40/node = SubResource( 146 )
nodes/vertex/40/position = Vector2( 2040, 220 )
nodes/vertex/41/node = SubResource( 149 )
nodes/vertex/41/position = Vector2( 1680, 120 )
nodes/vertex/42/node = SubResource( 150 )
nodes/vertex/42/position = Vector2( 1460, 520 )
nodes/vertex/43/node = SubResource( 151 )
nodes/vertex/43/position = Vector2( 2140, 620 )
nodes/vertex/44/node = SubResource( 152 )
nodes/vertex/44/position = Vector2( 2580, 240 )
nodes/vertex/45/node = SubResource( 153 )
nodes/vertex/45/position = Vector2( 1640, 360 )
nodes/vertex/46/node = SubResource( 154 )
nodes/vertex/46/position = Vector2( 1800, 340 )
nodes/vertex/47/node = SubResource( 155 )
nodes/vertex/47/position = Vector2( 2000, 340 )
nodes/vertex/48/node = SubResource( 156 )
nodes/vertex/48/position = Vector2( 2200, 340 )
nodes/vertex/49/node = SubResource( 157 )
nodes/vertex/49/position = Vector2( 2400, 340 )
nodes/vertex/51/node = SubResource( 159 )
nodes/vertex/51/position = Vector2( 1960, 520 )
nodes/vertex/52/node = SubResource( 162 )
nodes/vertex/52/position = Vector2( 1720, 520 )
nodes/vertex/53/node = SubResource( 163 )
nodes/vertex/53/position = Vector2( 2199.04, 509.232 )
nodes/vertex/54/node = SubResource( 164 )
nodes/vertex/54/position = Vector2( 2040, 0 )
nodes/vertex/55/node = SubResource( 165 )
nodes/vertex/55/position = Vector2( 2220, 180 )
nodes/vertex/56/node = SubResource( 166 )
nodes/vertex/56/position = Vector2( 1100, -60 )
nodes/vertex/58/node = SubResource( 167 )
nodes/vertex/58/position = Vector2( 900, 80 )
nodes/vertex/59/node = SubResource( 168 )
nodes/vertex/59/position = Vector2( 2620, 360 )
nodes/vertex/60/node = SubResource( 170 )
nodes/vertex/60/position = Vector2( 1840, 100 )
nodes/vertex/61/node = SubResource( 171 )
nodes/vertex/61/position = Vector2( 540, 120 )
nodes/vertex/62/node = SubResource( 172 )
nodes/vertex/62/position = Vector2( 340, 200 )
nodes/vertex/63/node = SubResource( 173 )
nodes/vertex/63/position = Vector2( 1820, 460 )
nodes/vertex/64/node = SubResource( 174 )
nodes/vertex/64/position = Vector2( 1620, 460 )
nodes/vertex/65/node = SubResource( 175 )
nodes/vertex/65/position = Vector2( 740, 440 )
nodes/vertex/66/node = SubResource( 176 )
nodes/vertex/66/position = Vector2( 920, 420 )
nodes/vertex/67/node = SubResource( 177 )
nodes/vertex/67/position = Vector2( 2865.46, 274.145 )
nodes/vertex/68/node = SubResource( 178 )
nodes/vertex/68/position = Vector2( 2620, 440 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 6, 0, 5, 1, 3, 1, 7, 0, 7, 0, 4, 0, 9, 0, 10, 0, 8, 0, 10, 1, 3, 1, 8, 0, 10, 0, 11, 0, 5, 0, 12, 1, 11, 0, 13, 0, 18, 1, 19, 0, 17, 0, 18, 0, 14, 0, 20, 0, 20, 0, 27, 0, 22, 0, 29, 1, 20, 1, 28, 0, 21, 0, 28, 1, 20, 2, 29, 0, 20, 1, 30, 0, 24, 0, 30, 1, 25, 0, 31, 1, 20, 2, 31, 0, 30, 0, 26, 0, 31, 0, 26, 1, 28, 0, 23, 0, 29, 0, 23, 1, 32, 0, 21, 0, 32, 0, 22, 0, 32, 0, 24, 0, 32, 0, 25, 0, 26, 0, 27, 1, 23, 0, 27, 2, 19, 0, 16, 2, 27, 0, 33, 0, 33, 0, 34, 0, 35, 0, 36, 0, 36, 0, 37, 0, 37, 0, 38, 0, 34, 0, 40, 1, 40, 0, 16, 1, 38, 0, 41, 0, 41, 0, 39, 0, 39, 0, 40, 0, 18, 1, 42, 0, 42, 0, 43, 0, 16, 0, 44, 0, 43, 0, 44, 2, 45, 0, 46, 0, 46, 0, 47, 0, 47, 0, 48, 0, 48, 0, 49, 0, 49, 0, 44, 1, 52, 0, 51, 0, 53, 0, 49, 1, 51, 0, 53, 0, 12, 0, 54, 0, 54, 0, 55, 0, 55, 0, 16, 0, 13, 0, 56, 0, 56, 0, 12, 0, 58, 0, 56, 1, 44, 0, 0, 6, 60, 0, 54, 1, 4, 0, 61, 0, 61, 0, 5, 0, 62, 0, 61, 2, 63, 0, 47, 1, 64, 0, 46, 1, 65, 0, 66, 0, 65, 0, 66, 1, 66, 0, 33, 1, 44, 0, 67, 0, 59, 0, 67, 1, 68, 0, 67, 2, 67, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 3740, 1120 )
nodes/fragment/2/node = SubResource( 12 )
nodes/fragment/2/position = Vector2( 0, 60 )
nodes/fragment/3/node = SubResource( 27 )
nodes/fragment/3/position = Vector2( 180, 60 )
nodes/fragment/4/node = SubResource( 48 )
nodes/fragment/4/position = Vector2( 600, 160 )
nodes/fragment/5/node = SubResource( 59 )
nodes/fragment/5/position = Vector2( 400, 220 )
nodes/fragment/6/node = SubResource( 74 )
nodes/fragment/6/position = Vector2( 420, 0 )
nodes/fragment/7/node = SubResource( 90 )
nodes/fragment/7/position = Vector2( 400, -200 )
nodes/fragment/8/node = SubResource( 103 )
nodes/fragment/8/position = Vector2( 1200, 180 )
nodes/fragment/9/node = SubResource( 111 )
nodes/fragment/9/position = Vector2( 620, -100 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( 815.223, -33.1712 )
nodes/fragment/11/node = SubResource( 3 )
nodes/fragment/11/position = Vector2( -120, 520 )
nodes/fragment/12/node = SubResource( 4 )
nodes/fragment/12/position = Vector2( 120, 540 )
nodes/fragment/13/node = SubResource( 5 )
nodes/fragment/13/position = Vector2( 360, 600 )
nodes/fragment/14/node = SubResource( 6 )
nodes/fragment/14/position = Vector2( 360, 540 )
nodes/fragment/15/node = SubResource( 7 )
nodes/fragment/15/position = Vector2( 780, 560 )
nodes/fragment/16/node = SubResource( 8 )
nodes/fragment/16/position = Vector2( 560, 580 )
nodes/fragment/17/node = SubResource( 9 )
nodes/fragment/17/position = Vector2( 280, 400 )
nodes/fragment/18/node = SubResource( 10 )
nodes/fragment/18/position = Vector2( 480, 380 )
nodes/fragment/19/node = SubResource( 11 )
nodes/fragment/19/position = Vector2( 680, 360 )
nodes/fragment/20/node = SubResource( 13 )
nodes/fragment/20/position = Vector2( 40, 420 )
nodes/fragment/21/node = SubResource( 16 )
nodes/fragment/21/position = Vector2( -440, 300 )
nodes/fragment/22/node = SubResource( 17 )
nodes/fragment/22/position = Vector2( -192.026, 416.891 )
nodes/fragment/23/node = SubResource( 20 )
nodes/fragment/23/position = Vector2( 880, 380 )
nodes/fragment/24/node = SubResource( 21 )
nodes/fragment/24/position = Vector2( 940, 600 )
nodes/fragment/25/node = SubResource( 22 )
nodes/fragment/25/position = Vector2( 1160, 480 )
nodes/fragment/26/node = SubResource( 23 )
nodes/fragment/26/position = Vector2( -1040, 480 )
nodes/fragment/27/node = SubResource( 24 )
nodes/fragment/27/position = Vector2( -860, 480 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( -647.474, 465.166 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( 1360, 480 )
nodes/fragment/30/node = SubResource( 30 )
nodes/fragment/30/position = Vector2( 820, 140 )
nodes/fragment/31/node = SubResource( 31 )
nodes/fragment/31/position = Vector2( 1240, 340 )
nodes/fragment/32/node = SubResource( 34 )
nodes/fragment/32/position = Vector2( 1040, 240 )
nodes/fragment/33/node = SubResource( 37 )
nodes/fragment/33/position = Vector2( 1380, 180 )
nodes/fragment/34/node = SubResource( 38 )
nodes/fragment/34/position = Vector2( 1587.79, 367.793 )
nodes/fragment/35/node = SubResource( 39 )
nodes/fragment/35/position = Vector2( 920, -100 )
nodes/fragment/36/node = SubResource( 40 )
nodes/fragment/36/position = Vector2( 1080, -80 )
nodes/fragment/37/node = SubResource( 43 )
nodes/fragment/37/position = Vector2( 1600, 140 )
nodes/fragment/38/node = SubResource( 44 )
nodes/fragment/38/position = Vector2( 1800, 300 )
nodes/fragment/39/node = SubResource( 45 )
nodes/fragment/39/position = Vector2( 1860, 220 )
nodes/fragment/40/node = SubResource( 49 )
nodes/fragment/40/position = Vector2( -100, 1020 )
nodes/fragment/41/node = SubResource( 50 )
nodes/fragment/41/position = Vector2( 880, 1220 )
nodes/fragment/42/node = SubResource( 51 )
nodes/fragment/42/position = Vector2( 1060, 1240 )
nodes/fragment/43/node = SubResource( 52 )
nodes/fragment/43/position = Vector2( 1220, 1220 )
nodes/fragment/44/node = SubResource( 53 )
nodes/fragment/44/position = Vector2( 880, 1360 )
nodes/fragment/45/node = SubResource( 54 )
nodes/fragment/45/position = Vector2( 1060, 1380 )
nodes/fragment/46/node = SubResource( 55 )
nodes/fragment/46/position = Vector2( 1220, 1340 )
nodes/fragment/47/node = SubResource( 56 )
nodes/fragment/47/position = Vector2( 1660, 1280 )
nodes/fragment/48/node = SubResource( 57 )
nodes/fragment/48/position = Vector2( 1400, 1260 )
nodes/fragment/49/node = SubResource( 58 )
nodes/fragment/49/position = Vector2( 1420, 1340 )
nodes/fragment/50/node = SubResource( 62 )
nodes/fragment/50/position = Vector2( 1900, 1220 )
nodes/fragment/51/node = SubResource( 63 )
nodes/fragment/51/position = Vector2( 300, 900 )
nodes/fragment/52/node = SubResource( 64 )
nodes/fragment/52/position = Vector2( 680, 880 )
nodes/fragment/53/node = SubResource( 65 )
nodes/fragment/53/position = Vector2( 480, 900 )
nodes/fragment/54/node = SubResource( 66 )
nodes/fragment/54/position = Vector2( 1220, 940 )
nodes/fragment/55/node = SubResource( 67 )
nodes/fragment/55/position = Vector2( 1020, 940 )
nodes/fragment/56/node = SubResource( 68 )
nodes/fragment/56/position = Vector2( 860, 920 )
nodes/fragment/57/node = SubResource( 69 )
nodes/fragment/57/position = Vector2( 1420, 920 )
nodes/fragment/58/node = SubResource( 70 )
nodes/fragment/58/position = Vector2( 100, 940 )
nodes/fragment/59/node = SubResource( 71 )
nodes/fragment/59/position = Vector2( 1620, 980 )
nodes/fragment/60/node = SubResource( 75 )
nodes/fragment/60/position = Vector2( 1080, 1020 )
nodes/fragment/62/node = SubResource( 78 )
nodes/fragment/62/position = Vector2( 2400, 1000 )
nodes/fragment/63/node = SubResource( 79 )
nodes/fragment/63/position = Vector2( 1440, 1040 )
nodes/fragment/64/node = SubResource( 80 )
nodes/fragment/64/position = Vector2( 1800, 1020 )
nodes/fragment/65/node = SubResource( 81 )
nodes/fragment/65/position = Vector2( 1260, 1020 )
nodes/fragment/66/node = SubResource( 82 )
nodes/fragment/66/position = Vector2( 2580, 1080 )
nodes/fragment/67/node = SubResource( 85 )
nodes/fragment/67/position = Vector2( 1400, 680 )
nodes/fragment/68/node = SubResource( 86 )
nodes/fragment/68/position = Vector2( 1700, 860 )
nodes/fragment/69/node = SubResource( 87 )
nodes/fragment/69/position = Vector2( 2000, 940 )
nodes/fragment/70/node = SubResource( 91 )
nodes/fragment/70/position = Vector2( 2180, 960 )
nodes/fragment/71/node = SubResource( 94 )
nodes/fragment/71/position = Vector2( 2560, 880 )
nodes/fragment/72/node = SubResource( 95 )
nodes/fragment/72/position = Vector2( 2766.34, 1036.11 )
nodes/fragment/73/node = SubResource( 96 )
nodes/fragment/73/position = Vector2( 2720, 1340 )
nodes/fragment/74/node = SubResource( 97 )
nodes/fragment/74/position = Vector2( 1880, 1440 )
nodes/fragment/75/node = SubResource( 98 )
nodes/fragment/75/position = Vector2( 2040, 1420 )
nodes/fragment/76/node = SubResource( 99 )
nodes/fragment/76/position = Vector2( 2260, 1440 )
nodes/fragment/77/node = SubResource( 100 )
nodes/fragment/77/position = Vector2( 2500, 1420 )
nodes/fragment/78/node = SubResource( 101 )
nodes/fragment/78/position = Vector2( 2920, 1180 )
nodes/fragment/79/node = SubResource( 102 )
nodes/fragment/79/position = Vector2( 3060, 1000 )
nodes/fragment/80/node = SubResource( 104 )
nodes/fragment/80/position = Vector2( 2720, 1460 )
nodes/fragment/81/node = SubResource( 105 )
nodes/fragment/81/position = Vector2( 2920, 1420 )
nodes/fragment/82/node = SubResource( 106 )
nodes/fragment/82/position = Vector2( 3140, 1400 )
nodes/fragment/83/node = SubResource( 107 )
nodes/fragment/83/position = Vector2( 3540, 1260 )
nodes/fragment/84/node = SubResource( 110 )
nodes/fragment/84/position = Vector2( 3320, 1340 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 5, 0, 5, 0, 4, 0, 3, 1, 6, 0, 7, 0, 8, 0, 6, 0, 8, 1, 9, 0, 10, 0, 11, 0, 12, 0, 12, 1, 13, 0, 12, 0, 14, 0, 13, 0, 15, 1, 14, 0, 16, 0, 16, 0, 15, 0, 17, 0, 18, 0, 18, 0, 19, 0, 11, 0, 20, 1, 20, 0, 17, 0, 21, 0, 22, 0, 22, 0, 20, 0, 19, 0, 23, 0, 15, 0, 24, 0, 24, 0, 25, 1, 26, 0, 27, 0, 27, 0, 28, 0, 28, 0, 21, 0, 23, 1, 25, 0, 25, 0, 29, 0, 23, 0, 31, 0, 30, 0, 32, 0, 24, 0, 31, 2, 32, 0, 31, 1, 8, 0, 33, 0, 33, 0, 34, 0, 31, 0, 34, 1, 35, 0, 36, 0, 36, 1, 37, 0, 37, 0, 38, 0, 34, 0, 38, 1, 10, 1, 39, 0, 40, 0, 41, 0, 41, 0, 42, 0, 42, 0, 43, 0, 44, 0, 45, 0, 45, 0, 46, 0, 40, 0, 44, 0, 43, 0, 48, 0, 48, 0, 47, 0, 46, 0, 49, 0, 49, 0, 47, 1, 47, 0, 50, 0, 51, 0, 53, 0, 53, 1, 52, 0, 52, 0, 56, 0, 40, 0, 58, 0, 58, 0, 51, 0, 56, 0, 55, 0, 54, 0, 57, 0, 60, 0, 65, 0, 65, 0, 63, 0, 57, 0, 59, 0, 62, 0, 66, 0, 50, 0, 66, 1, 63, 0, 59, 1, 59, 0, 64, 0, 67, 0, 68, 0, 68, 0, 69, 0, 64, 0, 69, 1, 69, 0, 70, 0, 70, 0, 62, 0, 55, 0, 54, 0, 55, 0, 71, 0, 71, 0, 72, 0, 66, 0, 72, 1, 74, 0, 75, 0, 75, 0, 76, 0, 76, 0, 77, 0, 76, 1, 77, 1, 77, 0, 73, 2, 50, 1, 73, 1, 29, 0, 78, 0, 73, 0, 78, 1, 38, 0, 79, 0, 72, 0, 79, 1, 50, 1, 79, 2, 80, 0, 81, 0, 81, 1, 82, 0, 79, 0, 0, 0, 78, 0, 83, 0, 82, 0, 84, 0, 84, 0, 83, 1, 83, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=183]
shader = SubResource( 182 )
shader_param/branch = 0.0
shader_param/trans = 1.0
shader_param/pos = Vector3( 0, -2, 0 )
shader_param/scale_flower = 0.0
shader_param/pos2 = Vector3( -1.488, 2.415, -0.03 )
shader_param/scale = Vector3( 0, 0, 0 )
shader_param/morph = 0.0

[sub_resource type="Animation" id=184]
length = 5.0
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("growth:material/0:shader_param/pos")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -2, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("growth:material/0:shader_param/branch")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.6, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("growth:material/0:shader_param/trans")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("growth:material/0:shader_param/scale")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.75, 0.8, 1.15 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0.442, 0.201, 0.188 ), Vector3( 2, 1, 1.5 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("growth:material/0:shader_param/pos2")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.75, 0.8, 0.85, 0.9, 0.95, 1, 1.05, 1.1, 1.15 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( -1.488, 2.415, -0.03 ), Vector3( -1.488, 2.415, -0.03 ), Vector3( -1.518, 2.368, -0.198 ), Vector3( -1.207, 2.191, -0.03 ), Vector3( -0.908, 1.856, -0.03 ), Vector3( -0.719, 1.644, -0.03 ), Vector3( -0.597, 1.517, -0.03 ), Vector3( -0.518, 1.433, -0.03 ), Vector3( -0.47, 1.385, -0.03 ), Vector3( -0.44, 1.35, -0.03 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("growth:material/0:shader_param/scale_flower")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.6, 1.25 ),
"transitions": PoolRealArray( 1, 0.287175, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 9.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("growth:material/0:shader_param/morph")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 2.5, 3.05 ),
"transitions": PoolRealArray( 1, 0.517632, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 1.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("growth:scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 4.15, 4.6 ),
"transitions": PoolRealArray( 1, 0.63728, 1 ),
"update": 0,
"values": [ Vector3( 1, 1, 1 ), Vector3( 1, 1, 1 ), Vector3( 0, 0, 0 ) ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.915924, 0.0695357, -0.395283, 0.23244, 0.710996, 0.663669, 0.327193, -0.69975, 0.635055, 0, 1, 0 )
visible = false

[node name="growth" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 183 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
playback_speed = 1.5
"anims/New Anim" = SubResource( 184 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.936746, 0.144051, -0.318994, 0, 0.911382, 0.411562, 0.350011, -0.385529, 0.853733, -0.628349, 2.50947, 2.29802 )
