[gd_scene load_steps=167 format=2]

[ext_resource path="res://addons/shaderV/tools/sinTime.gd" type="Script" id=1]
[ext_resource path="res://60fps image sequence export.gd" type="Script" id=2]

[sub_resource type="Animation" id=1]
tracks/0/type = "value"
tracks/0/path = NodePath("Bread:material/0:shader_param/pos")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -2, 0 ), Vector3( -0.003, -1.838, 0 ), Vector3( -0.021, -1.677, 0 ), Vector3( -0.06, -1.531, 0 ), Vector3( -0.132, -1.393, 0 ), Vector3( -0.225, -1.267, 0 ), Vector3( -0.326, -1.158, 0 ), Vector3( -0.445, -1.062, 0 ), Vector3( -0.58, -0.99, 0 ), Vector3( -0.723, -0.943, 0 ), Vector3( -0.884, -0.91, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("./Bread:material/0:shader_param/rot")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.568 ]
}

[sub_resource type="Animation" id=2]
resource_name = "New Anim (2)"
length = 14.0
tracks/0/type = "value"
tracks/0/path = NodePath("Bread:material/0:shader_param/rot")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 6, 7, 10.9, 11.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.568, 1.568, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Bread:material/0:shader_param/pos")
tracks/1/interp = 1
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 6, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7, 10.9, 11.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -2, 0 ), Vector3( -0.003, -1.838, 0 ), Vector3( -0.021, -1.677, 0 ), Vector3( -0.06, -1.531, 0 ), Vector3( -0.132, -1.393, 0 ), Vector3( -0.225, -1.267, 0 ), Vector3( -0.326, -1.158, 0 ), Vector3( -0.445, -1.062, 0 ), Vector3( -0.58, -0.99, 0 ), Vector3( -0.723, -0.943, 0 ), Vector3( -0.884, -0.91, 0 ), Vector3( -0.884, -0.91, 0 ), Vector3( 0, -2, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Bread:rotation_degrees")
tracks/2/interp = 2
tracks/2/loop_wrap = false
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.6, 3.7, 5.7 ),
"transitions": PoolRealArray( 1, 1, 0.615572, 1.56917 ),
"update": 0,
"values": [ Vector3( 0, 0, -90 ), Vector3( 2.17856e-06, 60.443, -90 ), Vector3( -3.70206e-06, -77.106, -90 ), Vector3( 0, 0, -90 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Bread:material/0:shader_param/morph")
tracks/3/interp = 1
tracks/3/loop_wrap = false
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 9.6, 10.8, 12.3, 13.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 1.0, 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Bread:material/0:shader_param/col")
tracks/4/interp = 1
tracks/4/loop_wrap = false
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 9.8, 10.9, 11.9, 12.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 1.0, 0.0 ]
}

[sub_resource type="Animation" id=3]
resource_name = "New Anim (copy)"
tracks/0/type = "value"
tracks/0/path = NodePath(".:material/0:shader_param/pos")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -2, 0 ), Vector3( -0.003, -1.838, 0 ), Vector3( -0.021, -1.677, 0 ), Vector3( -0.06, -1.531, 0 ), Vector3( -0.132, -1.393, 0 ), Vector3( -0.225, -1.267, 0 ), Vector3( -0.326, -1.158, 0 ), Vector3( -0.445, -1.062, 0 ), Vector3( -0.58, -0.99, 0 ), Vector3( -0.723, -0.943, 0 ), Vector3( -0.884, -0.91, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material/0:shader_param/rot")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.568 ]
}

[sub_resource type="CylinderMesh" id=4]
height = 4.0
radial_segments = 115
rings = 114

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0.452756, 0.456221 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = SubResource( 8 )

[sub_resource type="OpenSimplexNoise" id=10]
period = 3.5

[sub_resource type="NoiseTexture" id=11]
seamless = true
noise = SubResource( 10 )

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = SubResource( 11 )

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=14]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=15]

[sub_resource type="VisualShaderNodeVectorLen" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 1.5 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=20]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=21]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=23]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 30, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 30, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.75, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=26]

[sub_resource type="Curve" id=27]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=28]
curve = SubResource( 27 )

[sub_resource type="VisualShaderNodeTexture" id=29]
texture = SubResource( 28 )

[sub_resource type="VisualShaderNodeScalarOp" id=30]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=31]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=32]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarClamp" id=33]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=34]

[sub_resource type="OpenSimplexNoise" id=35]
period = 3.5
persistence = 1.0

[sub_resource type="NoiseTexture" id=36]
noise = SubResource( 35 )

[sub_resource type="VisualShaderNodeTexture" id=37]
texture = SubResource( 36 )

[sub_resource type="VisualShaderNodeScalarInterp" id=38]

[sub_resource type="VisualShaderNodeScalarOp" id=39]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=40]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeInput" id=41]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=42]

[sub_resource type="Gradient" id=43]
offsets = PoolRealArray( 0.00724638, 0.0120773, 0.0289855, 0.0338164, 0.103846, 0.107692, 0.111538, 0.513919, 0.518201 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.078125, 0.078125, 0.078125, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=44]
gradient = SubResource( 43 )

[sub_resource type="VisualShaderNodeTexture" id=45]
texture = SubResource( 44 )

[sub_resource type="VisualShaderNodeVectorInterp" id=46]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.3, 0.1, 0 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="Gradient" id=47]
offsets = PoolRealArray( 0, 0.140575, 0.246006, 0.341853, 0.731629, 1 )
colors = PoolColorArray( 0.328125, 0.328125, 0.328125, 1, 0.14902, 0.14902, 0.14902, 1, 0.125, 0.125, 0.125, 1, 0.151931, 0.151931, 0.151931, 1, 0.535156, 0.535156, 0.535156, 1, 0.329412, 0.329412, 0.329412, 1 )

[sub_resource type="GradientTexture" id=48]
gradient = SubResource( 47 )

[sub_resource type="VisualShaderNodeTexture" id=49]
texture = SubResource( 48 )

[sub_resource type="VisualShaderNodeScalarOp" id=50]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="Gradient" id=51]
offsets = PoolRealArray( 0, 0.0708661, 0.122047, 0.437186, 0.559055 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=52]
gradient = SubResource( 51 )

[sub_resource type="VisualShaderNodeTexture" id=53]
texture = SubResource( 52 )

[sub_resource type="VisualShaderNodeScalarOp" id=54]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=55]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=56]

[sub_resource type="VisualShaderNodeVectorOp" id=57]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 8, 1, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=58]
colors = PoolColorArray( 0.902344, 0.505916, 0.0422974, 1, 0.234375, 0.0892067, 0.0183105, 1 )

[sub_resource type="GradientTexture" id=59]
gradient = SubResource( 58 )

[sub_resource type="VisualShaderNodeTexture" id=60]
texture = SubResource( 59 )

[sub_resource type="VisualShaderNodeVectorOp" id=61]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorOp" id=62]
operator = 2

[sub_resource type="Curve" id=63]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.5, 0.5 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=64]
curve = SubResource( 63 )

[sub_resource type="VisualShaderNodeTexture" id=65]
texture = SubResource( 64 )

[sub_resource type="OpenSimplexNoise" id=66]
period = 53.6
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=67]
seamless = true
noise = SubResource( 66 )

[sub_resource type="VisualShaderNodeTexture" id=68]
texture = SubResource( 67 )

[sub_resource type="VisualShaderNodeVectorOp" id=69]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=70]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeInput" id=71]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=72]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 25, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=73]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=74]

[sub_resource type="Gradient" id=75]
offsets = PoolRealArray( 0.42492, 0.523962 )
colors = PoolColorArray( 0, 0, 0, 1, 0.015625, 0.015625, 0.015625, 1 )

[sub_resource type="GradientTexture" id=76]
gradient = SubResource( 75 )

[sub_resource type="VisualShaderNodeTexture" id=77]
output_port_for_preview = 0
texture = SubResource( 76 )

[sub_resource type="VisualShaderNodeVectorOp" id=78]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=79]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.75, 0.75, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=80]

[sub_resource type="VisualShaderNodeTexture" id=81]
texture = SubResource( 28 )

[sub_resource type="VisualShaderNodeScalarOp" id=82]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=83]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=84]

[sub_resource type="VisualShaderNodeVectorInterp" id=85]

[sub_resource type="VisualShaderNodeScalarUniform" id=86]
uniform_name = "col"

[sub_resource type="VisualShaderNodeScalarInterp" id=87]

[sub_resource type="VisualShaderNodeScalarOp" id=88]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=89]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=90]
operator = 1

[sub_resource type="VisualShaderNodeCustom" id=91]
default_input_values = [ 0, 1.0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=92]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=93]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=94]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=95]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=96]

[sub_resource type="VisualShaderNodeInput" id=97]
input_name = "vertex"

[sub_resource type="VisualShaderNodeCustom" id=98]
default_input_values = [ 0, 1.0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorInterp" id=99]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, Vector3( 1, 1, 1 ) ]

[sub_resource type="VisualShaderNodeInput" id=100]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=101]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=102]

[sub_resource type="Gradient" id=103]
offsets = PoolRealArray( 0.0735294, 0.0854271, 0.460784, 0.485294 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=104]
gradient = SubResource( 103 )

[sub_resource type="VisualShaderNodeTexture" id=105]
texture = SubResource( 104 )

[sub_resource type="VisualShaderNodeVectorOp" id=106]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -1, -1, 0 ) ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=107]

[sub_resource type="VisualShaderNodeVectorOp" id=108]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -1.27, 0 ) ]

[sub_resource type="VisualShaderNodeScalarUniform" id=109]
uniform_name = "rot"

[sub_resource type="VisualShaderNodeVec3Uniform" id=110]
uniform_name = "pos"

[sub_resource type="VisualShaderNodeVectorCompose" id=111]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 0.0 ]

[sub_resource type="Curve" id=112]
max_value = 3.0
_data = [ Vector2( 0.2, 1.2 ), 0.0, 0.0, 0, 0, Vector2( 0.5, 2.4 ), 0.0, 0.0, 0, 0, Vector2( 0.8, 1.2 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=113]
curve = SubResource( 112 )

[sub_resource type="VisualShaderNodeTexture" id=114]
texture = SubResource( 113 )

[sub_resource type="VisualShaderNodeInput" id=115]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=116]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=117]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=118]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=119]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=120]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=121]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=122]

[sub_resource type="VisualShaderNodeTexture" id=123]
texture = SubResource( 113 )

[sub_resource type="VisualShaderNodeInput" id=124]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=125]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=126]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=127]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=128]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=129]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=130]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=131]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.75, 1, 0.75 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=132]

[sub_resource type="VisualShaderNodeVectorOp" id=133]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.75, 1, 0.75 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=134]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=135]

[sub_resource type="Curve" id=136]
min_value = -3.0
_data = [ Vector2( 0, -3 ), 0.0, 1960.0, 0, 1, Vector2( 0.00204081, 1 ), 1960.0, 0.0, 1, 0, Vector2( 0.0320366, 1 ), 0.0, -1505.31, 0, 1, Vector2( 0.0346939, -3 ), -1505.31, 0.0, 1, 0 ]

[sub_resource type="CurveTexture" id=137]
curve = SubResource( 136 )

[sub_resource type="VisualShaderNodeTexture" id=138]
texture = SubResource( 137 )

[sub_resource type="VisualShaderNodeScalarOp" id=139]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=140]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=141]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 1.9, 10 ) ]
operator = 7

[sub_resource type="VisualShaderNodeVectorOp" id=142]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.75, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=143]

[sub_resource type="VisualShaderNodeScalarOp" id=144]
default_input_values = [ 0, 0.0, 1, 3.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=145]
input_name = "uv"

[sub_resource type="Gradient" id=146]
offsets = PoolRealArray( 0.985294, 1 )

[sub_resource type="GradientTexture" id=147]
gradient = SubResource( 146 )

[sub_resource type="VisualShaderNodeTexture" id=148]
texture = SubResource( 147 )

[sub_resource type="VisualShaderNodeScalarFunc" id=149]
function = 15

[sub_resource type="VisualShaderNodeVectorInterp" id=150]

[sub_resource type="VisualShaderNodeScalarOp" id=151]
operator = 2

[sub_resource type="Curve" id=152]
min_value = -2.5
_data = [ Vector2( 0.104478, -2.5 ), 0.0, 1.0, 0, 1, Vector2( 0.104478, 1 ), 1.0, 0.0, 1, 0, Vector2( 0.386905, 1 ), 0.0, -73.5, 0, 1, Vector2( 0.434524, -2.5 ), -73.5, 0.0, 1, 0 ]

[sub_resource type="CurveTexture" id=153]
curve = SubResource( 152 )

[sub_resource type="VisualShaderNodeTexture" id=154]
texture = SubResource( 153 )

[sub_resource type="VisualShaderNodeScalarOp" id=155]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=156]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=157]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, -0.21, 2 ) ]
operator = 7

[sub_resource type="VisualShaderNodeVectorOp" id=158]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -10, -2.5, -10 ) ]
operator = 6

[sub_resource type="VisualShaderNodeVectorInterp" id=159]

[sub_resource type="VisualShaderNodeInput" id=160]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=161]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeScalarFunc" id=162]
function = 1

[sub_resource type="VisualShader" id=163]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_65;
uniform sampler2D tex_vtx_52;
uniform vec3 pos;
uniform float rot;
uniform sampler2D tex_vtx_43;
uniform sampler2D tex_vtx_80;
uniform sampler2D tex_vtx_75;
uniform sampler2D tex_vtx_25;
uniform float morph;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_40;
uniform sampler2D tex_frg_35;
uniform sampler2D tex_frg_57;
uniform sampler2D tex_frg_54;
uniform sampler2D tex_frg_48;
uniform sampler2D tex_frg_64;
uniform sampler2D tex_frg_58;
uniform sampler2D tex_frg_46;
uniform float col;
uniform sampler2D tex_frg_19;
uniform sampler2D tex_frg_5;



void vertex() {
// Input:63
	vec3 n_out63p0 = vec3(UV, 0.0);

// VectorDecompose:64
	float n_out64p0 = n_out63p0.x;
	float n_out64p1 = n_out63p0.y;
	float n_out64p2 = n_out63p0.z;

// Texture:65
	vec4 tex_vtx_65_read = texture(tex_vtx_65, vec3(n_out64p1).xy);
	vec3 n_out65p0 = tex_vtx_65_read.rgb;
	float n_out65p1 = tex_vtx_65_read.a;

// ScalarOp:66
	float n_in66p1 = 3.00000;
	float n_out66p0 = dot(n_out65p0, vec3(0.333333, 0.333333, 0.333333)) * n_in66p1;

// Input:53
	vec3 n_out53p0 = vec3(UV, 0.0);

// VectorOp:54
	vec3 n_in54p1 = vec3(4.00000, 1.00000, 0.00000);
	vec3 n_out54p0 = n_out53p0 * n_in54p1;

// VectorOp:55
	vec3 n_in55p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out55p0 = mod(n_out54p0, n_in55p1);

// Texture:52
	vec4 tex_vtx_52_read = texture(tex_vtx_52, n_out55p0.xy);
	vec3 n_out52p0 = tex_vtx_52_read.rgb;
	float n_out52p1 = tex_vtx_52_read.a;

// ScalarOp:56
	float n_in56p1 = 1.00000;
	float n_out56p0 = dot(n_out52p0, vec3(0.333333, 0.333333, 0.333333)) * n_in56p1;

// VectorOp:57
	vec3 n_in57p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out57p0 = vec3(n_out56p0) * n_in57p1;

// Input:58
	vec3 n_out58p0 = NORMAL;

// VectorOp:59
	vec3 n_out59p0 = n_out57p0 * n_out58p0;

// VectorOp:69
	vec3 n_out69p0 = vec3(n_out66p0) * n_out59p0;

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorOp:61
	vec3 n_out61p0 = n_out69p0 + n_out2p0;

// VectorOp:62
	vec3 n_in62p1 = vec3(0.75000, 1.00000, 0.75000);
	vec3 n_out62p0 = n_out61p0 * n_in62p1;

// VectorOp:70
	vec3 n_in70p1 = vec3(10.00000, 1.90000, 10.00000);
	vec3 n_out70p0 = min(n_out62p0, n_in70p1);

// VectorUniform:33
	vec3 n_out33p0 = pos;

// VectorOp:26
	vec3 n_out26p0 = n_out70p0 + n_out33p0;

// VectorDecompose:3
	float n_out3p0 = n_out26p0.x;
	float n_out3p1 = n_out26p0.y;
	float n_out3p2 = n_out26p0.z;

// ScalarUniform:32
	float n_out32p0 = rot;

// ScalarFunc:16
	float n_out16p0 = cos(n_out32p0);

// ScalarOp:15
	float n_out15p0 = n_out3p0 * n_out16p0;

// ScalarFunc:18
	float n_out18p0 = sin(n_out32p0);

// ScalarOp:17
	float n_out17p0 = n_out3p1 * n_out18p0;

// ScalarOp:19
	float n_out19p0 = n_out15p0 + n_out17p0;

// ScalarFunc:9
	float n_out9p0 = cos(n_out32p0);

// ScalarOp:8
	float n_out8p0 = n_out3p1 * n_out9p0;

// ScalarFunc:12
	float n_out12p0 = sin(n_out32p0);

// ScalarOp:11
	float n_out11p0 = n_out3p0 * n_out12p0;

// ScalarOp:13
	float n_out13p0 = n_out8p0 - n_out11p0;

// VectorCompose:4
	vec3 n_out4p0 = vec3(n_out19p0, n_out13p0, n_out3p2);

// Input:22
	vec3 n_out22p0 = VERTEX;

// VectorOp:31
	vec3 n_in31p1 = vec3(0.00000, -1.27000, 0.00000);
	vec3 n_out31p0 = n_out22p0 + n_in31p1;

// Input:44
	vec3 n_out44p0 = vec3(UV, 0.0);

// VectorOp:45
	vec3 n_in45p1 = vec3(4.00000, 1.00000, 0.00000);
	vec3 n_out45p0 = n_out44p0 * n_in45p1;

// VectorOp:46
	vec3 n_in46p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out46p0 = mod(n_out45p0, n_in46p1);

// Texture:43
	vec4 tex_vtx_43_read = texture(tex_vtx_43, n_out46p0.xy);
	vec3 n_out43p0 = tex_vtx_43_read.rgb;
	float n_out43p1 = tex_vtx_43_read.a;

// ScalarOp:47
	float n_in47p1 = 1.00000;
	float n_out47p0 = dot(n_out43p0, vec3(0.333333, 0.333333, 0.333333)) * n_in47p1;

// VectorOp:48
	vec3 n_in48p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out48p0 = vec3(n_out47p0) * n_in48p1;

// Input:50
	vec3 n_out50p0 = NORMAL;

// VectorOp:49
	vec3 n_out49p0 = n_out48p0 * n_out50p0;

// Input:23
	vec3 n_out23p0 = vec3(UV, 0.0);

// VectorDecompose:24
	float n_out24p0 = n_out23p0.x;
	float n_out24p1 = n_out23p0.y;
	float n_out24p2 = n_out23p0.z;

// Texture:80
	vec4 tex_vtx_80_read = texture(tex_vtx_80, vec3(n_out24p1).xy);
	vec3 n_out80p0 = tex_vtx_80_read.rgb;
	float n_out80p1 = tex_vtx_80_read.a;

// ScalarOp:81
	float n_in81p1 = 3.00000;
	float n_out81p0 = dot(n_out80p0, vec3(0.333333, 0.333333, 0.333333)) * n_in81p1;

// VectorOp:82
	vec3 n_out82p0 = n_out49p0 * vec3(n_out81p0);

// VectorOp:51
	vec3 n_out51p0 = n_out31p0 + n_out82p0;

// VectorOp:60
	vec3 n_in60p1 = vec3(0.75000, 1.00000, 0.75000);
	vec3 n_out60p0 = n_out51p0 * n_in60p1;

// VectorOp:83
	vec3 n_in83p1 = vec3(2.00000, -0.21000, 2.00000);
	vec3 n_out83p0 = min(n_out60p0, n_in83p1);

// VectorOp:84
	vec3 n_in84p1 = vec3(-10.00000, -2.50000, -10.00000);
	vec3 n_out84p0 = max(n_out83p0, n_in84p1);

// Input:74
	vec3 n_out74p0 = vec3(UV, 0.0);

// VectorOp:71
	vec3 n_in71p1 = vec3(0.25000, 0.75000, 0.00000);
	vec3 n_out71p0 = n_out74p0 - n_in71p1;

// VectorLen:72
	float n_out72p0 = length(n_out71p0);

// ScalarOp:73
	float n_in73p1 = 3.50000;
	float n_out73p0 = n_out72p0 * n_in73p1;

// Texture:75
	vec4 tex_vtx_75_read = texture(tex_vtx_75, vec3(n_out73p0).xy);
	vec3 n_out75p0 = tex_vtx_75_read.rgb;
	float n_out75p1 = tex_vtx_75_read.a;

// Texture:25
	vec4 tex_vtx_25_read = texture(tex_vtx_25, vec3(n_out24p1).xy);
	vec3 n_out25p0 = tex_vtx_25_read.rgb;
	float n_out25p1 = tex_vtx_25_read.a;

// VectorMix:79
	vec3 n_out79p0 = mix(n_out75p0, n_out25p0, n_out75p0);

// VectorMix:21
	vec3 n_out21p0 = mix(n_out4p0, n_out84p0, n_out79p0);

// Input:86
	vec3 n_out86p0 = VERTEX;

// ScalarUniform:87
	float n_out87p0 = morph;

// VectorMix:85
	vec3 n_out85p0 = mix(n_out21p0, n_out86p0, vec3(n_out87p0));

// Output:0
	VERTEX = n_out85p0;

}

void fragment() {
// Input:20
	vec3 n_out20p0 = vec3(UV, 0.0);

// VectorOp:32
	vec3 n_in32p1 = vec3(1.00000, 30.00000, 0.00000);
	vec3 n_out32p0 = n_out20p0 * n_in32p1;

// VectorOp:21
	vec3 n_in21p1 = vec3(0.50000, 0.00000, 0.00000);
	vec3 n_out21p0 = n_out32p0 - n_in21p1;

// VectorFunc:22
	vec3 n_out22p0 = normalize(n_out21p0);

// VectorLen:23
	float n_out23p0 = length(n_out21p0);

// ScalarOp:24
	float n_in24p1 = 2.00000;
	float n_out24p0 = n_out23p0 * n_in24p1;

// ScalarOp:25
	float n_in25p1 = 1.50000;
	float n_out25p0 = pow(n_out24p0, n_in25p1);

// ScalarOp:26
	float n_in26p1 = 1.00000;
	float n_out26p0 = n_out25p0 * n_in26p1;

// VectorOp:27
	vec3 n_out27p0 = n_out22p0 * vec3(n_out26p0);

// VectorOp:28
	vec3 n_in28p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out28p0 = n_out27p0 + n_in28p1;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out28p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Texture:40
	vec4 tex_frg_40_read = texture(tex_frg_40, UV.xy);
	vec3 n_out40p0 = tex_frg_40_read.rgb;
	float n_out40p1 = tex_frg_40_read.a;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:33
	vec3 n_in33p1 = vec3(0.25000, 0.75000, 0.00000);
	vec3 n_out33p0 = n_out3p0 - n_in33p1;

// VectorLen:34
	float n_out34p0 = length(n_out33p0);

// ScalarOp:37
	float n_in37p1 = 4.00000;
	float n_out37p0 = n_out34p0 * n_in37p1;

// Texture:35
	vec4 tex_frg_35_read = texture(tex_frg_35, vec3(n_out37p0).xy);
	vec3 n_out35p0 = tex_frg_35_read.rgb;
	float n_out35p1 = tex_frg_35_read.a;

// VectorDecompose:38
	float n_out38p0 = n_out35p0.x;
	float n_out38p1 = n_out35p0.y;
	float n_out38p2 = n_out35p0.z;

// ScalarMix:41
	float n_out41p0 = mix(dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out40p0, vec3(0.333333, 0.333333, 0.333333)), n_out38p0);

// ScalarOp:49
	float n_in49p1 = 3.00000;
	float n_out49p0 = pow(n_out41p0, n_in49p1);

// ScalarOp:50
	float n_in50p1 = 5.00000;
	float n_out50p0 = n_out49p0 * n_in50p1;

// Input:51
	vec3 n_out51p0 = vec3(UV, 0.0);

// VectorDecompose:52
	float n_out52p0 = n_out51p0.x;
	float n_out52p1 = n_out51p0.y;
	float n_out52p2 = n_out51p0.z;

// VectorOp:53
	vec3 n_in53p1 = vec3(8.00000, 1.00000, 0.00000);
	vec3 n_out53p0 = vec3(n_out52p0) * n_in53p1;

// VectorOp:55
	vec3 n_in55p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out55p0 = mod(n_out53p0, n_in55p1);

// Texture:57
	vec4 tex_frg_57_read = texture(tex_frg_57, n_out55p0.xy);
	vec3 n_out57p0 = tex_frg_57_read.rgb;
	float n_out57p1 = tex_frg_57_read.a;

// Texture:54
	vec4 tex_frg_54_read = texture(tex_frg_54, n_out57p0.xy);
	vec3 n_out54p0 = tex_frg_54_read.rgb;
	float n_out54p1 = tex_frg_54_read.a;

// Texture:48
	vec4 tex_frg_48_read = texture(tex_frg_48, UV.xy);
	vec3 n_out48p0 = tex_frg_48_read.rgb;
	float n_out48p1 = tex_frg_48_read.a;

// VectorOp:56
	vec3 n_out56p0 = n_out54p0 * n_out48p0;

// Input:60
	vec3 n_out60p0 = vec3(UV, 0.0);

// VectorOp:61
	vec3 n_in61p1 = vec3(10.00000, 25.00000, 0.00000);
	vec3 n_out61p0 = n_out60p0 * n_in61p1;

// VectorOp:62
	vec3 n_in62p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out62p0 = mod(n_out61p0, n_in62p1);

// VectorDecompose:63
	float n_out63p0 = n_out62p0.x;
	float n_out63p1 = n_out62p0.y;
	float n_out63p2 = n_out62p0.z;

// Texture:64
	vec4 tex_frg_64_read = texture(tex_frg_64, vec3(n_out63p1).xy);
	vec3 n_out64p0 = tex_frg_64_read.rgb;
	float n_out64p1 = tex_frg_64_read.a;

// VectorOp:65
	vec3 n_out65p0 = n_out60p0 + n_out64p0;

// Texture:58
	vec4 tex_frg_58_read = texture(tex_frg_58, n_out65p0.xy);
	vec3 n_out58p0 = tex_frg_58_read.rgb;
	float n_out58p1 = tex_frg_58_read.a;

// VectorOp:59
	vec3 n_out59p0 = n_out56p0 * n_out58p0;

// Input:44
	vec3 n_out44p0 = vec3(UV, 0.0);

// VectorDecompose:45
	float n_out45p0 = n_out44p0.x;
	float n_out45p1 = n_out44p0.y;
	float n_out45p2 = n_out44p0.z;

// Texture:46
	vec4 tex_frg_46_read = texture(tex_frg_46, vec3(n_out45p1).xy);
	vec3 n_out46p0 = tex_frg_46_read.rgb;
	float n_out46p1 = tex_frg_46_read.a;

// VectorMix:47
	vec3 n_out47p0 = mix(vec3(n_out50p0), n_out59p0, n_out46p0);

// ScalarUniform:73
	float n_out73p0 = col;

// VectorMix:72
	vec3 n_in72p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out72p0 = mix(n_out47p0, n_in72p1, vec3(n_out73p0));

// Input:17
	vec3 n_out17p0 = vec3(UV, 0.0);

// VectorDecompose:18
	float n_out18p0 = n_out17p0.x;
	float n_out18p1 = n_out17p0.y;
	float n_out18p2 = n_out17p0.z;

// Texture:19
	vec4 tex_frg_19_read = texture(tex_frg_19, vec3(n_out18p1).xy);
	vec3 n_out19p0 = tex_frg_19_read.rgb;
	float n_out19p1 = tex_frg_19_read.a;

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, vec3(n_out4p1).xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarFunc:6
	float n_out6p0 = round(dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)));

// ScalarOp:36
	float n_out36p0 = max(n_out38p0, n_out6p0);

// ScalarClamp:39
	float n_in39p1 = 0.00000;
	float n_in39p2 = 1.00000;
	float n_out39p0 = clamp(n_out36p0, n_in39p1, n_in39p2);

// ScalarOp:42
	float n_out42p0 = dot(n_out19p0, vec3(0.333333, 0.333333, 0.333333)) * n_out39p0;

// ScalarOp:43
	float n_out43p0 = max(n_out42p0, n_out38p0);

// ScalarMix:74
	float n_in74p1 = 1.00000;
	float n_out74p0 = mix(n_out43p0, n_in74p1, n_out73p0);

// Output:0
	ALBEDO = n_out72p0;
	ALPHA = n_out74p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 76.6632, 58.4648 )
modes/cull = 2
modes/depth_draw = 3
flags/unshaded = true
nodes/vertex/0/position = Vector2( 3280, 280 )
nodes/vertex/2/node = SubResource( 97 )
nodes/vertex/2/position = Vector2( -1240, 140 )
nodes/vertex/3/node = SubResource( 107 )
nodes/vertex/3/position = Vector2( -40, 160 )
nodes/vertex/4/node = SubResource( 111 )
nodes/vertex/4/position = Vector2( 860, 160 )
nodes/vertex/8/node = SubResource( 151 )
nodes/vertex/8/position = Vector2( 340, -120 )
nodes/vertex/9/node = SubResource( 162 )
nodes/vertex/9/position = Vector2( 140, -20 )
nodes/vertex/11/node = SubResource( 88 )
nodes/vertex/11/position = Vector2( 340, 40 )
nodes/vertex/12/node = SubResource( 89 )
nodes/vertex/12/position = Vector2( 140, 60 )
nodes/vertex/13/node = SubResource( 90 )
nodes/vertex/13/position = Vector2( 586.843, 7.88913 )
nodes/vertex/14/node = SubResource( 91 )
nodes/vertex/14/position = Vector2( -210.068, 25.063 )
nodes/vertex/15/node = SubResource( 92 )
nodes/vertex/15/position = Vector2( 220, 280 )
nodes/vertex/16/node = SubResource( 93 )
nodes/vertex/16/position = Vector2( -140, 320 )
nodes/vertex/17/node = SubResource( 94 )
nodes/vertex/17/position = Vector2( 240, 440 )
nodes/vertex/18/node = SubResource( 95 )
nodes/vertex/18/position = Vector2( -120, 460 )
nodes/vertex/19/node = SubResource( 96 )
nodes/vertex/19/position = Vector2( 540, 280 )
nodes/vertex/20/node = SubResource( 98 )
nodes/vertex/20/position = Vector2( -520, 440 )
nodes/vertex/21/node = SubResource( 99 )
nodes/vertex/21/position = Vector2( 2700, 340 )
nodes/vertex/22/node = SubResource( 100 )
nodes/vertex/22/position = Vector2( 820, 280 )
nodes/vertex/23/node = SubResource( 101 )
nodes/vertex/23/position = Vector2( 920, 720 )
nodes/vertex/24/node = SubResource( 102 )
nodes/vertex/24/position = Vector2( 1040, 700 )
nodes/vertex/25/node = SubResource( 105 )
nodes/vertex/25/position = Vector2( 1640, 620 )
nodes/vertex/26/node = SubResource( 106 )
nodes/vertex/26/position = Vector2( -260, 140 )
nodes/vertex/31/node = SubResource( 108 )
nodes/vertex/31/position = Vector2( 1060, 280 )
nodes/vertex/32/node = SubResource( 109 )
nodes/vertex/32/position = Vector2( -400, 360 )
nodes/vertex/33/node = SubResource( 110 )
nodes/vertex/33/position = Vector2( -460, 280 )
nodes/vertex/43/node = SubResource( 114 )
nodes/vertex/43/position = Vector2( 880, 420 )
nodes/vertex/44/node = SubResource( 115 )
nodes/vertex/44/position = Vector2( 420, 520 )
nodes/vertex/45/node = SubResource( 116 )
nodes/vertex/45/position = Vector2( 560, 480 )
nodes/vertex/46/node = SubResource( 117 )
nodes/vertex/46/position = Vector2( 720, 480 )
nodes/vertex/47/node = SubResource( 118 )
nodes/vertex/47/position = Vector2( 1040, 480 )
nodes/vertex/48/node = SubResource( 119 )
nodes/vertex/48/position = Vector2( 1200, 440 )
nodes/vertex/49/node = SubResource( 120 )
nodes/vertex/49/position = Vector2( 1400, 440 )
nodes/vertex/50/node = SubResource( 121 )
nodes/vertex/50/position = Vector2( 1240, 560 )
nodes/vertex/51/node = SubResource( 122 )
nodes/vertex/51/position = Vector2( 1840, 400 )
nodes/vertex/52/node = SubResource( 123 )
nodes/vertex/52/position = Vector2( -1860, -80 )
nodes/vertex/53/node = SubResource( 124 )
nodes/vertex/53/position = Vector2( -2320, 20 )
nodes/vertex/54/node = SubResource( 125 )
nodes/vertex/54/position = Vector2( -2180, -20 )
nodes/vertex/55/node = SubResource( 126 )
nodes/vertex/55/position = Vector2( -2020, -20 )
nodes/vertex/56/node = SubResource( 127 )
nodes/vertex/56/position = Vector2( -1700, -20 )
nodes/vertex/57/node = SubResource( 128 )
nodes/vertex/57/position = Vector2( -1540, -60 )
nodes/vertex/58/node = SubResource( 129 )
nodes/vertex/58/position = Vector2( -1540, 80 )
nodes/vertex/59/node = SubResource( 130 )
nodes/vertex/59/position = Vector2( -1340, -20 )
nodes/vertex/60/node = SubResource( 131 )
nodes/vertex/60/position = Vector2( 2020, 380 )
nodes/vertex/61/node = SubResource( 132 )
nodes/vertex/61/position = Vector2( -880, 60 )
nodes/vertex/62/node = SubResource( 133 )
nodes/vertex/62/position = Vector2( -700, 60 )
nodes/vertex/63/node = SubResource( 134 )
nodes/vertex/63/position = Vector2( -2100, -200 )
nodes/vertex/64/node = SubResource( 135 )
nodes/vertex/64/position = Vector2( -1960, -220 )
nodes/vertex/65/node = SubResource( 138 )
nodes/vertex/65/position = Vector2( -1740, -260 )
nodes/vertex/66/node = SubResource( 139 )
nodes/vertex/66/position = Vector2( -1540, -180 )
nodes/vertex/69/node = SubResource( 140 )
nodes/vertex/69/position = Vector2( -1120, -80 )
nodes/vertex/70/node = SubResource( 141 )
nodes/vertex/70/position = Vector2( -440, 140 )
nodes/vertex/71/node = SubResource( 142 )
nodes/vertex/71/position = Vector2( 500, 880 )
nodes/vertex/72/node = SubResource( 143 )
nodes/vertex/72/position = Vector2( 660, 880 )
nodes/vertex/73/node = SubResource( 144 )
nodes/vertex/73/position = Vector2( 820, 840 )
nodes/vertex/74/node = SubResource( 145 )
nodes/vertex/74/position = Vector2( 280, 1000 )
nodes/vertex/75/node = SubResource( 148 )
nodes/vertex/75/position = Vector2( 1060, 900 )
nodes/vertex/78/node = SubResource( 149 )
nodes/vertex/78/position = Vector2( 1560, 960 )
nodes/vertex/79/node = SubResource( 150 )
nodes/vertex/79/position = Vector2( 1880, 660 )
nodes/vertex/80/node = SubResource( 154 )
nodes/vertex/80/position = Vector2( 1260, 640 )
nodes/vertex/81/node = SubResource( 155 )
nodes/vertex/81/position = Vector2( 1440, 600 )
nodes/vertex/82/node = SubResource( 156 )
nodes/vertex/82/position = Vector2( 1620, 500 )
nodes/vertex/83/node = SubResource( 157 )
nodes/vertex/83/position = Vector2( 2220, 400 )
nodes/vertex/84/node = SubResource( 158 )
nodes/vertex/84/position = Vector2( 2408.28, 434.08 )
nodes/vertex/85/node = SubResource( 159 )
nodes/vertex/85/position = Vector2( 2956.04, 410.697 )
nodes/vertex/86/node = SubResource( 160 )
nodes/vertex/86/position = Vector2( 2700, 440 )
nodes/vertex/87/node = SubResource( 161 )
nodes/vertex/87/position = Vector2( 2700, 500 )
nodes/vertex/connections = PoolIntArray( 9, 0, 8, 1, 12, 0, 11, 1, 8, 0, 13, 0, 11, 0, 13, 1, 15, 0, 19, 0, 17, 0, 19, 1, 3, 2, 4, 2, 3, 1, 17, 0, 3, 1, 8, 0, 3, 0, 11, 0, 3, 0, 15, 0, 13, 0, 4, 1, 19, 0, 4, 0, 23, 0, 24, 0, 24, 1, 25, 0, 16, 0, 15, 1, 18, 0, 17, 1, 22, 0, 31, 0, 32, 0, 16, 0, 32, 0, 18, 0, 32, 0, 12, 0, 32, 0, 9, 0, 33, 0, 26, 1, 26, 0, 3, 0, 44, 0, 45, 0, 45, 0, 46, 0, 46, 0, 43, 0, 43, 0, 47, 0, 47, 0, 48, 0, 48, 0, 49, 0, 50, 0, 49, 1, 53, 0, 54, 0, 54, 0, 55, 0, 55, 0, 52, 0, 52, 0, 56, 0, 56, 0, 57, 0, 58, 0, 59, 1, 51, 0, 60, 0, 63, 0, 64, 0, 64, 1, 65, 0, 65, 0, 66, 0, 57, 0, 59, 0, 59, 0, 69, 1, 69, 0, 61, 0, 61, 0, 62, 0, 66, 0, 69, 0, 2, 0, 61, 1, 70, 0, 26, 0, 4, 0, 21, 0, 74, 0, 71, 0, 71, 0, 72, 0, 72, 0, 73, 0, 73, 0, 75, 0, 62, 0, 70, 0, 75, 0, 79, 2, 79, 0, 21, 2, 75, 0, 79, 0, 25, 0, 79, 1, 31, 0, 51, 0, 24, 1, 80, 0, 80, 0, 81, 0, 49, 0, 82, 0, 82, 0, 51, 1, 81, 0, 82, 1, 60, 0, 83, 0, 83, 0, 84, 0, 84, 0, 21, 1, 21, 0, 85, 0, 86, 0, 85, 1, 85, 0, 0, 0, 87, 0, 85, 2 )
nodes/fragment/0/position = Vector2( 4680, 440 )
nodes/fragment/2/node = SubResource( 12 )
nodes/fragment/2/position = Vector2( 1860, 260 )
nodes/fragment/3/node = SubResource( 22 )
nodes/fragment/3/position = Vector2( 1240, 740 )
nodes/fragment/4/node = SubResource( 34 )
nodes/fragment/4/position = Vector2( 1500, 760 )
nodes/fragment/5/node = SubResource( 53 )
nodes/fragment/5/position = Vector2( 1700, 720 )
nodes/fragment/6/node = SubResource( 70 )
nodes/fragment/6/position = Vector2( 1900, 720 )
nodes/fragment/17/node = SubResource( 5 )
nodes/fragment/17/position = Vector2( 1240, 20 )
nodes/fragment/18/node = SubResource( 6 )
nodes/fragment/18/position = Vector2( 1360, 80 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 2720, 280 )
nodes/fragment/20/node = SubResource( 13 )
nodes/fragment/20/position = Vector2( 120, 120 )
nodes/fragment/21/node = SubResource( 14 )
nodes/fragment/21/position = Vector2( 480, 120 )
nodes/fragment/22/node = SubResource( 15 )
nodes/fragment/22/position = Vector2( 700, 160 )
nodes/fragment/23/node = SubResource( 16 )
nodes/fragment/23/position = Vector2( 660, 260 )
nodes/fragment/24/node = SubResource( 17 )
nodes/fragment/24/position = Vector2( 820, 260 )
nodes/fragment/25/node = SubResource( 18 )
nodes/fragment/25/position = Vector2( 1000, 240 )
nodes/fragment/26/node = SubResource( 19 )
nodes/fragment/26/position = Vector2( 1180, 260 )
nodes/fragment/27/node = SubResource( 20 )
nodes/fragment/27/position = Vector2( 1400, 280 )
nodes/fragment/28/node = SubResource( 21 )
nodes/fragment/28/position = Vector2( 1640, 280 )
nodes/fragment/31/node = SubResource( 23 )
nodes/fragment/31/position = Vector2( 1900, 0 )
nodes/fragment/32/node = SubResource( 24 )
nodes/fragment/32/position = Vector2( 280, 120 )
nodes/fragment/33/node = SubResource( 25 )
nodes/fragment/33/position = Vector2( 1460, 600 )
nodes/fragment/34/node = SubResource( 26 )
nodes/fragment/34/position = Vector2( 1600, 600 )
nodes/fragment/35/node = SubResource( 29 )
nodes/fragment/35/position = Vector2( 1940, 520 )
nodes/fragment/36/node = SubResource( 30 )
nodes/fragment/36/position = Vector2( 2560, 620 )
nodes/fragment/37/node = SubResource( 31 )
nodes/fragment/37/position = Vector2( 1780, 560 )
nodes/fragment/38/node = SubResource( 32 )
nodes/fragment/38/position = Vector2( 2140, 580 )
nodes/fragment/39/node = SubResource( 33 )
nodes/fragment/39/position = Vector2( 2780, 580 )
nodes/fragment/40/node = SubResource( 37 )
nodes/fragment/40/position = Vector2( 2340, 240 )
nodes/fragment/41/node = SubResource( 38 )
nodes/fragment/41/position = Vector2( 2660, 460 )
nodes/fragment/42/node = SubResource( 39 )
nodes/fragment/42/position = Vector2( 2960, 500 )
nodes/fragment/43/node = SubResource( 40 )
nodes/fragment/43/position = Vector2( 3180, 520 )
nodes/fragment/44/node = SubResource( 41 )
nodes/fragment/44/position = Vector2( 2920, 380 )
nodes/fragment/45/node = SubResource( 42 )
nodes/fragment/45/position = Vector2( 3080, 400 )
nodes/fragment/46/node = SubResource( 45 )
nodes/fragment/46/position = Vector2( 3300, 340 )
nodes/fragment/47/node = SubResource( 46 )
nodes/fragment/47/position = Vector2( 4100, 460 )
nodes/fragment/48/node = SubResource( 49 )
nodes/fragment/48/position = Vector2( 3180, 880 )
nodes/fragment/49/node = SubResource( 50 )
nodes/fragment/49/position = Vector2( 3480, 440 )
nodes/fragment/50/node = SubResource( 54 )
nodes/fragment/50/position = Vector2( 3640, 340 )
nodes/fragment/51/node = SubResource( 55 )
nodes/fragment/51/position = Vector2( 2760, 780 )
nodes/fragment/52/node = SubResource( 56 )
nodes/fragment/52/position = Vector2( 2940, 800 )
nodes/fragment/53/node = SubResource( 57 )
nodes/fragment/53/position = Vector2( 3140, 760 )
nodes/fragment/54/node = SubResource( 60 )
nodes/fragment/54/position = Vector2( 3460, 560 )
nodes/fragment/55/node = SubResource( 61 )
nodes/fragment/55/position = Vector2( 3300, 760 )
nodes/fragment/56/node = SubResource( 62 )
nodes/fragment/56/position = Vector2( 3660, 620 )
nodes/fragment/57/node = SubResource( 65 )
nodes/fragment/57/position = Vector2( 3520, 740 )
nodes/fragment/58/node = SubResource( 68 )
nodes/fragment/58/position = Vector2( 3760, 780 )
nodes/fragment/59/node = SubResource( 69 )
nodes/fragment/59/position = Vector2( 3877.89, 638.384 )
nodes/fragment/60/node = SubResource( 71 )
nodes/fragment/60/position = Vector2( 3220, 1080 )
nodes/fragment/61/node = SubResource( 72 )
nodes/fragment/61/position = Vector2( 3360, 1080 )
nodes/fragment/62/node = SubResource( 73 )
nodes/fragment/62/position = Vector2( 3520, 1080 )
nodes/fragment/63/node = SubResource( 74 )
nodes/fragment/63/position = Vector2( 3680, 1120 )
nodes/fragment/64/node = SubResource( 77 )
nodes/fragment/64/position = Vector2( 3920, 1040 )
nodes/fragment/65/node = SubResource( 78 )
nodes/fragment/65/position = Vector2( 3580, 980 )
nodes/fragment/66/node = SubResource( 79 )
nodes/fragment/66/position = Vector2( 1400, 880 )
nodes/fragment/67/node = SubResource( 80 )
nodes/fragment/67/position = Vector2( 1580, 960 )
nodes/fragment/68/node = SubResource( 81 )
nodes/fragment/68/position = Vector2( 1920, 880 )
nodes/fragment/69/node = SubResource( 82 )
nodes/fragment/69/position = Vector2( 1760, 920 )
nodes/fragment/70/node = SubResource( 83 )
nodes/fragment/70/position = Vector2( 2120, 880 )
nodes/fragment/71/node = SubResource( 84 )
nodes/fragment/71/position = Vector2( 2380, 720 )
nodes/fragment/72/node = SubResource( 85 )
nodes/fragment/72/position = Vector2( 4300, 420 )
nodes/fragment/73/node = SubResource( 86 )
nodes/fragment/73/position = Vector2( 4264.25, 514.653 )
nodes/fragment/74/node = SubResource( 87 )
nodes/fragment/74/position = Vector2( 4480, 500 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 1, 5, 0, 5, 0, 6, 0, 17, 0, 18, 0, 18, 1, 19, 0, 21, 0, 22, 0, 21, 0, 23, 0, 23, 0, 24, 0, 24, 0, 25, 0, 25, 0, 26, 0, 22, 0, 27, 0, 26, 0, 27, 1, 27, 0, 28, 0, 28, 0, 31, 0, 28, 0, 2, 0, 20, 0, 32, 0, 32, 0, 21, 0, 3, 0, 33, 0, 33, 0, 34, 0, 34, 0, 37, 0, 37, 0, 35, 0, 35, 0, 38, 0, 36, 0, 39, 0, 2, 0, 41, 0, 40, 0, 41, 1, 19, 0, 42, 0, 39, 0, 42, 1, 42, 0, 43, 0, 44, 0, 45, 0, 45, 1, 46, 0, 46, 0, 47, 2, 41, 0, 49, 0, 49, 0, 50, 0, 50, 0, 47, 0, 51, 0, 52, 0, 52, 0, 53, 0, 53, 0, 55, 0, 54, 0, 56, 0, 55, 0, 57, 0, 57, 0, 54, 0, 48, 0, 56, 1, 56, 0, 59, 0, 58, 0, 59, 1, 59, 0, 47, 1, 60, 0, 61, 0, 61, 0, 62, 0, 62, 0, 63, 0, 60, 0, 65, 0, 63, 1, 64, 0, 65, 0, 58, 0, 64, 0, 65, 1, 66, 0, 67, 0, 67, 0, 69, 0, 69, 0, 68, 0, 68, 0, 70, 0, 3, 0, 66, 0, 38, 0, 71, 0, 70, 0, 71, 1, 6, 0, 36, 1, 38, 0, 36, 0, 38, 0, 41, 2, 38, 0, 43, 1, 47, 0, 72, 0, 72, 0, 0, 0, 73, 0, 72, 2, 43, 0, 74, 0, 73, 0, 74, 2, 74, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=164]
shader = SubResource( 163 )
shader_param/pos = Vector3( -0.884, -0.91, 0 )
shader_param/rot = 1.568
shader_param/morph = 0.0
shader_param/col = 0.0

[node name="Spatial" type="Spatial"]
script = ExtResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
playback_speed = 4.0
"anims/New Anim" = SubResource( 1 )
"anims/New Anim (2)" = SubResource( 2 )
"anims/New Anim (copy)" = SubResource( 3 )

[node name="Bread" type="MeshInstance" parent="."]
transform = Transform( -1.62921e-07, 1, 0, -1, -1.62921e-07, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 4 )
material/0 = SubResource( 164 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.490098, -0.221869, 0.842958, -2.18848e-08, 0.967064, 0.254534, -0.871668, -0.124747, 0.473956, 3.97513, 1.03173, 2.65073 )
