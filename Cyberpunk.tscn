[gd_scene load_steps=143 format=2]

[ext_resource path="res://addons/shaderV/rgba/noise/worley2d.gd" type="Script" id=1]
[ext_resource path="res://addons/shaderV/tools/sinTime.gd" type="Script" id=2]
[ext_resource path="res://60fps image sequence export.gd" type="Script" id=3]

[sub_resource type="ProceduralSky" id=1]

[sub_resource type="Environment" id=2]
background_mode = 3
background_sky = SubResource( 1 )
glow_enabled = true
glow_blend_mode = 0
glow_bicubic_upscale = true

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0, 0.118919 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = SubResource( 6 )

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 1.4 ]
operator = 5

[sub_resource type="VisualShaderNodeCustom" id=12]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=14]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 10, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
function = 31

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=20]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=21]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=22]

[sub_resource type="Gradient" id=23]
offsets = PoolRealArray( 0, 0.0810811, 0.0864865, 0.162162, 0.178378 )
colors = PoolColorArray( 1, 0, 0, 1, 0.183594, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0.882813, 0.882813, 0.882813, 1 )

[sub_resource type="GradientTexture" id=24]
gradient = SubResource( 23 )

[sub_resource type="VisualShaderNodeTexture" id=25]
texture = SubResource( 24 )

[sub_resource type="VisualShaderNodeVectorOp" id=26]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=27]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3, 2, 0 ) ]
operator = 2

[sub_resource type="Curve" id=28]
min_value = -2.0
_data = [ Vector2( 0, -0.472727 ), 0.0, 0.0, 0, 0, Vector2( 0.0961538, -0.8 ), -7.34118, 31.2, 0, 1, Vector2( 0.153846, 1 ), 31.2, 0.0, 1, 0 ]

[sub_resource type="CurveTexture" id=29]
curve = SubResource( 28 )

[sub_resource type="VisualShaderNodeTexture" id=30]
texture = SubResource( 29 )

[sub_resource type="Gradient" id=31]
offsets = PoolRealArray( 0, 0.140541 )
colors = PoolColorArray( 1, 0.222656, 0.222656, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=32]
gradient = SubResource( 31 )

[sub_resource type="VisualShaderNodeTexture" id=33]
texture = SubResource( 32 )

[sub_resource type="Gradient" id=34]
colors = PoolColorArray( 0, 0, 0, 1, 0.136719, 0.136719, 0.136719, 1 )

[sub_resource type="GradientTexture" id=35]
gradient = SubResource( 34 )

[sub_resource type="VisualShaderNodeTexture" id=36]
texture = SubResource( 35 )

[sub_resource type="VisualShaderNodeVectorOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=38]

[sub_resource type="OpenSimplexNoise" id=39]
period = 19.0
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=40]
noise = SubResource( 39 )

[sub_resource type="VisualShaderNodeTexture" id=41]
texture = SubResource( 40 )

[sub_resource type="Gradient" id=42]
colors = PoolColorArray( 0, 0, 0, 1, 0.566406, 0.566406, 0.566406, 1 )

[sub_resource type="GradientTexture" id=43]
gradient = SubResource( 42 )

[sub_resource type="VisualShaderNodeTexture" id=44]
texture = SubResource( 43 )

[sub_resource type="VisualShaderNodeColorConstant" id=45]
constant = Color( 0.105894, 0.105894, 0.105894, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=46]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 5, 5, 5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeCustom" id=47]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorFunc" id=48]
function = 20

[sub_resource type="VisualShaderNodeInput" id=49]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=50]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 5, 5, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=51]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="VisualShaderNodeFresnel" id=52]
default_input_values = [ 2, false, 3, 7.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=53]

[sub_resource type="Gradient" id=54]
colors = PoolColorArray( 0, 0, 0, 1, 0.136719, 0, 0.131378, 1 )

[sub_resource type="GradientTexture" id=55]
gradient = SubResource( 54 )

[sub_resource type="VisualShaderNodeTexture" id=56]
texture = SubResource( 55 )

[sub_resource type="Gradient" id=57]
offsets = PoolRealArray( 0.0864865, 0.102703, 0.124324, 0.189189, 0.227027, 0.237838 )
colors = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=58]
gradient = SubResource( 57 )

[sub_resource type="VisualShaderNodeTexture" id=59]
texture = SubResource( 58 )

[sub_resource type="VisualShaderNodeInput" id=60]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=61]

[sub_resource type="VisualShaderNodeVectorDecompose" id=62]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=63]
operator = 7

[sub_resource type="Gradient" id=64]
offsets = PoolRealArray( 0.686486, 0.702703, 0.713513, 0.789189, 0.805405, 0.810811 )
colors = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=65]
gradient = SubResource( 64 )

[sub_resource type="VisualShaderNodeTexture" id=66]
texture = SubResource( 65 )

[sub_resource type="VisualShaderNodeVectorOp" id=67]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.333333, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=68]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeTexture" id=69]
texture = SubResource( 58 )

[sub_resource type="VisualShaderNodeScalarOp" id=70]
operator = 7

[sub_resource type="VisualShaderNodeTexture" id=71]
output_port_for_preview = 0
texture = SubResource( 65 )

[sub_resource type="VisualShaderNodeScalarOp" id=72]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=73]

[sub_resource type="VisualShaderNodeScalarOp" id=74]
operator = 7

[sub_resource type="VisualShaderNodeVectorOp" id=75]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=76]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=77]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=78]

[sub_resource type="VisualShaderNodeVectorInterp" id=79]

[sub_resource type="Gradient" id=80]
offsets = PoolRealArray( 0, 0.00540541, 1 )
colors = PoolColorArray( 0.09375, 0.09375, 0.09375, 1, 0.0898438, 0.0898438, 0.0898438, 1, 0.120103, 0.0894012, 0.121094, 1 )

[sub_resource type="GradientTexture" id=81]
gradient = SubResource( 80 )

[sub_resource type="VisualShaderNodeTexture" id=82]
texture = SubResource( 81 )

[sub_resource type="VisualShaderNodeVectorFunc" id=83]
function = 34

[sub_resource type="VisualShaderNodeVectorDecompose" id=84]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=85]
operator = 7

[sub_resource type="VisualShaderNodeVectorDecompose" id=86]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=87]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=88]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=89]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=90]
texture = SubResource( 6 )

[sub_resource type="VisualShaderNodeScalarFunc" id=91]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=92]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarFunc" id=93]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=94]
default_input_values = [ 0, 0.0, 1, 1.4 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=95]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=96]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=97]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=98]

[sub_resource type="VisualShaderNodeInput" id=99]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=100]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=101]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=102]

[sub_resource type="VisualShaderNodeTexture" id=103]
texture = SubResource( 29 )

[sub_resource type="VisualShaderNodeVectorFunc" id=104]

[sub_resource type="VisualShaderNodeVectorOp" id=105]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=106]

[sub_resource type="VisualShaderNodeVectorDecompose" id=107]

[sub_resource type="VisualShaderNodeScalarOp" id=108]
operator = 7

[sub_resource type="VisualShaderNodeTexture" id=109]
texture = SubResource( 65 )

[sub_resource type="VisualShaderNodeTexture" id=110]
texture = SubResource( 58 )

[sub_resource type="VisualShaderNodeInput" id=111]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=112]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.15, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=113]

[sub_resource type="VisualShaderNodeTexture" id=114]
texture = SubResource( 58 )

[sub_resource type="VisualShaderNodeInput" id=115]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=116]
texture = SubResource( 65 )

[sub_resource type="VisualShaderNodeScalarOp" id=117]
operator = 7

[sub_resource type="VisualShaderNodeVectorOp" id=118]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.15, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=119]

[sub_resource type="VisualShaderNodeVectorOp" id=120]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.333333, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=121]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeVectorOp" id=122]

[sub_resource type="VisualShaderNodeCustom" id=123]
default_input_values = [ 0, 1.0 ]
script = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=124]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=125]

[sub_resource type="VisualShaderNodeVectorOp" id=126]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=127]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=128]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeVectorInterp" id=129]

[sub_resource type="VisualShaderNodeInput" id=130]
input_name = "normal"

[sub_resource type="VisualShaderNodeScalarUniform" id=131]
uniform_name = "morph2"

[sub_resource type="VisualShaderNodeVectorFunc" id=134]
function = 20

[sub_resource type="VisualShaderNodeVectorDecompose" id=135]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=136]
operator = 7

[sub_resource type="VisualShaderNodeVectorFunc" id=137]
function = 34

[sub_resource type="VisualShader" id=138]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_vtx_40;
uniform sampler2D tex_vtx_39;
uniform sampler2D tex_vtx_34;
uniform sampler2D tex_vtx_35;
uniform sampler2D tex_vtx_27;
uniform sampler2D tex_vtx_14;
uniform float morph;
uniform float morph2;
uniform sampler2D tex_frg_45;
uniform sampler2D tex_frg_28;
uniform sampler2D tex_frg_12;
uniform sampler2D tex_frg_32;
uniform sampler2D tex_frg_56;
uniform sampler2D tex_frg_54;
uniform sampler2D tex_frg_51;
uniform sampler2D tex_frg_46;
uniform sampler2D tex_frg_68;
uniform sampler2D tex_frg_31;


// Worley2D

vec2 cellular2dNoiseFunc(vec2 P, float _jitter_w2d) {
	float K = 0.142857142857; // 1/7
	float Ko = 0.428571428571; // 3/7
	
	vec2 Pi = floor(P) - floor(floor(P) * (1.0 / 289.0)) * 289.0;
	vec2 Pf = fract(P);
	vec3 oi = vec3(-1.0, 0.0, 1.0);
	vec3 of = vec3(-0.5, 0.5, 1.5);
	vec3 px = (34.0*(Pi.x+oi)+1.0)*(Pi.x+oi)-floor((34.0*(Pi.x+oi)+1.0)*(Pi.x+oi)*(1.0/289.0))* 289.0;
	vec3 p = (34.0*(px.x+Pi.y+ oi)+1.0)*(px.x+Pi.y+ oi)-floor((34.0*(px.x+Pi.y+oi)+1.0)*(px.x+Pi.y+ oi)*(1.0/289.0))*289.0;
	vec3 ox = fract(p*K) - Ko;
	vec3 oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	vec3 dx = Pf.x + 0.5 + _jitter_w2d*ox;
	vec3 dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d1 = dx * dx + dy * dy;
	p = (34.0*(px.y+Pi.y+oi)+1.0)*(px.y+Pi.y+oi)-floor((34.0*(px.y+Pi.y+oi)+1.0)*(px.y+Pi.y+oi)*(1.0/289.0))*289.0;
	ox = fract(p*K) - Ko;
	oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	dx = Pf.x - 0.5 + _jitter_w2d*ox;
	dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d2 = dx * dx + dy * dy;
	p = (34.0*(px.z+Pi.y+oi)+1.0)*(px.z+Pi.y+oi)-floor((34.0*(px.z+Pi.y+oi)+1.0)*(px.z+Pi.y+oi)*(1.0/289.0))*289.0;
	ox = fract(p*K) - Ko;
	oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	dx = Pf.x - 1.5 + _jitter_w2d*ox;
	dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d3 = dx * dx + dy * dy;
	vec3 d1a = min(d1, d2);
	d2 = max(d1, d2);
	d2 = min(d2, d3);
	d1 = min(d1a, d2);
	d2 = max(d1a, d2);
	d1.xy = (d1.x < d1.y) ? d1.xy : d1.yx;
	d1.xz = (d1.x < d1.z) ? d1.xz : d1.zx;
	d1.yz = min(d1.yz, d2.yz);
	d1.y = min(d1.y, d1.z);
	d1.y = min(d1.y, d2.x);
	return sqrt(d1.xy);
}


void vertex() {
// Input:36
	vec3 n_out36p0 = vec3(UV, 0.0);

// VectorDecompose:32
	float n_out32p0 = n_out36p0.x;
	float n_out32p1 = n_out36p0.y;
	float n_out32p2 = n_out36p0.z;

// ScalarOp:45
	float n_in45p1 = 0.50000;
	float n_out45p0 = n_out32p1 + n_in45p1;

// Texture:40
	vec4 tex_vtx_40_read = texture(tex_vtx_40, vec3(n_out45p0).xy);
	vec3 n_out40p0 = tex_vtx_40_read.rgb;
	float n_out40p1 = tex_vtx_40_read.a;

// VectorOp:44
	vec3 n_in44p1 = vec3(0.33333, 0.00000, 0.00000);
	vec3 n_out44p0 = n_out36p0 - n_in44p1;

// Texture:39
	vec4 tex_vtx_39_read = texture(tex_vtx_39, n_out44p0.xy);
	vec3 n_out39p0 = tex_vtx_39_read.rgb;
	float n_out39p1 = tex_vtx_39_read.a;

// ScalarOp:41
	float n_out41p0 = min(dot(n_out40p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out39p0, vec3(0.333333, 0.333333, 0.333333)));

// VectorOp:42
	vec3 n_in42p1 = vec3(0.15000, 0.00000, 0.00000);
	vec3 n_out42p0 = vec3(n_out41p0) * n_in42p1;

// Texture:34
	vec4 tex_vtx_34_read = texture(tex_vtx_34, vec3(n_out32p1).xy);
	vec3 n_out34p0 = tex_vtx_34_read.rgb;
	float n_out34p1 = tex_vtx_34_read.a;

// Texture:35
	vec4 tex_vtx_35_read = texture(tex_vtx_35, UV.xy);
	vec3 n_out35p0 = tex_vtx_35_read.rgb;
	float n_out35p1 = tex_vtx_35_read.a;

// ScalarOp:33
	float n_out33p0 = min(dot(n_out34p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out35p0, vec3(0.333333, 0.333333, 0.333333)));

// VectorOp:37
	vec3 n_in37p1 = vec3(-0.15000, 0.00000, 0.00000);
	vec3 n_out37p0 = vec3(n_out33p0) * n_in37p1;

// Input:23
	vec3 n_out23p0 = vec3(UV, 0.0);

// VectorOp:24
	vec3 n_in24p1 = vec3(3.00000, 2.00000, 0.00000);
	vec3 n_out24p0 = n_out23p0 * n_in24p1;

// VectorOp:25
	vec3 n_in25p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out25p0 = n_out24p0 - n_in25p1;

// VectorLen:26
	float n_out26p0 = length(n_out25p0);

// Texture:27
	vec4 tex_vtx_27_read = texture(tex_vtx_27, vec3(n_out26p0).xy);
	vec3 n_out27p0 = tex_vtx_27_read.rgb;
	float n_out27p1 = tex_vtx_27_read.a;

// VectorDecompose:31
	float n_out31p0 = n_out27p0.x;
	float n_out31p1 = n_out27p0.y;
	float n_out31p2 = n_out27p0.z;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorOp:5
	vec3 n_in5p1 = vec3(3.00000, 2.00000, 0.00000);
	vec3 n_out5p0 = n_out4p0 * n_in5p1;

// VectorFunc:6
	vec3 n_out6p0 = fract(n_out5p0);

// VectorFunc:9
	vec3 n_out9p0 = vec3(1.0, 1.0, 1.0) - n_out6p0;

// VectorDecompose:10
	float n_out10p0 = n_out9p0.x;
	float n_out10p1 = n_out9p0.y;
	float n_out10p2 = n_out9p0.z;

// ScalarOp:11
	float n_out11p0 = min(n_out10p0, n_out10p1);

// VectorDecompose:7
	float n_out7p0 = n_out6p0.x;
	float n_out7p1 = n_out6p0.y;
	float n_out7p2 = n_out6p0.z;

// ScalarOp:8
	float n_out8p0 = min(n_out7p0, n_out7p1);

// ScalarOp:12
	float n_out12p0 = min(n_out11p0, n_out8p0);

// ScalarOp:13
	float n_in13p1 = 2.00000;
	float n_out13p0 = n_out12p0 * n_in13p1;

// Texture:14
	vec4 tex_vtx_14_read = texture(tex_vtx_14, vec3(n_out13p0).xy);
	vec3 n_out14p0 = tex_vtx_14_read.rgb;
	float n_out14p1 = tex_vtx_14_read.a;

// ScalarFunc:15
	float n_out15p0 = 1.0 - dot(n_out14p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:16
	float n_in16p1 = 3.00000;
	float n_out16p0 = pow(n_out15p0, n_in16p1);

// ScalarFunc:17
	float n_out17p0 = 1.0 - n_out16p0;

// ScalarOp:18
	float n_in18p1 = 1.40000;
	float n_out18p0 = pow(n_out17p0, n_in18p1);

// ScalarOp:19
	float n_in19p1 = 0.10000;
	float n_out19p0 = n_out18p0 * n_in19p1;

// VectorOp:30
	vec3 n_out30p0 = vec3(n_out31p0) * vec3(n_out19p0);

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorFunc:3
	vec3 n_out3p0 = normalize(n_out2p0);

// VectorOp:20
	vec3 n_out20p0 = n_out30p0 * n_out3p0;

// VectorOp:21
	vec3 n_out21p0 = n_out20p0 + n_out3p0;

// VectorOp:38
	vec3 n_out38p0 = n_out37p0 + n_out21p0;

// VectorOp:43
	vec3 n_out43p0 = n_out42p0 + n_out38p0;

// SinTIME:47
	float n_in47p0 = 1.00000;
	float n_out47p0;
	{
		n_out47p0 = sin(n_in47p0 * TIME);
	}

// VectorOp:48
	vec3 n_in48p1 = vec3(0.00000, 0.10000, 0.00000);
	vec3 n_out48p0 = vec3(n_out47p0) * n_in48p1;

// VectorOp:46
	vec3 n_out46p0 = n_out43p0 + n_out48p0;

// Input:50
	vec3 n_out50p0 = VERTEX;

// ScalarUniform:51
	float n_out51p0 = morph;

// VectorMix:49
	vec3 n_out49p0 = mix(n_out46p0, n_out50p0, vec3(n_out51p0));

// Input:53
	vec3 n_out53p0 = NORMAL;

// ScalarUniform:54
	float n_out54p0 = morph2;

// VectorMix:52
	vec3 n_out52p0 = mix(n_out3p0, n_out53p0, vec3(n_out54p0));

// Output:0
	VERTEX = n_out49p0;
	NORMAL = n_out52p0;

}

void fragment() {
// Fresnel:43
	bool n_in43p2 = false;
	float n_in43p3 = 7.00000;
	float n_out43p0 = n_in43p2 ? (pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in43p3)) : (pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in43p3));

// Texture:45
	vec4 tex_frg_45_read = texture(tex_frg_45, vec3(n_out43p0).xy);
	vec3 n_out45p0 = tex_frg_45_read.rgb;
	float n_out45p1 = tex_frg_45_read.a;

// Input:24
	vec3 n_out24p0 = vec3(UV, 0.0);

// VectorOp:25
	vec3 n_in25p1 = vec3(3.00000, 2.00000, 0.00000);
	vec3 n_out25p0 = n_out24p0 * n_in25p1;

// VectorOp:26
	vec3 n_in26p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out26p0 = n_out25p0 - n_in26p1;

// VectorLen:27
	float n_out27p0 = length(n_out26p0);

// Texture:28
	vec4 tex_frg_28_read = texture(tex_frg_28, vec3(n_out27p0).xy);
	vec3 n_out28p0 = tex_frg_28_read.rgb;
	float n_out28p1 = tex_frg_28_read.a;

// Input:18
	vec3 n_out18p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_in19p1 = vec3(10.00000, 10.00000, 0.00000);
	vec3 n_out19p0 = n_out18p0 * n_in19p1;

// Worley2D:17
	vec3 n_in17p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in17p2 = 5.00000;
	float n_in17p3 = 1.00000;
	float n_out17p0;
	float n_out17p1;
	{
		vec2 n_out17p0n_out17p1 = cellular2dNoiseFunc((n_out19p0.xy+n_in17p1.xy)*n_in17p2, min(max(n_in17p3, 0.0), 1.0));
		n_out17p0 = n_out17p0n_out17p1.x;
		n_out17p1 = n_out17p0n_out17p1.y;
	}

// ScalarOp:20
	float n_in20p1 = 3.00000;
	float n_out20p0 = pow(n_out17p0, n_in20p1);

// ScalarOp:21
	float n_in21p1 = 0.10000;
	float n_out21p0 = n_out20p0 * n_in21p1;

// ScalarFunc:22
	float n_out22p0 = 1.0 - n_out21p0;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(3.00000, 2.00000, 0.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// VectorFunc:4
	vec3 n_out4p0 = fract(n_out3p0);

// VectorFunc:7
	vec3 n_out7p0 = vec3(1.0, 1.0, 1.0) - n_out4p0;

// VectorDecompose:8
	float n_out8p0 = n_out7p0.x;
	float n_out8p1 = n_out7p0.y;
	float n_out8p2 = n_out7p0.z;

// ScalarOp:9
	float n_out9p0 = min(n_out8p0, n_out8p1);

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarOp:6
	float n_out6p0 = min(n_out5p0, n_out5p1);

// ScalarOp:10
	float n_out10p0 = min(n_out9p0, n_out6p0);

// ScalarOp:11
	float n_in11p1 = 2.00000;
	float n_out11p0 = n_out10p0 * n_in11p1;

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, vec3(n_out11p0).xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// ScalarFunc:13
	float n_out13p0 = 1.0 - dot(n_out12p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:14
	float n_in14p1 = 3.00000;
	float n_out14p0 = pow(n_out13p0, n_in14p1);

// ScalarFunc:15
	float n_out15p0 = 1.0 - n_out14p0;

// ScalarOp:16
	float n_in16p1 = 1.40000;
	float n_out16p0 = pow(n_out15p0, n_in16p1);

// Texture:32
	vec4 tex_frg_32_read = texture(tex_frg_32, vec3(n_out16p0).xy);
	vec3 n_out32p0 = tex_frg_32_read.rgb;
	float n_out32p1 = tex_frg_32_read.a;

// VectorOp:33
	vec3 n_out33p0 = vec3(n_out22p0) * n_out32p0;

// VectorOp:29
	vec3 n_out29p0 = n_out28p0 * n_out33p0;

// VectorOp:44
	vec3 n_out44p0 = n_out45p0 + n_out29p0;

// Input:47
	vec3 n_out47p0 = vec3(UV, 0.0);

// VectorDecompose:59
	float n_out59p0 = n_out47p0.x;
	float n_out59p1 = n_out47p0.y;
	float n_out59p2 = n_out47p0.z;

// Texture:56
	vec4 tex_frg_56_read = texture(tex_frg_56, vec3(n_out59p1).xy);
	vec3 n_out56p0 = tex_frg_56_read.rgb;
	float n_out56p1 = tex_frg_56_read.a;

// Texture:54
	vec4 tex_frg_54_read = texture(tex_frg_54, n_out47p0.xy);
	vec3 n_out54p0 = tex_frg_54_read.rgb;
	float n_out54p1 = tex_frg_54_read.a;

// ScalarOp:55
	float n_out55p0 = min(dot(n_out56p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out54p0, vec3(0.333333, 0.333333, 0.333333)));

// VectorDecompose:48
	float n_out48p0 = n_out47p0.x;
	float n_out48p1 = n_out47p0.y;
	float n_out48p2 = n_out47p0.z;

// ScalarOp:53
	float n_in53p1 = 0.50000;
	float n_out53p0 = n_out48p1 + n_in53p1;

// Texture:51
	vec4 tex_frg_51_read = texture(tex_frg_51, vec3(n_out53p0).xy);
	vec3 n_out51p0 = tex_frg_51_read.rgb;
	float n_out51p1 = tex_frg_51_read.a;

// VectorOp:52
	vec3 n_in52p1 = vec3(0.33333, 0.00000, 0.00000);
	vec3 n_out52p0 = n_out47p0 - n_in52p1;

// Texture:46
	vec4 tex_frg_46_read = texture(tex_frg_46, n_out52p0.xy);
	vec3 n_out46p0 = tex_frg_46_read.rgb;
	float n_out46p1 = tex_frg_46_read.a;

// ScalarOp:50
	float n_out50p0 = min(dot(n_out51p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out46p0, vec3(0.333333, 0.333333, 0.333333)));

// VectorOp:60
	vec3 n_out60p0 = vec3(n_out55p0) + vec3(n_out50p0);

// Texture:68
	vec4 tex_frg_68_read = texture(tex_frg_68, n_out60p0.xy);
	vec3 n_out68p0 = tex_frg_68_read.rgb;
	float n_out68p1 = tex_frg_68_read.a;

// ScalarOp:65
	float n_out65p0 = n_out56p1 * n_out54p1;

// ScalarOp:64
	float n_out64p0 = n_out51p1 * n_out46p1;

// VectorOp:66
	vec3 n_out66p0 = vec3(n_out65p0) + vec3(n_out64p0);

// VectorMix:67
	vec3 n_out67p0 = mix(n_out44p0, n_out68p0, n_out66p0);

// Texture:31
	vec4 tex_frg_31_read = texture(tex_frg_31, vec3(n_out27p0).xy);
	vec3 n_out31p0 = tex_frg_31_read.rgb;
	float n_out31p1 = tex_frg_31_read.a;

// VectorOp:38
	vec3 n_in38p1 = vec3(5.00000, 5.00000, 5.00000);
	vec3 n_out38p0 = n_out31p0 * n_in38p1;

// Output:0
	ALBEDO = n_out67p0;
	EMISSION = n_out38p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 2828.47, -68.4782 )
nodes/vertex/0/position = Vector2( 4200, -60 )
nodes/vertex/2/node = SubResource( 96 )
nodes/vertex/2/position = Vector2( 2060, 60 )
nodes/vertex/3/node = SubResource( 104 )
nodes/vertex/3/position = Vector2( 2240, 60 )
nodes/vertex/4/node = SubResource( 115 )
nodes/vertex/4/position = Vector2( -266.702, -47.8941 )
nodes/vertex/5/node = SubResource( 126 )
nodes/vertex/5/position = Vector2( -106.702, -67.8941 )
nodes/vertex/6/node = SubResource( 134 )
nodes/vertex/6/position = Vector2( 73.298, -67.8941 )
nodes/vertex/7/node = SubResource( 135 )
nodes/vertex/7/position = Vector2( 300, -80 )
nodes/vertex/8/node = SubResource( 136 )
nodes/vertex/8/position = Vector2( 533.298, -47.8941 )
nodes/vertex/9/node = SubResource( 137 )
nodes/vertex/9/position = Vector2( 295.298, -193.894 )
nodes/vertex/10/node = SubResource( 86 )
nodes/vertex/10/position = Vector2( 513.298, -287.894 )
nodes/vertex/11/node = SubResource( 87 )
nodes/vertex/11/position = Vector2( 773.298, -247.894 )
nodes/vertex/12/node = SubResource( 88 )
nodes/vertex/12/position = Vector2( 973.298, -147.894 )
nodes/vertex/13/node = SubResource( 89 )
nodes/vertex/13/position = Vector2( 1153.3, -147.894 )
nodes/vertex/14/node = SubResource( 90 )
nodes/vertex/14/position = Vector2( 1333.3, -187.894 )
nodes/vertex/15/node = SubResource( 91 )
nodes/vertex/15/position = Vector2( 1513.3, -127.894 )
nodes/vertex/16/node = SubResource( 92 )
nodes/vertex/16/position = Vector2( 1720, -120 )
nodes/vertex/17/node = SubResource( 93 )
nodes/vertex/17/position = Vector2( 1893.3, -107.894 )
nodes/vertex/18/node = SubResource( 94 )
nodes/vertex/18/position = Vector2( 2080, -120 )
nodes/vertex/19/node = SubResource( 95 )
nodes/vertex/19/position = Vector2( 2260, -80 )
nodes/vertex/20/node = SubResource( 97 )
nodes/vertex/20/position = Vector2( 2700, -40 )
nodes/vertex/21/node = SubResource( 98 )
nodes/vertex/21/position = Vector2( 2900, -40 )
nodes/vertex/23/node = SubResource( 99 )
nodes/vertex/23/position = Vector2( 1420, -280 )
nodes/vertex/24/node = SubResource( 100 )
nodes/vertex/24/position = Vector2( 1580, -320 )
nodes/vertex/25/node = SubResource( 101 )
nodes/vertex/25/position = Vector2( 1760, -280 )
nodes/vertex/26/node = SubResource( 102 )
nodes/vertex/26/position = Vector2( 1920, -240 )
nodes/vertex/27/node = SubResource( 103 )
nodes/vertex/27/position = Vector2( 2080, -320 )
nodes/vertex/30/node = SubResource( 105 )
nodes/vertex/30/position = Vector2( 2480, -100 )
nodes/vertex/31/node = SubResource( 106 )
nodes/vertex/31/position = Vector2( 2260, -220 )
nodes/vertex/32/node = SubResource( 107 )
nodes/vertex/32/position = Vector2( 2340, -380 )
nodes/vertex/33/node = SubResource( 108 )
nodes/vertex/33/position = Vector2( 2880, -300 )
nodes/vertex/34/node = SubResource( 109 )
nodes/vertex/34/position = Vector2( 2720, -440 )
nodes/vertex/35/node = SubResource( 110 )
nodes/vertex/35/position = Vector2( 2500, -280 )
nodes/vertex/36/node = SubResource( 111 )
nodes/vertex/36/position = Vector2( 2120, -440 )
nodes/vertex/37/node = SubResource( 112 )
nodes/vertex/37/position = Vector2( 3060, -240 )
nodes/vertex/38/node = SubResource( 113 )
nodes/vertex/38/position = Vector2( 3271.55, -146.759 )
nodes/vertex/39/node = SubResource( 114 )
nodes/vertex/39/position = Vector2( 2500, -560 )
nodes/vertex/40/node = SubResource( 116 )
nodes/vertex/40/position = Vector2( 2720, -720 )
nodes/vertex/41/node = SubResource( 117 )
nodes/vertex/41/position = Vector2( 2880, -580 )
nodes/vertex/42/node = SubResource( 118 )
nodes/vertex/42/position = Vector2( 3060, -520 )
nodes/vertex/43/node = SubResource( 119 )
nodes/vertex/43/position = Vector2( 3480, -240 )
nodes/vertex/44/node = SubResource( 120 )
nodes/vertex/44/position = Vector2( 2300, -520 )
nodes/vertex/45/node = SubResource( 121 )
nodes/vertex/45/position = Vector2( 2540, -680 )
nodes/vertex/46/node = SubResource( 122 )
nodes/vertex/46/position = Vector2( 3705.71, -138.201 )
nodes/vertex/47/node = SubResource( 123 )
nodes/vertex/47/position = Vector2( 3320, 0 )
nodes/vertex/48/node = SubResource( 124 )
nodes/vertex/48/position = Vector2( 3520, -40 )
nodes/vertex/49/node = SubResource( 125 )
nodes/vertex/49/position = Vector2( 3912.29, -56.0925 )
nodes/vertex/50/node = SubResource( 127 )
nodes/vertex/50/position = Vector2( 3720, -20 )
nodes/vertex/51/node = SubResource( 128 )
nodes/vertex/51/position = Vector2( 3700, 60 )
nodes/vertex/52/node = SubResource( 129 )
nodes/vertex/52/position = Vector2( 3960, 40 )
nodes/vertex/53/node = SubResource( 130 )
nodes/vertex/53/position = Vector2( 3740, 120 )
nodes/vertex/54/node = SubResource( 131 )
nodes/vertex/54/position = Vector2( 3720, 200 )
nodes/vertex/connections = PoolIntArray( 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 7, 0, 7, 0, 8, 0, 7, 1, 8, 1, 6, 0, 9, 0, 10, 0, 11, 0, 10, 1, 11, 1, 9, 0, 10, 0, 11, 0, 12, 0, 8, 0, 12, 1, 12, 0, 13, 0, 13, 0, 14, 0, 14, 0, 15, 0, 15, 0, 16, 0, 16, 0, 17, 0, 17, 0, 18, 0, 3, 0, 20, 1, 2, 0, 3, 0, 18, 0, 19, 0, 3, 0, 21, 1, 23, 0, 24, 0, 24, 0, 25, 0, 25, 0, 26, 0, 20, 0, 21, 0, 19, 0, 30, 1, 30, 0, 20, 0, 26, 0, 27, 0, 27, 0, 31, 0, 31, 0, 30, 0, 36, 0, 32, 0, 35, 0, 33, 1, 32, 1, 34, 0, 34, 0, 33, 0, 33, 0, 37, 0, 37, 0, 38, 0, 21, 0, 38, 1, 39, 0, 41, 1, 40, 0, 41, 0, 41, 0, 42, 0, 42, 0, 43, 0, 36, 0, 44, 0, 44, 0, 39, 0, 32, 1, 45, 0, 45, 0, 40, 0, 38, 0, 43, 1, 43, 0, 46, 0, 48, 0, 46, 1, 46, 0, 49, 0, 50, 0, 49, 1, 51, 0, 49, 2, 49, 0, 0, 0, 3, 0, 52, 0, 53, 0, 52, 1, 52, 0, 0, 1, 54, 0, 52, 2, 47, 0, 48, 0 )
nodes/fragment/0/position = Vector2( 5560, -560 )
nodes/fragment/2/node = SubResource( 15 )
nodes/fragment/2/position = Vector2( 160, 120 )
nodes/fragment/3/node = SubResource( 27 )
nodes/fragment/3/position = Vector2( 320, 100 )
nodes/fragment/4/node = SubResource( 48 )
nodes/fragment/4/position = Vector2( 500, 100 )
nodes/fragment/5/node = SubResource( 62 )
nodes/fragment/5/position = Vector2( 720, 120 )
nodes/fragment/6/node = SubResource( 74 )
nodes/fragment/6/position = Vector2( 960, 120 )
nodes/fragment/7/node = SubResource( 83 )
nodes/fragment/7/position = Vector2( 722, -26 )
nodes/fragment/8/node = SubResource( 84 )
nodes/fragment/8/position = Vector2( 940, -120 )
nodes/fragment/9/node = SubResource( 85 )
nodes/fragment/9/position = Vector2( 1200, -80 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 1400, 20 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 1580, 20 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( 1760, -20 )
nodes/fragment/13/node = SubResource( 8 )
nodes/fragment/13/position = Vector2( 1940, 40 )
nodes/fragment/14/node = SubResource( 9 )
nodes/fragment/14/position = Vector2( 2140, 40 )
nodes/fragment/15/node = SubResource( 10 )
nodes/fragment/15/position = Vector2( 2320, 60 )
nodes/fragment/16/node = SubResource( 11 )
nodes/fragment/16/position = Vector2( 2520, 60 )
nodes/fragment/17/node = SubResource( 12 )
nodes/fragment/17/position = Vector2( 2220, -100 )
nodes/fragment/18/node = SubResource( 13 )
nodes/fragment/18/position = Vector2( 1840, -100 )
nodes/fragment/19/node = SubResource( 14 )
nodes/fragment/19/position = Vector2( 2020, -80 )
nodes/fragment/20/node = SubResource( 16 )
nodes/fragment/20/position = Vector2( 2440, -100 )
nodes/fragment/21/node = SubResource( 17 )
nodes/fragment/21/position = Vector2( 2600, -100 )
nodes/fragment/22/node = SubResource( 18 )
nodes/fragment/22/position = Vector2( 2780, -60 )
nodes/fragment/24/node = SubResource( 19 )
nodes/fragment/24/position = Vector2( 2680, -200 )
nodes/fragment/25/node = SubResource( 20 )
nodes/fragment/25/position = Vector2( 2840, -240 )
nodes/fragment/26/node = SubResource( 21 )
nodes/fragment/26/position = Vector2( 3020, -200 )
nodes/fragment/27/node = SubResource( 22 )
nodes/fragment/27/position = Vector2( 3180, -160 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( 3320, -140 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( 3560, -60 )
nodes/fragment/30/node = SubResource( 30 )
nodes/fragment/30/position = Vector2( 3320, -320 )
nodes/fragment/31/node = SubResource( 33 )
nodes/fragment/31/position = Vector2( 3540, -280 )
nodes/fragment/32/node = SubResource( 36 )
nodes/fragment/32/position = Vector2( 2720, 20 )
nodes/fragment/33/node = SubResource( 37 )
nodes/fragment/33/position = Vector2( 3125.1, 17.9349 )
nodes/fragment/34/node = SubResource( 38 )
nodes/fragment/34/position = Vector2( 2960, 160 )
nodes/fragment/35/node = SubResource( 41 )
nodes/fragment/35/position = Vector2( 2420, 440 )
nodes/fragment/36/node = SubResource( 44 )
nodes/fragment/36/position = Vector2( 2800, 440 )
nodes/fragment/37/node = SubResource( 45 )
nodes/fragment/37/position = Vector2( 2760, 200 )
nodes/fragment/38/node = SubResource( 46 )
nodes/fragment/38/position = Vector2( 3750.23, -126 )
nodes/fragment/39/node = SubResource( 47 )
nodes/fragment/39/position = Vector2( 2564.75, 288.619 )
nodes/fragment/40/node = SubResource( 49 )
nodes/fragment/40/position = Vector2( 2120, 240 )
nodes/fragment/41/node = SubResource( 50 )
nodes/fragment/41/position = Vector2( 2351.42, 332.456 )
nodes/fragment/42/node = SubResource( 51 )
nodes/fragment/42/position = Vector2( 2800.96, 323.456 )
nodes/fragment/43/node = SubResource( 52 )
nodes/fragment/43/position = Vector2( 3440, -460 )
nodes/fragment/44/node = SubResource( 53 )
nodes/fragment/44/position = Vector2( 4840, -320 )
nodes/fragment/45/node = SubResource( 56 )
nodes/fragment/45/position = Vector2( 4200, -300 )
nodes/fragment/46/node = SubResource( 59 )
nodes/fragment/46/position = Vector2( 3880, -520 )
nodes/fragment/47/node = SubResource( 60 )
nodes/fragment/47/position = Vector2( 3560, -620 )
nodes/fragment/48/node = SubResource( 61 )
nodes/fragment/48/position = Vector2( 3820, -640 )
nodes/fragment/50/node = SubResource( 63 )
nodes/fragment/50/position = Vector2( 4420, -540 )
nodes/fragment/51/node = SubResource( 66 )
nodes/fragment/51/position = Vector2( 4240, -660 )
nodes/fragment/52/node = SubResource( 67 )
nodes/fragment/52/position = Vector2( 3700, -540 )
nodes/fragment/53/node = SubResource( 68 )
nodes/fragment/53/position = Vector2( 4060, -620 )
nodes/fragment/54/node = SubResource( 69 )
nodes/fragment/54/position = Vector2( 3960, -820 )
nodes/fragment/55/node = SubResource( 70 )
nodes/fragment/55/position = Vector2( 4500, -840 )
nodes/fragment/56/node = SubResource( 71 )
nodes/fragment/56/position = Vector2( 4320, -960 )
nodes/fragment/58/node = SubResource( 72 )
nodes/fragment/58/position = Vector2( 4140, -920 )
nodes/fragment/59/node = SubResource( 73 )
nodes/fragment/59/position = Vector2( 3900, -940 )
nodes/fragment/60/node = SubResource( 75 )
nodes/fragment/60/position = Vector2( 4740, -760 )
nodes/fragment/64/node = SubResource( 76 )
nodes/fragment/64/position = Vector2( 4720, -900 )
nodes/fragment/65/node = SubResource( 77 )
nodes/fragment/65/position = Vector2( 4720, -1020 )
nodes/fragment/66/node = SubResource( 78 )
nodes/fragment/66/position = Vector2( 4935.3, -895.386 )
nodes/fragment/67/node = SubResource( 79 )
nodes/fragment/67/position = Vector2( 5320, -600 )
nodes/fragment/68/node = SubResource( 82 )
nodes/fragment/68/position = Vector2( 4960, -740 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 5, 1, 6, 1, 4, 0, 7, 0, 8, 0, 9, 0, 8, 1, 9, 1, 7, 0, 8, 0, 9, 0, 10, 0, 6, 0, 10, 1, 10, 0, 11, 0, 11, 0, 12, 0, 12, 0, 13, 0, 13, 0, 14, 0, 14, 0, 15, 0, 15, 0, 16, 0, 18, 0, 19, 0, 19, 0, 17, 0, 17, 0, 20, 0, 20, 0, 21, 0, 21, 0, 22, 0, 24, 0, 25, 0, 25, 0, 26, 0, 26, 0, 27, 0, 27, 0, 28, 0, 27, 0, 30, 0, 27, 0, 31, 0, 16, 0, 32, 0, 22, 0, 33, 0, 32, 0, 34, 1, 37, 0, 34, 0, 31, 0, 38, 0, 38, 0, 0, 5, 40, 0, 41, 0, 41, 0, 39, 0, 42, 0, 34, 2, 36, 0, 42, 0, 39, 1, 36, 0, 33, 0, 29, 1, 28, 0, 29, 0, 32, 0, 33, 1, 29, 0, 44, 1, 43, 0, 45, 0, 45, 0, 44, 0, 47, 0, 48, 0, 51, 0, 50, 0, 47, 0, 52, 0, 52, 0, 46, 0, 48, 1, 53, 0, 53, 0, 51, 0, 54, 0, 55, 1, 56, 0, 55, 0, 59, 1, 58, 0, 47, 0, 54, 0, 47, 0, 59, 0, 59, 1, 56, 0, 55, 0, 60, 0, 50, 0, 60, 1, 46, 0, 50, 1, 51, 1, 64, 0, 46, 1, 64, 1, 56, 1, 65, 0, 54, 1, 65, 1, 65, 0, 66, 0, 64, 0, 66, 1, 66, 0, 67, 2, 67, 0, 0, 0, 44, 0, 67, 0, 60, 0, 68, 0, 68, 0, 67, 1 )

[sub_resource type="ShaderMaterial" id=139]
shader = SubResource( 138 )
shader_param/morph = 0.0
shader_param/morph2 = 0.0

[sub_resource type="CubeMesh" id=140]
subdivide_width = 64
subdivide_height = 64
subdivide_depth = 64

[sub_resource type="Animation" id=141]
length = 5.5
tracks/0/type = "value"
tracks/0/path = NodePath("cyberpunk:material_override:shader_param/morph")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.9, 5 ),
"transitions": PoolRealArray( 1, 0.574349, 1, 0.535887 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("cyberpunk:material_override:shader_param/morph2")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4, 0.9, 5 ),
"transitions": PoolRealArray( 1, 0.574349, 1, 0.535887 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("cyberpunk:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.3, 4.6 ),
"transitions": PoolRealArray( 1, 0.615572, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0, 360, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("cyberpunk:material_override:shader_param/time")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/keys = {
"times": PoolRealArray( 0, 5.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 5.5 ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 3 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 2 )

[node name="cyberpunk" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 1.74846e-07, 0, 1, 0, -1.74846e-07, 0, 1, 0, 0, 0 )
material_override = SubResource( 139 )
mesh = SubResource( 140 )
material/0 = null

[node name="OmniLight" type="OmniLight" parent="cyberpunk"]
transform = Transform( 1, 0, -1.74846e-07, 0, 1, 0, 1.74846e-07, 0, 1, -2.91515e-07, 0, 1.66727 )
light_color = Color( 1, 0, 0, 1 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( -0.641109, -0.448414, -0.622819, 0.656166, 0.100619, -0.747878, 0.398026, -0.888144, 0.229727, 0, 0, 0 )
light_color = Color( 0.8, 0, 0.807843, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 141 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.985794, 0.0328529, -0.164712, 0, 0.980683, 0.195604, 0.167956, -0.192825, 0.966752, -1.10816, 0.456539, 5.3238 )
