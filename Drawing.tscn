[gd_scene load_steps=132 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 8, 4 )
subdivide_width = 1024

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.4, 0.42449, 0.461224, 0.468951, 0.486081 )
colors = PoolColorArray( 0, 1, 0.015625, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.3, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=6]

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0.961456, 0.972163, 0.978587, 0.980728 )
colors = PoolColorArray( 0.946108, 0.946108, 0.946108, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = SubResource( 9 )

[sub_resource type="VisualShaderNodeVectorOp" id=11]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.72, 0.075, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=12]

[sub_resource type="Gradient" id=13]
offsets = PoolRealArray( 0.364026, 0.368308, 0.376874, 0.389722 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=14]
gradient = SubResource( 13 )

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = SubResource( 14 )

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorLen" id=17]

[sub_resource type="VisualShaderNodeTexture" id=18]
texture = SubResource( 14 )

[sub_resource type="VisualShaderNodeVectorOp" id=19]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.72, 0.925, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=20]
operator = 6

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=22]

[sub_resource type="OpenSimplexNoise" id=23]
octaves = 1
period = 7.1

[sub_resource type="NoiseTexture" id=24]
seamless = true
noise = SubResource( 23 )

[sub_resource type="VisualShaderNodeTexture" id=25]
texture = SubResource( 24 )

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=27]

[sub_resource type="VisualShaderNodeVectorOp" id=28]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=29]

[sub_resource type="VisualShaderNodeVectorDecompose" id=30]

[sub_resource type="Gradient" id=31]
offsets = PoolRealArray( 0.522581, 0.525806 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=32]
gradient = SubResource( 31 )

[sub_resource type="VisualShaderNodeTexture" id=33]
texture = SubResource( 32 )

[sub_resource type="VisualShaderNodeVectorOp" id=34]

[sub_resource type="VisualShaderNodeVectorOp" id=35]
operator = 2

[sub_resource type="Gradient" id=36]
offsets = PoolRealArray( 0.4, 0.474194, 0.480645 )
colors = PoolColorArray( 0, 1, 0.015625, 1, 0, 0, 0, 0, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=37]
gradient = SubResource( 36 )

[sub_resource type="VisualShaderNodeTexture" id=38]
texture = SubResource( 37 )

[sub_resource type="Gradient" id=39]
offsets = PoolRealArray( 0.164516, 0.693548 )

[sub_resource type="GradientTexture" id=40]
gradient = SubResource( 39 )

[sub_resource type="VisualShaderNodeTexture" id=41]
texture = SubResource( 40 )

[sub_resource type="VisualShaderNodeInput" id=42]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=43]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 16, 8, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=44]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorOp" id=45]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0, 0 ) ]

[sub_resource type="Gradient" id=46]
offsets = PoolRealArray( 0.969849, 0.9799 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=47]
gradient = SubResource( 46 )

[sub_resource type="VisualShaderNodeTexture" id=48]
texture = SubResource( 47 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=49]

[sub_resource type="Gradient" id=50]
offsets = PoolRealArray( 0.496429, 0.497487, 0.503, 0.504 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=51]
gradient = SubResource( 50 )

[sub_resource type="VisualShaderNodeTexture" id=52]
texture = SubResource( 51 )

[sub_resource type="VisualShaderNodeVectorOp" id=53]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 16, 8, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=54]
operator = 2

[sub_resource type="Gradient" id=55]
colors = PoolColorArray( 0.40625, 0.147583, 0.147583, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=56]
gradient = SubResource( 55 )

[sub_resource type="VisualShaderNodeTexture" id=57]
texture = SubResource( 56 )

[sub_resource type="VisualShaderNodeVectorOp" id=58]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=59]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=60]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=61]
function = 34

[sub_resource type="VisualShaderNodeVectorOp" id=62]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]

[sub_resource type="Gradient" id=63]
offsets = PoolRealArray( 0, 0.142857 )

[sub_resource type="GradientTexture" id=64]
gradient = SubResource( 63 )

[sub_resource type="VisualShaderNodeTexture" id=65]
texture = SubResource( 64 )

[sub_resource type="VisualShaderNodeScalarOp" id=66]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=67]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=68]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeScalarFunc" id=69]
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=70]

[sub_resource type="VisualShaderNodeScalarFunc" id=71]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=72]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 1, 1, 1 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeInput" id=73]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=74]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 96, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=75]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=76]

[sub_resource type="VisualShaderNodeVectorOp" id=77]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.45, 0.55, 0 ) ]
operator = 1

[sub_resource type="Gradient" id=78]
offsets = PoolRealArray( 0, 0.026178, 0.0942408, 0.120419 )
colors = PoolColorArray( 0.990025, 0.990025, 0.990025, 1, 0.121569, 0.121569, 0.121569, 1, 0.121094, 0.121094, 0.121094, 1, 0.988281, 0.988281, 0.988281, 1 )

[sub_resource type="GradientTexture" id=79]
gradient = SubResource( 78 )

[sub_resource type="VisualShaderNodeTexture" id=80]
texture = SubResource( 79 )

[sub_resource type="VisualShaderNodeInput" id=81]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=82]

[sub_resource type="VisualShaderNodeVectorOp" id=83]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=84]

[sub_resource type="OpenSimplexNoise" id=85]
period = 1.2
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=86]
noise = SubResource( 85 )

[sub_resource type="VisualShaderNodeTexture" id=87]
texture = SubResource( 86 )

[sub_resource type="VisualShaderNodeVectorOp" id=88]

[sub_resource type="VisualShaderNodeScalarOp" id=89]
default_input_values = [ 0, 0.0, 1, 0.4 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=90]
default_input_values = [ 0, 0.0, 1, 1.5 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=91]
operator = 2

[sub_resource type="VisualShaderNodeVectorLen" id=92]

[sub_resource type="VisualShaderNodeScalarFunc" id=93]
function = 31

[sub_resource type="VisualShaderNodeScalarInterp" id=94]

[sub_resource type="VisualShaderNodeBooleanUniform" id=95]
uniform_name = "alpha"

[sub_resource type="OpenSimplexNoise" id=96]
seed = 28
period = 0.1
lacunarity = 0.1

[sub_resource type="NoiseTexture" id=97]
flags = 3
width = 16
height = 8
noise = SubResource( 96 )

[sub_resource type="VisualShaderNodeTexture" id=98]
texture = SubResource( 97 )

[sub_resource type="VisualShaderNodeScalarOp" id=99]
operator = 2

[sub_resource type="Gradient" id=100]
offsets = PoolRealArray( 0.471204, 0.47644 )

[sub_resource type="GradientTexture" id=101]
gradient = SubResource( 100 )

[sub_resource type="VisualShaderNodeTexture" id=102]
texture = SubResource( 101 )

[sub_resource type="VisualShaderNodeVectorOp" id=103]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.9, 1.9, 1.9 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=104]

[sub_resource type="VisualShaderNodeScalarFunc" id=105]
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=106]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=107]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=108]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4.25, -0.0001, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=109]

[sub_resource type="VisualShaderNodeVectorOp" id=110]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=111]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=112]

[sub_resource type="VisualShaderNodeVectorOp" id=113]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=114]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorInterp" id=115]

[sub_resource type="VisualShaderNodeInput" id=116]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=117]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeScalarUniform" id=118]
uniform_name = "stand"

[sub_resource type="VisualShaderNodeVectorOp" id=119]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=120]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=121]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 16, 8, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=122]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=123]

[sub_resource type="Gradient" id=124]
colors = PoolColorArray( 0.501961, 0.501961, 0, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=125]
gradient = SubResource( 124 )

[sub_resource type="VisualShaderNodeTexture" id=126]
texture = SubResource( 125 )

[sub_resource type="VisualShaderNodeVectorOp" id=127]

[sub_resource type="VisualShader" id=128]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_8;
uniform float stand;
uniform float morph;
uniform sampler2D tex_frg_70;
uniform sampler2D tex_frg_28;
uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_18;
uniform sampler2D tex_frg_21;
uniform sampler2D tex_frg_38;
uniform sampler2D tex_frg_35;
uniform sampler2D tex_frg_39;
uniform sampler2D tex_frg_51;
uniform sampler2D tex_frg_75;
uniform sampler2D tex_frg_57;
uniform sampler2D tex_frg_47;
uniform sampler2D tex_frg_49;
uniform bool alpha;



void vertex() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorDecompose:10
	float n_out10p0 = n_out4p0.x;
	float n_out10p1 = n_out4p0.y;
	float n_out10p2 = n_out4p0.z;

// ScalarFunc:11
	float n_out11p0 = round(n_out10p0);

// ScalarFunc:13
	float n_out13p0 = 1.0 - n_out11p0;

// VectorOp:14
	vec3 n_in14p1 = vec3(4.25000, -0.00010, 0.00000);
	vec3 n_out14p0 = vec3(n_out13p0) * n_in14p1;

// VectorOp:5
	vec3 n_in5p1 = vec3(16.00000, 8.00000, 0.00000);
	vec3 n_out5p0 = n_out4p0 * n_in5p1;

// VectorOp:6
	vec3 n_in6p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out6p0 = mod(n_out5p0, n_in6p1);

// VectorDecompose:7
	float n_out7p0 = n_out6p0.x;
	float n_out7p1 = n_out6p0.y;
	float n_out7p2 = n_out6p0.z;

// Texture:8
	vec4 tex_vtx_8_read = texture(tex_vtx_8, vec3(n_out7p0).xy);
	vec3 n_out8p0 = tex_vtx_8_read.rgb;
	float n_out8p1 = tex_vtx_8_read.a;

// ScalarUniform:23
	float n_out23p0 = stand;

// VectorOp:16
	vec3 n_out16p0 = n_out8p0 * vec3(n_out23p0);

// VectorOp:12
	vec3 n_out12p0 = vec3(n_out11p0) * n_out16p0;

// VectorOp:15
	vec3 n_out15p0 = n_out14p0 + n_out12p0;

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorOp:3
	vec3 n_in3p1 = vec3(2.00000, 0.00000, 0.00000);
	vec3 n_out3p0 = n_out2p0 - n_in3p1;

// VectorOp:9
	vec3 n_out9p0 = n_out15p0 + n_out3p0;

// Input:21
	vec3 n_out21p0 = VERTEX;

// ScalarUniform:22
	float n_out22p0 = morph;

// VectorMix:20
	vec3 n_out20p0 = mix(n_out9p0, n_out21p0, vec3(n_out22p0));

// Output:0
	VERTEX = n_out20p0;

}

void fragment() {
// Input:66
	vec3 n_out66p0 = vec3(UV, 0.0);

// VectorOp:67
	vec3 n_in67p1 = vec3(96.00000, 1.00000, 0.00000);
	vec3 n_out67p0 = n_out66p0 * n_in67p1;

// VectorOp:68
	vec3 n_in68p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out68p0 = mod(n_out67p0, n_in68p1);

// VectorDecompose:69
	float n_out69p0 = n_out68p0.x;
	float n_out69p1 = n_out68p0.y;
	float n_out69p2 = n_out68p0.z;

// Texture:70
	vec4 tex_frg_70_read = texture(tex_frg_70, vec3(n_out69p0).xy);
	vec3 n_out70p0 = tex_frg_70_read.rgb;
	float n_out70p1 = tex_frg_70_read.a;

// Texture:28
	vec4 tex_frg_28_read = texture(tex_frg_28, UV.xy);
	vec3 n_out28p0 = tex_frg_28_read.rgb;
	float n_out28p1 = tex_frg_28_read.a;

// ScalarOp:29
	float n_in29p1 = 0.10000;
	float n_out29p0 = dot(n_out28p0, vec3(0.333333, 0.333333, 0.333333)) * n_in29p1;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:5
	vec3 n_in5p1 = vec3(16.00000, 8.00000, 0.00000);
	vec3 n_out5p0 = n_out2p0 * n_in5p1;

// VectorOp:6
	vec3 n_in6p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out6p0 = mod(n_out5p0, n_in6p1);

// VectorOp:27
	vec3 n_out27p0 = vec3(n_out29p0) + n_out6p0;

// VectorOp:7
	vec3 n_in7p1 = vec3(0.45000, 0.55000, 0.00000);
	vec3 n_out7p0 = n_out27p0 - n_in7p1;

// VectorOp:9
	vec3 n_in9p1 = vec3(1.90000, 1.90000, 1.90000);
	vec3 n_out9p0 = n_out7p0 * n_in9p1;

// VectorLen:8
	float n_out8p0 = length(n_out9p0);

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, vec3(n_out8p0).xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// VectorOp:16
	vec3 n_in16p1 = vec3(0.72000, 0.07500, 0.00000);
	vec3 n_out16p0 = n_out6p0 - n_in16p1;

// VectorLen:17
	float n_out17p0 = length(n_out16p0);

// Texture:18
	vec4 tex_frg_18_read = texture(tex_frg_18, vec3(n_out17p0).xy);
	vec3 n_out18p0 = tex_frg_18_read.rgb;
	float n_out18p1 = tex_frg_18_read.a;

// VectorOp:22
	vec3 n_in22p1 = vec3(0.72000, 0.92500, 0.00000);
	vec3 n_out22p0 = n_out6p0 - n_in22p1;

// VectorLen:20
	float n_out20p0 = length(n_out22p0);

// Texture:21
	vec4 tex_frg_21_read = texture(tex_frg_21, vec3(n_out20p0).xy);
	vec3 n_out21p0 = tex_frg_21_read.rgb;
	float n_out21p1 = tex_frg_21_read.a;

// VectorOp:30
	vec3 n_out30p0 = vec3(n_out18p1) * vec3(n_out21p1);

// VectorOp:26
	vec3 n_out26p0 = n_out10p0 * n_out30p0;

// Texture:38
	vec4 tex_frg_38_read = texture(tex_frg_38, vec3(n_out8p0).xy);
	vec3 n_out38p0 = tex_frg_38_read.rgb;
	float n_out38p1 = tex_frg_38_read.a;

// VectorDecompose:34
	float n_out34p0 = n_out6p0.x;
	float n_out34p1 = n_out6p0.y;
	float n_out34p2 = n_out6p0.z;

// Texture:35
	vec4 tex_frg_35_read = texture(tex_frg_35, vec3(n_out34p0).xy);
	vec3 n_out35p0 = tex_frg_35_read.rgb;
	float n_out35p1 = tex_frg_35_read.a;

// VectorOp:37
	vec3 n_out37p0 = vec3(n_out38p1) * n_out35p0;

// VectorOp:36
	vec3 n_out36p0 = n_out26p0 + n_out37p0;

// Texture:39
	vec4 tex_frg_39_read = texture(tex_frg_39, n_out36p0.xy);
	vec3 n_out39p0 = tex_frg_39_read.rgb;
	float n_out39p1 = tex_frg_39_read.a;

// VectorFunc:55
	vec3 n_out55p0 = vec3(1.0, 1.0, 1.0) - n_out35p0;

// VectorOp:23
	vec3 n_out23p0 = max(n_out18p0, n_out21p0);

// Texture:51
	vec4 tex_frg_51_read = texture(tex_frg_51, n_out23p0.xy);
	vec3 n_out51p0 = tex_frg_51_read.rgb;
	float n_out51p1 = tex_frg_51_read.a;

// VectorOp:52
	vec3 n_out52p0 = n_out51p0 - vec3(n_out10p1);

// VectorOp:54
	vec3 n_out54p0 = n_out55p0 * n_out52p0;

// VectorOp:53
	vec3 n_out53p0 = n_out39p0 * n_out54p0;

// VectorMix:32
	vec3 n_out32p0 = mix(n_out53p0, n_out10p0, vec3(n_out10p1));

// Input:41
	vec3 n_out41p0 = vec3(UV, 0.0);

// VectorDecompose:48
	float n_out48p0 = n_out41p0.x;
	float n_out48p1 = n_out41p0.y;
	float n_out48p2 = n_out41p0.z;

// ScalarFunc:60
	float n_out60p0 = round(n_out48p0);

// VectorMix:65
	vec3 n_out65p0 = mix(n_out70p0, n_out32p0, vec3(n_out60p0));

// ScalarFunc:62
	float n_out62p0 = 1.0 - n_out60p0;

// ScalarFunc:80
	float n_out80p0 = 1.0 - n_out62p0;

// Input:71
	vec3 n_out71p0 = vec3(UV, 0.0);

// VectorDecompose:72
	float n_out72p0 = n_out71p0.x;
	float n_out72p1 = n_out71p0.y;
	float n_out72p2 = n_out71p0.z;

// VectorOp:73
	vec3 n_in73p1 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_out73p0 = vec3(n_out72p0) * n_in73p1;

// VectorOp:74
	vec3 n_out74p0 = n_out73p0 + n_out71p0;

// Texture:75
	vec4 tex_frg_75_read = texture(tex_frg_75, n_out74p0.xy);
	vec3 n_out75p0 = tex_frg_75_read.rgb;
	float n_out75p1 = tex_frg_75_read.a;

// ScalarOp:77
	float n_in77p1 = 0.40000;
	float n_out77p0 = dot(n_out75p0, vec3(0.333333, 0.333333, 0.333333)) * n_in77p1;

// ScalarOp:78
	float n_in78p1 = 1.50000;
	float n_out78p0 = pow(n_out77p0, n_in78p1);

// ScalarOp:79
	float n_out79p0 = n_out80p0 * n_out78p0;

// VectorOp:76
	vec3 n_out76p0 = n_out65p0 + vec3(n_out79p0);

// Texture:57
	vec4 tex_frg_57_read = texture(tex_frg_57, n_out52p0.xy);
	vec3 n_out57p0 = tex_frg_57_read.rgb;
	float n_out57p1 = tex_frg_57_read.a;

// ScalarOp:58
	float n_out58p0 = dot(n_out55p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out57p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:56
	vec3 n_out56p0 = vec3(n_out10p1) + vec3(n_out58p0);

// VectorOp:42
	vec3 n_in42p1 = vec3(16.00000, 8.00000, 0.00000);
	vec3 n_out42p0 = n_out41p0 * n_in42p1;

// VectorOp:43
	vec3 n_in43p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out43p0 = mod(n_out42p0, n_in43p1);

// VectorDecompose:3
	float n_out3p0 = n_out43p0.x;
	float n_out3p1 = n_out43p0.y;
	float n_out3p2 = n_out43p0.z;

// Texture:47
	vec4 tex_frg_47_read = texture(tex_frg_47, vec3(n_out3p0).xy);
	vec3 n_out47p0 = tex_frg_47_read.rgb;
	float n_out47p1 = tex_frg_47_read.a;

// Texture:49
	vec4 tex_frg_49_read = texture(tex_frg_49, vec3(n_out48p0).xy);
	vec3 n_out49p0 = tex_frg_49_read.rgb;
	float n_out49p1 = tex_frg_49_read.a;

// VectorOp:50
	vec3 n_out50p0 = n_out47p0 * n_out49p0;

// ScalarOp:59
	float n_out59p0 = dot(n_out56p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out50p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:61
	float n_out61p0 = n_out59p0 + n_out62p0;

// BooleanUniform:82
	bool n_out82p0 = alpha;

// ScalarMix:81
	float n_in81p1 = 1.00000;
	float n_out81p0 = mix(n_out61p0, n_in81p1, n_out82p0 ? 1.0 : 0.0);

// Output:0
	ALBEDO = n_out76p0;
	ALPHA = n_out81p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 2222.5, 834.105 )
modes/cull = 2
modes/depth_draw = 3
flags/unshaded = true
nodes/vertex/0/position = Vector2( 1560, 60 )
nodes/vertex/2/node = SubResource( 114 )
nodes/vertex/2/position = Vector2( 120, 280 )
nodes/vertex/3/node = SubResource( 119 )
nodes/vertex/3/position = Vector2( 340, 280 )
nodes/vertex/4/node = SubResource( 120 )
nodes/vertex/4/position = Vector2( -640, 0 )
nodes/vertex/5/node = SubResource( 121 )
nodes/vertex/5/position = Vector2( -440, 40 )
nodes/vertex/6/node = SubResource( 122 )
nodes/vertex/6/position = Vector2( -280, 20 )
nodes/vertex/7/node = SubResource( 123 )
nodes/vertex/7/position = Vector2( -120, 60 )
nodes/vertex/8/node = SubResource( 126 )
nodes/vertex/8/position = Vector2( 80, 0 )
nodes/vertex/9/node = SubResource( 127 )
nodes/vertex/9/position = Vector2( 960, 40 )
nodes/vertex/10/node = SubResource( 104 )
nodes/vertex/10/position = Vector2( -340, -140 )
nodes/vertex/11/node = SubResource( 105 )
nodes/vertex/11/position = Vector2( 0, -140 )
nodes/vertex/12/node = SubResource( 106 )
nodes/vertex/12/position = Vector2( 440, -60 )
nodes/vertex/13/node = SubResource( 107 )
nodes/vertex/13/position = Vector2( 308.565, -190.519 )
nodes/vertex/14/node = SubResource( 108 )
nodes/vertex/14/position = Vector2( 520, -180 )
nodes/vertex/15/node = SubResource( 109 )
nodes/vertex/15/position = Vector2( 700, -80 )
nodes/vertex/16/node = SubResource( 110 )
nodes/vertex/16/position = Vector2( 260, 40 )
nodes/vertex/17/node = SubResource( 111 )
nodes/vertex/17/position = Vector2( 520, -280 )
nodes/vertex/18/node = SubResource( 112 )
nodes/vertex/18/position = Vector2( 660, -280 )
nodes/vertex/19/node = SubResource( 113 )
nodes/vertex/19/position = Vector2( 920, -260 )
nodes/vertex/20/node = SubResource( 115 )
nodes/vertex/20/position = Vector2( 1288.89, 142.956 )
nodes/vertex/21/node = SubResource( 116 )
nodes/vertex/21/position = Vector2( 1000, 180 )
nodes/vertex/22/node = SubResource( 117 )
nodes/vertex/22/position = Vector2( 980, 260 )
nodes/vertex/23/node = SubResource( 118 )
nodes/vertex/23/position = Vector2( 60, 200 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 7, 0, 3, 0, 9, 1, 7, 0, 8, 0, 4, 0, 10, 0, 10, 0, 11, 0, 11, 0, 12, 0, 11, 0, 13, 0, 13, 0, 14, 0, 14, 0, 15, 0, 12, 0, 15, 1, 15, 0, 9, 0, 8, 0, 16, 0, 16, 0, 12, 1, 17, 0, 18, 0, 18, 0, 19, 0, 9, 0, 20, 0, 21, 0, 20, 1, 20, 0, 0, 0, 22, 0, 20, 2, 23, 0, 16, 1 )
nodes/fragment/0/position = Vector2( 4500, 700 )
nodes/fragment/2/node = SubResource( 16 )
nodes/fragment/2/position = Vector2( -420, 580 )
nodes/fragment/3/node = SubResource( 27 )
nodes/fragment/3/position = Vector2( 520, 1000 )
nodes/fragment/5/node = SubResource( 53 )
nodes/fragment/5/position = Vector2( -220, 520 )
nodes/fragment/6/node = SubResource( 68 )
nodes/fragment/6/position = Vector2( -40, 540 )
nodes/fragment/7/node = SubResource( 77 )
nodes/fragment/7/position = Vector2( 420, 300 )
nodes/fragment/8/node = SubResource( 92 )
nodes/fragment/8/position = Vector2( 740, 340 )
nodes/fragment/9/node = SubResource( 103 )
nodes/fragment/9/position = Vector2( 580, 300 )
nodes/fragment/10/node = SubResource( 4 )
nodes/fragment/10/position = Vector2( 980, 200 )
nodes/fragment/11/node = SubResource( 5 )
nodes/fragment/11/position = Vector2( 240, 760 )
nodes/fragment/12/node = SubResource( 6 )
nodes/fragment/12/position = Vector2( 420, 800 )
nodes/fragment/13/node = SubResource( 7 )
nodes/fragment/13/position = Vector2( 620, 820 )
nodes/fragment/14/node = SubResource( 10 )
nodes/fragment/14/position = Vector2( 860, 780 )
nodes/fragment/16/node = SubResource( 11 )
nodes/fragment/16/position = Vector2( 300, 460 )
nodes/fragment/17/node = SubResource( 12 )
nodes/fragment/17/position = Vector2( 500, 500 )
nodes/fragment/18/node = SubResource( 15 )
nodes/fragment/18/position = Vector2( 700, 440 )
nodes/fragment/20/node = SubResource( 17 )
nodes/fragment/20/position = Vector2( 500, 680 )
nodes/fragment/21/node = SubResource( 18 )
nodes/fragment/21/position = Vector2( 700, 620 )
nodes/fragment/22/node = SubResource( 19 )
nodes/fragment/22/position = Vector2( 300, 640 )
nodes/fragment/23/node = SubResource( 20 )
nodes/fragment/23/position = Vector2( 940, 560 )
nodes/fragment/26/node = SubResource( 21 )
nodes/fragment/26/position = Vector2( 1220, 540 )
nodes/fragment/27/node = SubResource( 22 )
nodes/fragment/27/position = Vector2( 220, 300 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( -400, 140 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( -182.813, 233.279 )
nodes/fragment/30/node = SubResource( 28 )
nodes/fragment/30/position = Vector2( 940, 660 )
nodes/fragment/32/node = SubResource( 29 )
nodes/fragment/32/position = Vector2( 2280, 620 )
nodes/fragment/34/node = SubResource( 30 )
nodes/fragment/34/position = Vector2( 1120, 760 )
nodes/fragment/35/node = SubResource( 33 )
nodes/fragment/35/position = Vector2( 1340, 680 )
nodes/fragment/36/node = SubResource( 34 )
nodes/fragment/36/position = Vector2( 1720, 620 )
nodes/fragment/37/node = SubResource( 35 )
nodes/fragment/37/position = Vector2( 1520, 640 )
nodes/fragment/38/node = SubResource( 38 )
nodes/fragment/38/position = Vector2( 980, 380 )
nodes/fragment/39/node = SubResource( 41 )
nodes/fragment/39/position = Vector2( 1917.69, 609.366 )
nodes/fragment/41/node = SubResource( 42 )
nodes/fragment/41/position = Vector2( -240, 960 )
nodes/fragment/42/node = SubResource( 43 )
nodes/fragment/42/position = Vector2( -80, 940 )
nodes/fragment/43/node = SubResource( 44 )
nodes/fragment/43/position = Vector2( 100, 940 )
nodes/fragment/44/node = SubResource( 45 )
nodes/fragment/44/position = Vector2( 321.53, 1035.87 )
nodes/fragment/47/node = SubResource( 48 )
nodes/fragment/47/position = Vector2( 780, 960 )
nodes/fragment/48/node = SubResource( 49 )
nodes/fragment/48/position = Vector2( -80, 1140 )
nodes/fragment/49/node = SubResource( 52 )
nodes/fragment/49/position = Vector2( 680, 1200 )
nodes/fragment/50/node = SubResource( 54 )
nodes/fragment/50/position = Vector2( 2160, 980 )
nodes/fragment/51/node = SubResource( 57 )
nodes/fragment/51/position = Vector2( 1520, 840 )
nodes/fragment/52/node = SubResource( 58 )
nodes/fragment/52/position = Vector2( 1740, 820 )
nodes/fragment/53/node = SubResource( 59 )
nodes/fragment/53/position = Vector2( 2100, 740 )
nodes/fragment/54/node = SubResource( 60 )
nodes/fragment/54/position = Vector2( 1920, 820 )
nodes/fragment/55/node = SubResource( 61 )
nodes/fragment/55/position = Vector2( 1640, 740 )
nodes/fragment/56/node = SubResource( 62 )
nodes/fragment/56/position = Vector2( 2300, 840 )
nodes/fragment/57/node = SubResource( 65 )
nodes/fragment/57/position = Vector2( 1940, 920 )
nodes/fragment/58/node = SubResource( 66 )
nodes/fragment/58/position = Vector2( 2120, 880 )
nodes/fragment/59/node = SubResource( 67 )
nodes/fragment/59/position = Vector2( 2500, 980 )
nodes/fragment/60/node = SubResource( 69 )
nodes/fragment/60/position = Vector2( 800, 1140 )
nodes/fragment/61/node = SubResource( 70 )
nodes/fragment/61/position = Vector2( 2860, 960 )
nodes/fragment/62/node = SubResource( 71 )
nodes/fragment/62/position = Vector2( 2460, 1200 )
nodes/fragment/65/node = SubResource( 72 )
nodes/fragment/65/position = Vector2( 2760, 680 )
nodes/fragment/66/node = SubResource( 73 )
nodes/fragment/66/position = Vector2( 1720, 420 )
nodes/fragment/67/node = SubResource( 74 )
nodes/fragment/67/position = Vector2( 1900, 420 )
nodes/fragment/68/node = SubResource( 75 )
nodes/fragment/68/position = Vector2( 2080, 440 )
nodes/fragment/69/node = SubResource( 76 )
nodes/fragment/69/position = Vector2( 2260, 460 )
nodes/fragment/70/node = SubResource( 80 )
nodes/fragment/70/position = Vector2( 2480, 440 )
nodes/fragment/71/node = SubResource( 81 )
nodes/fragment/71/position = Vector2( 2660, 500 )
nodes/fragment/72/node = SubResource( 82 )
nodes/fragment/72/position = Vector2( 2820, 460 )
nodes/fragment/73/node = SubResource( 83 )
nodes/fragment/73/position = Vector2( 3020, 460 )
nodes/fragment/74/node = SubResource( 84 )
nodes/fragment/74/position = Vector2( 3200, 520 )
nodes/fragment/75/node = SubResource( 87 )
nodes/fragment/75/position = Vector2( 3380, 480 )
nodes/fragment/76/node = SubResource( 88 )
nodes/fragment/76/position = Vector2( 4020, 600 )
nodes/fragment/77/node = SubResource( 89 )
nodes/fragment/77/position = Vector2( 3560, 560 )
nodes/fragment/78/node = SubResource( 90 )
nodes/fragment/78/position = Vector2( 3740, 600 )
nodes/fragment/79/node = SubResource( 91 )
nodes/fragment/79/position = Vector2( 3920, 700 )
nodes/fragment/80/node = SubResource( 93 )
nodes/fragment/80/position = Vector2( 3520, 760 )
nodes/fragment/81/node = SubResource( 94 )
nodes/fragment/81/position = Vector2( 4300, 760 )
nodes/fragment/82/node = SubResource( 95 )
nodes/fragment/82/position = Vector2( 4060, 860 )
nodes/fragment/83/node = SubResource( 98 )
nodes/fragment/83/position = Vector2( 2260, 620 )
nodes/fragment/84/node = SubResource( 99 )
nodes/fragment/84/position = Vector2( 2700, 940 )
nodes/fragment/85/node = SubResource( 102 )
nodes/fragment/85/position = Vector2( 2520, 820 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 6, 0, 7, 0, 9, 0, 9, 0, 8, 0, 8, 0, 10, 0, 6, 0, 11, 0, 11, 0, 12, 0, 12, 0, 13, 0, 13, 0, 14, 0, 17, 0, 18, 0, 22, 0, 20, 0, 20, 0, 21, 0, 6, 0, 22, 0, 18, 0, 23, 0, 21, 0, 23, 1, 10, 0, 26, 0, 6, 0, 16, 0, 16, 0, 17, 0, 6, 0, 27, 1, 27, 0, 7, 0, 28, 0, 29, 0, 29, 0, 27, 0, 18, 1, 30, 0, 21, 1, 30, 1, 10, 1, 32, 2, 10, 0, 32, 1, 30, 0, 26, 1, 26, 0, 36, 0, 6, 0, 34, 0, 34, 0, 35, 0, 35, 0, 37, 1, 37, 0, 36, 1, 8, 0, 38, 0, 38, 1, 37, 0, 36, 0, 39, 0, 42, 0, 43, 0, 43, 0, 44, 0, 43, 0, 3, 0, 3, 0, 47, 0, 41, 0, 48, 0, 48, 0, 49, 0, 41, 0, 42, 0, 47, 0, 50, 0, 49, 0, 50, 1, 23, 0, 51, 0, 10, 1, 52, 1, 51, 0, 52, 0, 39, 0, 53, 0, 53, 0, 32, 0, 52, 0, 54, 1, 54, 0, 53, 1, 35, 0, 55, 0, 55, 0, 54, 0, 10, 1, 56, 0, 52, 0, 57, 0, 55, 0, 58, 0, 57, 0, 58, 1, 58, 0, 56, 1, 56, 0, 59, 0, 50, 0, 59, 1, 48, 0, 60, 0, 60, 0, 62, 0, 62, 0, 61, 1, 32, 0, 65, 1, 66, 0, 67, 0, 67, 0, 68, 0, 68, 0, 69, 0, 69, 0, 70, 0, 70, 0, 65, 0, 60, 0, 65, 2, 71, 0, 72, 0, 72, 0, 73, 0, 71, 0, 74, 1, 73, 0, 74, 0, 74, 0, 75, 0, 76, 0, 0, 0, 75, 0, 77, 0, 77, 0, 78, 0, 78, 0, 79, 1, 65, 0, 76, 0, 79, 0, 76, 1, 62, 0, 80, 0, 80, 0, 79, 0, 61, 0, 81, 0, 81, 0, 0, 1, 82, 0, 81, 2, 59, 0, 84, 1, 83, 0, 85, 0, 85, 0, 84, 0, 59, 0, 61, 0 )

[sub_resource type="ShaderMaterial" id=129]
shader = SubResource( 128 )
shader_param/stand = 1.0
shader_param/morph = 1.0
shader_param/alpha = true

[sub_resource type="Animation" id=130]
length = 4.5
tracks/0/type = "value"
tracks/0/path = NodePath("Drawing:rotation_degrees")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6, 1.1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -25, 0 ), Vector3( 0, 5, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Drawing:material/0:shader_param/stand")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.3, 1.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Drawing:material/0:shader_param/alpha")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 2.9, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, false, true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Drawing:material/0:shader_param/morph")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 3.7, 4.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 1.0 ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="Drawing" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 129 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.393043, -0.352656, 0.849206, 0, 0.923532, 0.383522, -0.91952, -0.150741, 0.362988, 3.21597, 0.763588, 1.26432 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 130 )
