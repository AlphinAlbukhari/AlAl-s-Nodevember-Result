[gd_scene load_steps=126 format=2]

[ext_resource path="res://addons/shaderV/uv/animated/swirlUV.gd" type="Script" id=1]
[ext_resource path="res://addons/shaderV/rgba/noise/worley2d.gd" type="Script" id=2]
[ext_resource path="res://icon.png" type="Texture" id=3]
[ext_resource path="res://60fps image sequence export.gd" type="Script" id=4]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 8, 4 )
subdivide_width = 64
subdivide_depth = 32

[sub_resource type="VisualShaderNodeVectorDecompose" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=4]

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0.235602, 0.47644 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = SubResource( 6 )

[sub_resource type="VisualShaderNodeScalarOp" id=8]
operator = 2

[sub_resource type="Gradient" id=9]
offsets = PoolRealArray( 0, 0.39267 )

[sub_resource type="GradientTexture" id=10]
gradient = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = SubResource( 10 )

[sub_resource type="VisualShaderNodeVectorOp" id=12]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="Gradient" id=14]
offsets = PoolRealArray( 0.02, 0.6 )

[sub_resource type="GradientTexture" id=15]
gradient = SubResource( 14 )

[sub_resource type="VisualShaderNodeTexture" id=16]
texture = SubResource( 15 )

[sub_resource type="OpenSimplexNoise" id=17]
period = 55.2
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=18]
seamless = true
noise = SubResource( 17 )

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = SubResource( 18 )

[sub_resource type="Gradient" id=20]
offsets = PoolRealArray( 0.141361, 0.581152, 0.77 )
colors = PoolColorArray( 0.251333, 0, 0.26, 1, 0.902344, 0.285507, 0.849334, 1, 0.996094, 0.498047, 0.953293, 1 )

[sub_resource type="GradientTexture" id=21]
gradient = SubResource( 20 )

[sub_resource type="VisualShaderNodeTexture" id=22]
texture = SubResource( 21 )

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 6

[sub_resource type="Gradient" id=24]
offsets = PoolRealArray( 0.507853, 0.518325, 0.759162, 0.764398 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=25]
gradient = SubResource( 24 )

[sub_resource type="VisualShaderNodeTexture" id=26]
texture = SubResource( 25 )

[sub_resource type="Gradient" id=27]
offsets = PoolRealArray( 0.335079, 0.34555, 0.628272, 0.643979 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=28]
gradient = SubResource( 27 )

[sub_resource type="VisualShaderNodeTexture" id=29]
texture = SubResource( 28 )

[sub_resource type="VisualShaderNodeScalarOp" id=30]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeCustom" id=31]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1 ]
script = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=32]
input_name = "view"

[sub_resource type="Gradient" id=33]
offsets = PoolRealArray( 0.0052356, 0.0628272, 0.120419, 0.198953 )
colors = PoolColorArray( 0.613281, 0.691833, 1, 1, 0.2623, 0.29584, 0.43, 1, 0.0793, 0.08944, 0.13, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=34]
gradient = SubResource( 33 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = SubResource( 34 )

[sub_resource type="VisualShaderNodeCustom" id=36]
default_input_values = [ 1, Vector3( 0.5, 0.5, 0 ), 2, 0.0, 3, 1.0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorInterp" id=37]

[sub_resource type="VisualShaderNodeVectorOp" id=38]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 10, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=39]
offsets = PoolRealArray( 0, 0.05 )

[sub_resource type="GradientTexture" id=40]
gradient = SubResource( 39 )

[sub_resource type="VisualShaderNodeTexture" id=41]
texture = SubResource( 40 )

[sub_resource type="VisualShaderNodeVectorOp" id=42]
operator = 2

[sub_resource type="Gradient" id=43]

[sub_resource type="GradientTexture" id=44]
gradient = SubResource( 43 )

[sub_resource type="VisualShaderNodeTexture" id=45]
output_port_for_preview = 0
texture = SubResource( 44 )

[sub_resource type="VisualShaderNodeScalarClamp" id=46]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.8 ]

[sub_resource type="Curve" id=47]
_data = [ Vector2( 0.161435, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.242152, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=48]
curve = SubResource( 47 )

[sub_resource type="VisualShaderNodeTexture" id=49]
texture = SubResource( 48 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=50]

[sub_resource type="Gradient" id=51]
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=52]
gradient = SubResource( 51 )

[sub_resource type="VisualShaderNodeTexture" id=53]
texture = SubResource( 52 )

[sub_resource type="VisualShaderNodeInput" id=54]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=55]

[sub_resource type="VisualShaderNodeVectorInterp" id=56]

[sub_resource type="VisualShaderNodeScalarFunc" id=57]
function = 15

[sub_resource type="VisualShaderNodeScalarClamp" id=58]

[sub_resource type="VisualShaderNodeTexture" id=59]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeInput" id=60]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=61]

[sub_resource type="VisualShaderNodeVectorCompose" id=62]

[sub_resource type="VisualShaderNodeVectorOp" id=63]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3.1, 6.1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=64]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.015, 3.4, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=65]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 1, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=66]
offsets = PoolRealArray( 0.31, 0.625 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=67]
gradient = SubResource( 66 )

[sub_resource type="VisualShaderNodeTexture" id=68]
texture = SubResource( 67 )

[sub_resource type="VisualShaderNodeScalarOp" id=69]
default_input_values = [ 0, 0.0, 1, 0.01 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=70]
output_port_for_preview = 0
operator = 2

[sub_resource type="Gradient" id=71]
offsets = PoolRealArray( 0.613426, 0.615741 )

[sub_resource type="GradientTexture" id=72]
gradient = SubResource( 71 )

[sub_resource type="VisualShaderNodeTexture" id=73]
texture = SubResource( 72 )

[sub_resource type="VisualShaderNodeScalarOp" id=74]
operator = 1

[sub_resource type="Gradient" id=75]
offsets = PoolRealArray( 0.624454, 0.746725 )
colors = PoolColorArray( 0, 0, 0, 1, 0.84375, 0.84375, 0.84375, 1 )

[sub_resource type="GradientTexture" id=76]
gradient = SubResource( 75 )

[sub_resource type="VisualShaderNodeTexture" id=77]
texture = SubResource( 76 )

[sub_resource type="VisualShaderNodeVectorOp" id=78]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=79]
uniform_name = "alpha"

[sub_resource type="VisualShaderNodeScalarUniform" id=80]
uniform_name = "shadow"

[sub_resource type="VisualShaderNodeScalarUniform" id=81]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeVectorOp" id=82]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=83]
uniform_name = "swirl"

[sub_resource type="VisualShaderNodeScalarUniform" id=84]
uniform_name = "time"

[sub_resource type="VisualShaderNodeInput" id=85]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=86]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=87]
default_input_values = [ 0, 0.3 ]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=88]

[sub_resource type="VisualShaderNodeScalarOp" id=89]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=90]
default_input_values = [ 0, 0.3 ]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=91]
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=92]
uniform_name = "rot"

[sub_resource type="VisualShaderNodeVectorInterp" id=93]

[sub_resource type="VisualShaderNodeInput" id=94]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=95]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=96]

[sub_resource type="VisualShaderNodeInput" id=97]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarFunc" id=98]
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=99]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -3, 1.75, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=100]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=101]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 1, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=102]
offsets = PoolRealArray( 0.162304, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=103]
gradient = SubResource( 102 )

[sub_resource type="VisualShaderNodeTexture" id=104]
texture = SubResource( 103 )

[sub_resource type="VisualShaderNodeVectorOp" id=105]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=106]

[sub_resource type="VisualShaderNodeVectorOp" id=107]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -2, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=108]

[sub_resource type="VisualShaderNodeVec3Uniform" id=109]
uniform_name = "pos"

[sub_resource type="VisualShaderNodeVectorDecompose" id=110]

[sub_resource type="VisualShaderNodeVectorCompose" id=111]

[sub_resource type="VisualShaderNodeScalarOp" id=112]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=113]
default_input_values = [ 0, 0.3 ]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=114]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=115]
default_input_values = [ 0, 0.3 ]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=116]
operator = 2

[sub_resource type="VisualShader" id=117]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_24;
uniform float rot;
uniform vec3 pos;
uniform sampler2D tex_frg_29;
uniform sampler2D tex_frg_37;
uniform float swirl;
uniform float time;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_20;
uniform sampler2D tex_frg_32;
uniform sampler2D tex_frg_44;
uniform sampler2D tex_frg_50;
uniform float shadow;
uniform sampler2D tex_frg_55;
uniform sampler2D tex_frg_39;
uniform sampler2D tex_frg_14;
uniform sampler2D tex_frg_16;
uniform sampler2D tex_frg_19;
uniform float alpha;
uniform sampler2D tex_frg_53;
uniform sampler2D tex_frg_22;
uniform sampler2D tex_frg_23;
uniform float ScalarUniform;
uniform sampler2D tex_frg_34;


// Worley2D

vec2 cellular2dNoiseFunc(vec2 P, float _jitter_w2d) {
	float K = 0.142857142857; // 1/7
	float Ko = 0.428571428571; // 3/7
	
	vec2 Pi = floor(P) - floor(floor(P) * (1.0 / 289.0)) * 289.0;
	vec2 Pf = fract(P);
	vec3 oi = vec3(-1.0, 0.0, 1.0);
	vec3 of = vec3(-0.5, 0.5, 1.5);
	vec3 px = (34.0*(Pi.x+oi)+1.0)*(Pi.x+oi)-floor((34.0*(Pi.x+oi)+1.0)*(Pi.x+oi)*(1.0/289.0))* 289.0;
	vec3 p = (34.0*(px.x+Pi.y+ oi)+1.0)*(px.x+Pi.y+ oi)-floor((34.0*(px.x+Pi.y+oi)+1.0)*(px.x+Pi.y+ oi)*(1.0/289.0))*289.0;
	vec3 ox = fract(p*K) - Ko;
	vec3 oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	vec3 dx = Pf.x + 0.5 + _jitter_w2d*ox;
	vec3 dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d1 = dx * dx + dy * dy;
	p = (34.0*(px.y+Pi.y+oi)+1.0)*(px.y+Pi.y+oi)-floor((34.0*(px.y+Pi.y+oi)+1.0)*(px.y+Pi.y+oi)*(1.0/289.0))*289.0;
	ox = fract(p*K) - Ko;
	oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	dx = Pf.x - 0.5 + _jitter_w2d*ox;
	dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d2 = dx * dx + dy * dy;
	p = (34.0*(px.z+Pi.y+oi)+1.0)*(px.z+Pi.y+oi)-floor((34.0*(px.z+Pi.y+oi)+1.0)*(px.z+Pi.y+oi)*(1.0/289.0))*289.0;
	ox = fract(p*K) - Ko;
	oy = (floor(p*K) - floor(floor(p*K) * (1.0 / 7.0)) * 7.0) * K - Ko;
	dx = Pf.x - 1.5 + _jitter_w2d*ox;
	dy = Pf.y - of + _jitter_w2d*oy;
	vec3 d3 = dx * dx + dy * dy;
	vec3 d1a = min(d1, d2);
	d2 = max(d1, d2);
	d2 = min(d2, d3);
	d1 = min(d1a, d2);
	d2 = max(d1a, d2);
	d1.xy = (d1.x < d1.y) ? d1.xy : d1.yx;
	d1.xz = (d1.x < d1.z) ? d1.xz : d1.zx;
	d1.yz = min(d1.yz, d2.yz);
	d1.y = min(d1.y, d1.z);
	d1.y = min(d1.y, d2.x);
	return sqrt(d1.xy);
}

// SwirlUV

vec2 swirlUVFunc(vec2 _uv_sw1rl, float _t1me_sw1rl, vec2 _p1vot_sw1rl, float _amount_sw1rl){
	float _rotation_index_sw1rl = _amount_sw1rl * length(_uv_sw1rl - _p1vot_sw1rl) * _t1me_sw1rl;
	_uv_sw1rl -= _p1vot_sw1rl;
	_uv_sw1rl *= mat2(vec2(cos(_rotation_index_sw1rl), - sin(_rotation_index_sw1rl)),
										vec2(sin(_rotation_index_sw1rl), cos(_rotation_index_sw1rl)));
	_uv_sw1rl += _p1vot_sw1rl;
	return _uv_sw1rl;
}


void vertex() {
// Input:22
	vec3 n_out22p0 = vec3(UV, 0.0);

// VectorOp:23
	vec3 n_in23p1 = vec3(2.00000, 1.00000, 0.00000);
	vec3 n_out23p0 = n_out22p0 * n_in23p1;

// VectorOp:25
	vec3 n_in25p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out25p0 = n_out23p0 - n_in25p1;

// VectorLen:26
	float n_out26p0 = length(n_out25p0);

// Texture:24
	vec4 tex_vtx_24_read = texture(tex_vtx_24, vec3(n_out26p0).xy);
	vec3 n_out24p0 = tex_vtx_24_read.rgb;
	float n_out24p1 = tex_vtx_24_read.a;

// VectorOp:27
	vec3 n_in27p1 = vec3(-2.00000, 0.00000, 0.00000);
	vec3 n_out27p0 = n_out24p0 * n_in27p1;

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// ScalarUniform:15
	float n_out15p0 = rot;

// ScalarFunc:8
	float n_out8p0 = cos(n_out15p0);

// ScalarOp:7
	float n_out7p0 = n_out3p0 * n_out8p0;

// ScalarFunc:10
	float n_out10p0 = sin(n_out15p0);

// ScalarOp:9
	float n_out9p0 = n_out3p1 * n_out10p0;

// ScalarOp:11
	float n_out11p0 = n_out7p0 + n_out9p0;

// ScalarFunc:13
	float n_out13p0 = cos(n_out15p0);

// ScalarOp:12
	float n_out12p0 = n_out3p1 * n_out13p0;

// ScalarFunc:6
	float n_out6p0 = sin(n_out15p0);

// ScalarOp:5
	float n_out5p0 = n_out6p0 * n_out3p0;

// ScalarOp:14
	float n_out14p0 = n_out12p0 - n_out5p0;

// VectorCompose:4
	vec3 n_out4p0 = vec3(n_out11p0, n_out14p0, n_out3p2);

// VectorOp:28
	vec3 n_out28p0 = n_out27p0 + n_out4p0;

// Input:17
	vec3 n_out17p0 = VERTEX;

// VectorUniform:29
	vec3 n_out29p0 = pos;

// VectorOp:21
	vec3 n_out21p0 = n_out17p0 + n_out29p0;

// Input:18
	vec3 n_out18p0 = vec3(UV, 0.0);

// VectorDecompose:19
	float n_out19p0 = n_out18p0.x;
	float n_out19p1 = n_out18p0.y;
	float n_out19p2 = n_out18p0.z;

// ScalarFunc:20
	float n_out20p0 = round(n_out19p0);

// VectorMix:16
	vec3 n_out16p0 = mix(n_out28p0, n_out21p0, vec3(n_out20p0));

// Output:0
	VERTEX = n_out16p0;

}

void fragment() {
// Input:28
	vec3 n_out28p0 = VIEW;

// VectorOp:31
	vec3 n_in31p1 = vec3(10.00000, 10.00000, 0.00000);
	vec3 n_out31p0 = n_out28p0 * n_in31p1;

// Worley2D:27
	vec3 n_in27p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in27p2 = 5.00000;
	float n_in27p3 = 1.00000;
	float n_out27p0;
	float n_out27p1;
	{
		vec2 n_out27p0n_out27p1 = cellular2dNoiseFunc((n_out31p0.xy+n_in27p1.xy)*n_in27p2, min(max(n_in27p3, 0.0), 1.0));
		n_out27p0 = n_out27p0n_out27p1.x;
		n_out27p1 = n_out27p0n_out27p1.y;
	}

// Texture:29
	vec4 tex_frg_29_read = texture(tex_frg_29, vec3(n_out27p0).xy);
	vec3 n_out29p0 = tex_frg_29_read.rgb;
	float n_out29p1 = tex_frg_29_read.a;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorOp:5
	vec3 n_in5p1 = vec3(2.00000, 1.00000, 0.00000);
	vec3 n_out5p0 = n_out4p0 * n_in5p1;

// VectorOp:12
	vec3 n_in12p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out12p0 = n_out5p0 - n_in12p1;

// VectorLen:13
	float n_out13p0 = length(n_out12p0);

// Texture:37
	vec4 tex_frg_37_read = texture(tex_frg_37, vec3(n_out13p0).xy);
	vec3 n_out37p0 = tex_frg_37_read.rgb;
	float n_out37p1 = tex_frg_37_read.a;

// VectorDecompose:38
	float n_out38p0 = n_out37p0.x;
	float n_out38p1 = n_out37p0.y;
	float n_out38p2 = n_out37p0.z;

// ScalarUniform:60
	float n_out60p0 = swirl;

// ScalarUniform:61
	float n_out61p0 = time;

// SwirlUV:3
	vec3 n_in3p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out3p0;
	{
		n_out3p0.xy = swirlUVFunc(n_out5p0.xy, n_out61p0, n_in3p1.xy, n_out60p0);
	}

// Input:7
	float n_out7p0 = TIME;

// VectorOp:17
	vec3 n_in17p1 = vec3(0.00000, -1.00000, 0.00000);
	vec3 n_out17p0 = vec3(n_out7p0) * n_in17p1;

// VectorOp:6
	vec3 n_out6p0 = n_out3p0 + n_out17p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out6p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Texture:20
	vec4 tex_frg_20_read = texture(tex_frg_20, n_out2p0.xy);
	vec3 n_out20p0 = tex_frg_20_read.rgb;
	float n_out20p1 = tex_frg_20_read.a;

// VectorOp:33
	vec3 n_out33p0 = vec3(n_out38p0) * n_out20p0;

// Texture:32
	vec4 tex_frg_32_read = texture(tex_frg_32, vec3(n_out38p0).xy);
	vec3 n_out32p0 = tex_frg_32_read.rgb;
	float n_out32p1 = tex_frg_32_read.a;

// VectorMix:30
	vec3 n_out30p0 = mix(n_out29p0, n_out33p0, n_out32p0);

// Input:45
	vec3 n_out45p0 = vec3(UV, 0.0);

// VectorDecompose:46
	float n_out46p0 = n_out45p0.x;
	float n_out46p1 = n_out45p0.y;
	float n_out46p2 = n_out45p0.z;

// VectorCompose:47
	float n_in47p2 = 0.00000;
	vec3 n_out47p0 = vec3(n_out46p1, n_out46p0, n_in47p2);

// VectorOp:48
	vec3 n_in48p1 = vec3(3.10000, 6.10000, 0.00000);
	vec3 n_out48p0 = n_out47p0 * n_in48p1;

// VectorOp:49
	vec3 n_in49p1 = vec3(1.01500, 3.40000, 0.00000);
	vec3 n_out49p0 = n_out48p0 - n_in49p1;

// Texture:44
	vec4 tex_frg_44_read = texture(tex_frg_44, n_out49p0.xy);
	vec3 n_out44p0 = tex_frg_44_read.rgb;
	float n_out44p1 = tex_frg_44_read.a;

// Texture:50
	vec4 tex_frg_50_read = texture(tex_frg_50, n_out44p0.xy);
	vec3 n_out50p0 = tex_frg_50_read.rgb;
	float n_out50p1 = tex_frg_50_read.a;

// Input:9
	vec3 n_out9p0 = vec3(UV, 0.0);

// VectorDecompose:10
	float n_out10p0 = n_out9p0.x;
	float n_out10p1 = n_out9p0.y;
	float n_out10p2 = n_out9p0.z;

// ScalarUniform:58
	float n_out58p0 = shadow;

// ScalarOp:54
	float n_out54p0 = n_out10p0 - n_out58p0;

// Texture:55
	vec4 tex_frg_55_read = texture(tex_frg_55, vec3(n_out54p0).xy);
	vec3 n_out55p0 = tex_frg_55_read.rgb;
	float n_out55p1 = tex_frg_55_read.a;

// VectorOp:56
	vec3 n_out56p0 = n_out50p0 * n_out55p0;

// ScalarFunc:42
	float n_out42p0 = round(n_out10p0);

// ScalarClamp:43
	float n_in43p1 = 0.00000;
	float n_in43p2 = 1.00000;
	float n_out43p0 = clamp(n_out42p0, n_in43p1, n_in43p2);

// VectorMix:41
	vec3 n_out41p0 = mix(n_out30p0, n_out56p0, vec3(n_out43p0));

// Texture:39
	vec4 tex_frg_39_read = texture(tex_frg_39, vec3(n_out38p0).xy);
	vec3 n_out39p0 = tex_frg_39_read.rgb;
	float n_out39p1 = tex_frg_39_read.a;

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, vec3(n_out13p0).xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// ScalarOp:15
	float n_out15p0 = dot(n_out14p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));

// Texture:16
	vec4 tex_frg_16_read = texture(tex_frg_16, vec3(n_out15p0).xy);
	vec3 n_out16p0 = tex_frg_16_read.rgb;
	float n_out16p1 = tex_frg_16_read.a;

// ScalarOp:18
	float n_in18p1 = 3.00000;
	float n_out18p0 = pow(dot(n_out16p0, vec3(0.333333, 0.333333, 0.333333)), n_in18p1);

// Texture:19
	vec4 tex_frg_19_read = texture(tex_frg_19, vec3(n_out18p0).xy);
	vec3 n_out19p0 = tex_frg_19_read.rgb;
	float n_out19p1 = tex_frg_19_read.a;

// ScalarUniform:57
	float n_out57p0 = alpha;

// ScalarOp:51
	float n_out51p0 = n_out10p0 - n_out57p0;

// Texture:53
	vec4 tex_frg_53_read = texture(tex_frg_53, vec3(n_out51p0).xy);
	vec3 n_out53p0 = tex_frg_53_read.rgb;
	float n_out53p1 = tex_frg_53_read.a;

// Texture:22
	vec4 tex_frg_22_read = texture(tex_frg_22, vec3(n_out10p0).xy);
	vec3 n_out22p0 = tex_frg_22_read.rgb;
	float n_out22p1 = tex_frg_22_read.a;

// Texture:23
	vec4 tex_frg_23_read = texture(tex_frg_23, vec3(n_out10p1).xy);
	vec3 n_out23p0 = tex_frg_23_read.rgb;
	float n_out23p1 = tex_frg_23_read.a;

// ScalarOp:24
	float n_out24p0 = dot(n_out22p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out23p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:52
	vec3 n_out52p0 = n_out53p0 * vec3(n_out24p0);

// ScalarUniform:59
	float n_out59p0 = ScalarUniform;

// ScalarClamp:36
	float n_in36p1 = 0.00000;
	float n_out36p0 = clamp(dot(n_out52p0, vec3(0.333333, 0.333333, 0.333333)), n_in36p1, n_out59p0);

// VectorOp:21
	vec3 n_out21p0 = max(n_out19p0, vec3(n_out36p0));

// VectorOp:40
	vec3 n_out40p0 = n_out39p0 + n_out21p0;

// Texture:34
	vec4 tex_frg_34_read = texture(tex_frg_34, n_out40p0.xy);
	vec3 n_out34p0 = tex_frg_34_read.rgb;
	float n_out34p1 = tex_frg_34_read.a;

// Output:0
	ALBEDO = n_out41p0;
	ALPHA = dot(n_out34p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 301.557, 48.2646 )
modes/cull = 2
modes/depth_draw = 3
flags/unshaded = true
nodes/vertex/0/position = Vector2( 1800, 20 )
nodes/vertex/2/node = SubResource( 97 )
nodes/vertex/2/position = Vector2( 0, 100 )
nodes/vertex/3/node = SubResource( 110 )
nodes/vertex/3/position = Vector2( 160, 100 )
nodes/vertex/4/node = SubResource( 111 )
nodes/vertex/4/position = Vector2( 900, 60 )
nodes/vertex/5/node = SubResource( 112 )
nodes/vertex/5/position = Vector2( 400, -20 )
nodes/vertex/6/node = SubResource( 113 )
nodes/vertex/6/position = Vector2( 140, -20 )
nodes/vertex/7/node = SubResource( 114 )
nodes/vertex/7/position = Vector2( 380, 140 )
nodes/vertex/8/node = SubResource( 115 )
nodes/vertex/8/position = Vector2( 40, 240 )
nodes/vertex/9/node = SubResource( 116 )
nodes/vertex/9/position = Vector2( 381.8, 309.134 )
nodes/vertex/10/node = SubResource( 87 )
nodes/vertex/10/position = Vector2( 40, 340 )
nodes/vertex/11/node = SubResource( 88 )
nodes/vertex/11/position = Vector2( 620, 240 )
nodes/vertex/12/node = SubResource( 89 )
nodes/vertex/12/position = Vector2( 400, -160 )
nodes/vertex/13/node = SubResource( 90 )
nodes/vertex/13/position = Vector2( 140, -120 )
nodes/vertex/14/node = SubResource( 91 )
nodes/vertex/14/position = Vector2( 623.663, -71.4269 )
nodes/vertex/15/node = SubResource( 92 )
nodes/vertex/15/position = Vector2( -220, 120 )
nodes/vertex/16/node = SubResource( 93 )
nodes/vertex/16/position = Vector2( 1620, 60 )
nodes/vertex/17/node = SubResource( 94 )
nodes/vertex/17/position = Vector2( 960, 140 )
nodes/vertex/18/node = SubResource( 95 )
nodes/vertex/18/position = Vector2( 940, 360 )
nodes/vertex/19/node = SubResource( 96 )
nodes/vertex/19/position = Vector2( 1080, 360 )
nodes/vertex/20/node = SubResource( 98 )
nodes/vertex/20/position = Vector2( 1280, 340 )
nodes/vertex/21/node = SubResource( 99 )
nodes/vertex/21/position = Vector2( 1151.59, 166.167 )
nodes/vertex/22/node = SubResource( 100 )
nodes/vertex/22/position = Vector2( 320, -260 )
nodes/vertex/23/node = SubResource( 101 )
nodes/vertex/23/position = Vector2( 460, -280 )
nodes/vertex/24/node = SubResource( 104 )
nodes/vertex/24/position = Vector2( 1020, -240 )
nodes/vertex/25/node = SubResource( 105 )
nodes/vertex/25/position = Vector2( 640, -260 )
nodes/vertex/26/node = SubResource( 106 )
nodes/vertex/26/position = Vector2( 820, -200 )
nodes/vertex/27/node = SubResource( 107 )
nodes/vertex/27/position = Vector2( 1218.88, -73.1508 )
nodes/vertex/28/node = SubResource( 108 )
nodes/vertex/28/position = Vector2( 1419.49, 21.1217 )
nodes/vertex/29/node = SubResource( 109 )
nodes/vertex/29/position = Vector2( 957.443, 225.456 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 2, 4, 2, 3, 0, 5, 1, 6, 0, 5, 0, 3, 0, 7, 0, 8, 0, 7, 1, 3, 1, 9, 0, 10, 0, 9, 1, 7, 0, 11, 0, 9, 0, 11, 1, 3, 1, 12, 0, 13, 0, 12, 1, 12, 0, 14, 0, 5, 0, 14, 1, 14, 0, 4, 1, 11, 0, 4, 0, 15, 0, 6, 0, 15, 0, 13, 0, 15, 0, 8, 0, 15, 0, 10, 0, 16, 0, 0, 0, 18, 0, 19, 0, 20, 0, 16, 2, 19, 0, 20, 0, 17, 0, 21, 0, 21, 0, 16, 1, 22, 0, 23, 0, 23, 0, 25, 0, 25, 0, 26, 0, 26, 0, 24, 0, 24, 0, 27, 0, 27, 0, 28, 0, 4, 0, 28, 1, 28, 0, 16, 0, 29, 0, 21, 1 )
nodes/fragment/0/position = Vector2( 2060, -60 )
nodes/fragment/2/node = SubResource( 19 )
nodes/fragment/2/position = Vector2( -80, 140 )
nodes/fragment/3/node = SubResource( 36 )
nodes/fragment/3/position = Vector2( -580, 220 )
nodes/fragment/4/node = SubResource( 54 )
nodes/fragment/4/position = Vector2( -1040, 280 )
nodes/fragment/5/node = SubResource( 65 )
nodes/fragment/5/position = Vector2( -820, 180 )
nodes/fragment/6/node = SubResource( 82 )
nodes/fragment/6/position = Vector2( -318.036, 244.537 )
nodes/fragment/7/node = SubResource( 85 )
nodes/fragment/7/position = Vector2( -800, 440 )
nodes/fragment/9/node = SubResource( 86 )
nodes/fragment/9/position = Vector2( -260, 480 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( -80, 480 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -580, 100 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -360, 40 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( -80, -60 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( 190.036, 63.6531 )
nodes/fragment/16/node = SubResource( 11 )
nodes/fragment/16/position = Vector2( 423.58, 56.9574 )
nodes/fragment/17/node = SubResource( 12 )
nodes/fragment/17/position = Vector2( -587.808, 433.668 )
nodes/fragment/18/node = SubResource( 13 )
nodes/fragment/18/position = Vector2( 600, 80 )
nodes/fragment/19/node = SubResource( 16 )
nodes/fragment/19/position = Vector2( 800.751, 102.907 )
nodes/fragment/20/node = SubResource( 22 )
nodes/fragment/20/position = Vector2( 800, -100 )
nodes/fragment/21/node = SubResource( 23 )
nodes/fragment/21/position = Vector2( 1200, 220 )
nodes/fragment/22/node = SubResource( 26 )
nodes/fragment/22/position = Vector2( 200, 560 )
nodes/fragment/23/node = SubResource( 29 )
nodes/fragment/23/position = Vector2( 200, 740 )
nodes/fragment/24/node = SubResource( 30 )
nodes/fragment/24/position = Vector2( 460, 640 )
nodes/fragment/27/node = SubResource( 31 )
nodes/fragment/27/position = Vector2( -80, -380 )
nodes/fragment/28/node = SubResource( 32 )
nodes/fragment/28/position = Vector2( -560, -360 )
nodes/fragment/29/node = SubResource( 35 )
nodes/fragment/29/position = Vector2( 200, -380 )
nodes/fragment/30/node = SubResource( 37 )
nodes/fragment/30/position = Vector2( 1220, -100 )
nodes/fragment/31/node = SubResource( 38 )
nodes/fragment/31/position = Vector2( -336.879, -335.153 )
nodes/fragment/32/node = SubResource( 41 )
nodes/fragment/32/position = Vector2( 540, -160 )
nodes/fragment/33/node = SubResource( 42 )
nodes/fragment/33/position = Vector2( 1020, -80 )
nodes/fragment/34/node = SubResource( 45 )
nodes/fragment/34/position = Vector2( 1520, 60 )
nodes/fragment/36/node = SubResource( 46 )
nodes/fragment/36/position = Vector2( 980, 360 )
nodes/fragment/37/node = SubResource( 49 )
nodes/fragment/37/position = Vector2( -80, -220 )
nodes/fragment/38/node = SubResource( 50 )
nodes/fragment/38/position = Vector2( 291.539, -80.5325 )
nodes/fragment/39/node = SubResource( 53 )
nodes/fragment/39/position = Vector2( 1000, 20 )
nodes/fragment/40/node = SubResource( 55 )
nodes/fragment/40/position = Vector2( 1340, 60 )
nodes/fragment/41/node = SubResource( 56 )
nodes/fragment/41/position = Vector2( 1880, -100 )
nodes/fragment/42/node = SubResource( 57 )
nodes/fragment/42/position = Vector2( 620, 220 )
nodes/fragment/43/node = SubResource( 58 )
nodes/fragment/43/position = Vector2( 1180, 20 )
nodes/fragment/44/node = SubResource( 59 )
nodes/fragment/44/position = Vector2( 1300, -380 )
nodes/fragment/45/node = SubResource( 60 )
nodes/fragment/45/position = Vector2( 380, -320 )
nodes/fragment/46/node = SubResource( 61 )
nodes/fragment/46/position = Vector2( 540, -340 )
nodes/fragment/47/node = SubResource( 62 )
nodes/fragment/47/position = Vector2( 740, -320 )
nodes/fragment/48/node = SubResource( 63 )
nodes/fragment/48/position = Vector2( 940, -320 )
nodes/fragment/49/node = SubResource( 64 )
nodes/fragment/49/position = Vector2( 1120, -300 )
nodes/fragment/50/node = SubResource( 68 )
nodes/fragment/50/position = Vector2( 1500, -260 )
nodes/fragment/51/node = SubResource( 69 )
nodes/fragment/51/position = Vector2( 200, 440 )
nodes/fragment/52/node = SubResource( 70 )
nodes/fragment/52/position = Vector2( 780, 340 )
nodes/fragment/53/node = SubResource( 73 )
nodes/fragment/53/position = Vector2( 440, 440 )
nodes/fragment/54/node = SubResource( 74 )
nodes/fragment/54/position = Vector2( 200, 320 )
nodes/fragment/55/node = SubResource( 77 )
nodes/fragment/55/position = Vector2( 440, 260 )
nodes/fragment/56/node = SubResource( 78 )
nodes/fragment/56/position = Vector2( 1700, -140 )
nodes/fragment/57/node = SubResource( 79 )
nodes/fragment/57/position = Vector2( -32.8233, 566.466 )
nodes/fragment/58/node = SubResource( 80 )
nodes/fragment/58/position = Vector2( -60, 380 )
nodes/fragment/59/node = SubResource( 81 )
nodes/fragment/59/position = Vector2( 800, 540 )
nodes/fragment/60/node = SubResource( 83 )
nodes/fragment/60/position = Vector2( -820, 300 )
nodes/fragment/61/node = SubResource( 84 )
nodes/fragment/61/position = Vector2( -820, 360 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 2, 0, 5, 0, 3, 0, 3, 0, 6, 0, 9, 0, 10, 0, 12, 0, 13, 0, 13, 0, 14, 0, 5, 0, 12, 0, 14, 0, 15, 0, 2, 0, 15, 1, 15, 0, 16, 0, 17, 0, 6, 1, 16, 0, 18, 0, 18, 0, 19, 0, 2, 0, 20, 0, 10, 0, 22, 0, 10, 1, 23, 0, 22, 0, 24, 0, 23, 0, 24, 1, 29, 0, 30, 0, 28, 0, 31, 0, 31, 0, 27, 0, 20, 0, 33, 1, 33, 0, 30, 1, 32, 0, 30, 2, 19, 0, 21, 0, 36, 0, 21, 1, 34, 0, 0, 1, 27, 0, 29, 0, 13, 0, 37, 0, 37, 0, 38, 0, 38, 0, 32, 0, 38, 0, 33, 0, 38, 0, 39, 0, 39, 0, 40, 0, 21, 0, 40, 1, 40, 0, 34, 0, 10, 0, 42, 0, 42, 0, 43, 0, 43, 0, 41, 2, 41, 0, 0, 0, 45, 0, 46, 0, 46, 1, 47, 0, 46, 0, 47, 1, 47, 0, 48, 0, 48, 0, 49, 0, 49, 0, 44, 0, 44, 0, 50, 0, 30, 0, 41, 0, 10, 0, 51, 0, 24, 0, 52, 1, 51, 0, 53, 0, 52, 0, 36, 0, 53, 0, 52, 0, 10, 0, 54, 0, 54, 0, 55, 0, 50, 0, 56, 0, 55, 0, 56, 1, 56, 0, 41, 1, 57, 0, 51, 1, 58, 0, 54, 1, 59, 0, 36, 2, 60, 0, 3, 2, 61, 0, 3, 3, 7, 0, 17, 0 )

[sub_resource type="ShaderMaterial" id=118]
shader = SubResource( 117 )
shader_param/rot = 1.57
shader_param/pos = Vector3( -0.911, 1.576, 0 )
shader_param/swirl = 6.0
shader_param/time = -1.5
shader_param/shadow = -0.272
shader_param/alpha = -0.348
shader_param/ScalarUniform = 0.0

[sub_resource type="Animation" id=119]
length = 4.9
tracks/0/type = "value"
tracks/0/path = NodePath("MeshInstance:material/0:shader_param/pos")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9, 2.1, 2.3, 2.5, 2.7, 2.9, 3.1, 3.3, 3.5, 3.7, 4.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.615572, 1.36604 ),
"update": 0,
"values": [ Vector3( -4.1, 1.75, 0 ), Vector3( -4.1, 1.75, 0 ), Vector3( -3.839, 1.75, 0 ), Vector3( -3.638, 1.75, 0 ), Vector3( -3.516, 1.75, 0 ), Vector3( -3.412, 1.75, 0 ), Vector3( -3.234, 1.75, 0 ), Vector3( -3.119, 1.75, 0 ), Vector3( -2.915, 1.75, 0 ), Vector3( -2.786, 1.75, 0 ), Vector3( -2.662, 1.75, 0 ), Vector3( -2.528, 1.75, 0 ), Vector3( -2.393, 1.75, 0 ), Vector3( -2.29, 1.75, 0 ), Vector3( -2.143, 1.75, 0 ), Vector3( -1.997, 1.75, 0 ), Vector3( -0.911, 1.576, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("MeshInstance:material/0:shader_param/shadow")
tracks/1/interp = 2
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.9, 1, 1.1, 1.3, 1.5, 1.7, 1.9, 2.1, 2.3, 2.5, 2.7, 2.9, 3.1, 3.3, 3.5, 3.7, 4.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.078, 0.078, 0.113, 0.096, 0.075, 0.062, 0.049, 0.026, 0.014, -0.011, -0.028, -0.044, -0.061, -0.078, -0.092, -0.111, -0.129, -0.272 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("MeshInstance:material/0:shader_param/alpha")
tracks/2/interp = 2
tracks/2/loop_wrap = false
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9, 2.1, 2.3, 2.5, 2.7, 2.9, 3.1, 3.3, 3.5, 3.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.615572 ),
"update": 0,
"values": [ 0.151, 0.151, 0.11, 0.088, 0.075, 0.058, 0.034, 0.023, -0.006, -0.024, -0.034, -0.051, -0.069, -0.083, -0.26, -0.348 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("MeshInstance:material/0:shader_param/ScalarUniform")
tracks/3/interp = 1
tracks/3/loop_wrap = false
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.9, 3.9, 4.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 1.0, 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("MeshInstance:rotation_degrees")
tracks/4/interp = 2
tracks/4/loop_wrap = false
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1.2, 4.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -6.966, 0 ), Vector3( 0, 0, 0 ), Vector3( 0, -6.966, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("MeshInstance:material/0:shader_param/toki")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 4.9 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, -4.9 ]
}

[sub_resource type="Animation" id=120]

[sub_resource type="Environment" id=121]
background_mode = 1
background_color = Color( 0.0117647, 0.0352941, 0.0470588, 1 )

[node name="Print portal" type="Spatial"]
script = ExtResource( 4 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 0.992618, 0, -0.12128, 0, 1, 0, 0.12128, 0, 0.992618, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 118 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 119 )
"anims/New Anim (2)" = SubResource( 120 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 121 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.536168, -0.230829, 0.811938, 0.0094351, 0.963463, 0.267676, -0.844059, -0.135858, 0.518755, 1.7799, 3.09205, 2.38908 )

[node name="just some clarification" type="Label" parent="."]
visible = false
margin_right = 40.0
margin_bottom = 14.0
text = "Yeah I know this is not 100% procedural since the Godot icon is not made procedurally. It's still 100% Godot though.
I also make the shadow manually because that time I don't know about vertex-based gradient or whatever, I know but just not sure and not fully remember
how to do that. That means, I've learned a lot from this challenge"
__meta__ = {
"_edit_use_anchors_": false
}
