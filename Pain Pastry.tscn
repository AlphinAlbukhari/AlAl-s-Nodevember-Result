[gd_scene load_steps=152 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="ProceduralSky" id=1]

[sub_resource type="Environment" id=2]
background_mode = 3
background_sky = SubResource( 1 )
background_color = Color( 0.137255, 0.105882, 0.105882, 1 )

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0.253394, 0.542986, 0.814815, 0.825708 )
colors = PoolColorArray( 1, 1, 1, 1, 0.0585938, 0.0585938, 0.0585938, 1, 0.0546875, 0.0546875, 0.0546875, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = SubResource( 6 )

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0.443439, 0.455338, 0.546841, 0.561086 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = SubResource( 9 )

[sub_resource type="VisualShaderNodeScalarOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeBooleanConstant" id=12]
constant = true

[sub_resource type="VisualShaderNodeScalarOp" id=13]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeVectorFunc" id=14]
output_port_for_preview = 0
function = 34

[sub_resource type="VisualShaderNodeVectorOp" id=15]

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeScalarInterp" id=19]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeBooleanConstant" id=20]

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=22]

[sub_resource type="Gradient" id=23]
offsets = PoolRealArray( 0.0859729, 0.171946 )

[sub_resource type="GradientTexture" id=24]
gradient = SubResource( 23 )

[sub_resource type="VisualShaderNodeTexture" id=25]
texture = SubResource( 24 )

[sub_resource type="VisualShaderNodeVectorInterp" id=26]

[sub_resource type="Gradient" id=27]
colors = PoolColorArray( 0, 0, 0, 1, 0.339844, 0.0908103, 0.0650482, 1 )

[sub_resource type="GradientTexture" id=28]
gradient = SubResource( 27 )

[sub_resource type="VisualShaderNodeTexture" id=29]
texture = SubResource( 28 )

[sub_resource type="Gradient" id=30]
colors = PoolColorArray( 0.15625, 0.136719, 0, 1, 0.9375, 0.887403, 0.560303, 1 )

[sub_resource type="GradientTexture" id=31]
gradient = SubResource( 30 )

[sub_resource type="VisualShaderNodeTexture" id=32]
texture = SubResource( 31 )

[sub_resource type="OpenSimplexNoise" id=33]
period = 13.2
persistence = 0.0

[sub_resource type="NoiseTexture" id=34]
as_normalmap = true
noise = SubResource( 33 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = SubResource( 34 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=36]

[sub_resource type="Gradient" id=37]
colors = PoolColorArray( 0, 0, 0, 1, 0.988281, 0.988281, 0.988281, 1 )

[sub_resource type="GradientTexture" id=38]
gradient = SubResource( 37 )

[sub_resource type="VisualShaderNodeTexture" id=39]
texture = SubResource( 38 )

[sub_resource type="NoiseTexture" id=40]
bump_strength = 21.8
noise = SubResource( 33 )

[sub_resource type="VisualShaderNodeTexture" id=41]
output_port_for_preview = 0
texture = SubResource( 40 )

[sub_resource type="Gradient" id=42]
offsets = PoolRealArray( 0.352941, 0.846154 )
colors = PoolColorArray( 1, 0.0273438, 0.984802, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=43]
gradient = SubResource( 42 )

[sub_resource type="VisualShaderNodeTexture" id=44]
texture = SubResource( 43 )

[sub_resource type="VisualShaderNodeVectorOp" id=45]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=46]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=47]
operator = 2

[sub_resource type="Gradient" id=48]
offsets = PoolRealArray( 0, 0.21267 )

[sub_resource type="GradientTexture" id=49]
gradient = SubResource( 48 )

[sub_resource type="VisualShaderNodeTexture" id=50]
texture = SubResource( 49 )

[sub_resource type="VisualShaderNodeInput" id=51]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=52]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeBooleanUniform" id=53]
uniform_name = "wet"

[sub_resource type="Gradient" id=54]
offsets = PoolRealArray( 0.723769, 0.736617, 0.877193, 0.877944 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=55]
gradient = SubResource( 54 )

[sub_resource type="VisualShaderNodeTexture" id=56]
texture = SubResource( 55 )

[sub_resource type="VisualShaderNodeBooleanUniform" id=57]
uniform_name = "split"

[sub_resource type="VisualShaderNodeVectorOp" id=58]

[sub_resource type="VisualShaderNodeVec3Uniform" id=59]
uniform_name = "wetness"

[sub_resource type="Gradient" id=60]
offsets = PoolRealArray( 0.714932, 0.728507, 0.914027, 1 )
colors = PoolColorArray( 0, 0, 0, 0, 0, 0.929688, 1, 1, 0, 0, 0, 1, 0, 0.257813, 0.251674, 1 )

[sub_resource type="GradientTexture" id=61]
gradient = SubResource( 60 )

[sub_resource type="VisualShaderNodeTexture" id=62]
texture = SubResource( 61 )

[sub_resource type="VisualShaderNodeInput" id=63]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=64]

[sub_resource type="VisualShaderNodeVectorInterp" id=65]

[sub_resource type="VisualShaderNodeInput" id=66]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=67]

[sub_resource type="VisualShaderNodeVectorFunc" id=68]
function = 6

[sub_resource type="OpenSimplexNoise" id=69]

[sub_resource type="NoiseTexture" id=70]
seamless = true
noise = SubResource( 69 )

[sub_resource type="VisualShaderNodeTexture" id=71]
texture = SubResource( 70 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=72]

[sub_resource type="Gradient" id=73]
offsets = PoolRealArray( 0, 0.0226244 )

[sub_resource type="GradientTexture" id=74]
gradient = SubResource( 73 )

[sub_resource type="VisualShaderNodeTexture" id=75]
texture = SubResource( 74 )

[sub_resource type="Gradient" id=76]
offsets = PoolRealArray( 0, 0.253394 )
colors = PoolColorArray( 1, 1, 1, 1, 0.46875, 0.46875, 0.46875, 1 )

[sub_resource type="GradientTexture" id=77]
gradient = SubResource( 76 )

[sub_resource type="VisualShaderNodeTexture" id=78]
texture = SubResource( 77 )

[sub_resource type="VisualShaderNodeScalarOp" id=79]
operator = 6

[sub_resource type="VisualShaderNodeVectorOp" id=80]
operator = 2

[sub_resource type="VisualShaderNodeScalarInterp" id=81]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 1.0 ]

[sub_resource type="VisualShaderNodeBooleanUniform" id=82]
uniform_name = "alpha"

[sub_resource type="VisualShaderNodeVectorOp" id=83]
operator = 2

[sub_resource type="OpenSimplexNoise" id=84]
period = 10.1

[sub_resource type="NoiseTexture" id=85]
seamless = true
noise = SubResource( 84 )

[sub_resource type="VisualShaderNodeTexture" id=86]
texture = SubResource( 85 )

[sub_resource type="Gradient" id=87]
offsets = PoolRealArray( 0.700214, 0.706638, 0.721627, 0.72591 )
colors = PoolColorArray( 0, 0, 0, 1, 0.273438, 0.273438, 0.273438, 1, 0.394531, 0.394531, 0.394531, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=88]
gradient = SubResource( 87 )

[sub_resource type="VisualShaderNodeTexture" id=89]
texture = SubResource( 88 )

[sub_resource type="Gradient" id=90]
offsets = PoolRealArray( 0, 0.0628931, 1 )
colors = PoolColorArray( 0.640625, 0.640625, 0.640625, 1, 0.663227, 0.663227, 0.663227, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=91]
gradient = SubResource( 90 )

[sub_resource type="VisualShaderNodeTexture" id=92]
texture = SubResource( 91 )

[sub_resource type="VisualShaderNodeInput" id=93]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=94]

[sub_resource type="VisualShaderNodeScalarOp" id=95]
default_input_values = [ 0, 0.0, 1, 0.25 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=96]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 5, 3, 5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=97]

[sub_resource type="Gradient" id=98]
offsets = PoolRealArray( 0.836257, 0.877193 )

[sub_resource type="GradientTexture" id=99]
gradient = SubResource( 98 )

[sub_resource type="VisualShaderNodeTexture" id=100]
texture = SubResource( 99 )

[sub_resource type="VisualShaderNodeVectorOp" id=101]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=102]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 3, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=103]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=104]
input_name = "normal"

[sub_resource type="Curve" id=105]
min_value = -5.0
_data = [ Vector2( 0.703057, 1 ), 0.0, -462.166, 0, 1, Vector2( 0.71179, -3.03636 ), -462.166, 0.0, 1, 0, Vector2( 0.978166, -3.03636 ), 0.0, 0.0, 0, 0, Vector2( 1, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=106]
curve = SubResource( 105 )

[sub_resource type="VisualShaderNodeTexture" id=107]
texture = SubResource( 106 )

[sub_resource type="VisualShaderNodeVectorOp" id=108]

[sub_resource type="VisualShaderNodeInput" id=109]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=110]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=111]

[sub_resource type="VisualShaderNodeScalarOp" id=112]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=113]
texture = SubResource( 88 )

[sub_resource type="VisualShaderNodeVectorOp" id=114]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -3, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=115]

[sub_resource type="VisualShaderNodeInput" id=116]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=117]

[sub_resource type="VisualShaderNodeVectorOp" id=118]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.4, 2.2, 1.25 ) ]
operator = 7

[sub_resource type="VisualShaderNodeVectorOp" id=119]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.4, -0.1, -1.25 ) ]
operator = 6

[sub_resource type="VisualShaderNodeVectorOp" id=120]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.8, 1.2, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=121]

[sub_resource type="VisualShaderNodeInput" id=122]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=123]

[sub_resource type="VisualShaderNodeInput" id=124]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=125]

[sub_resource type="Gradient" id=126]
offsets = PoolRealArray( 0.466667, 0.488889 )

[sub_resource type="GradientTexture" id=127]
gradient = SubResource( 126 )

[sub_resource type="VisualShaderNodeTexture" id=128]
texture = SubResource( 127 )

[sub_resource type="VisualShaderNodeVectorOp" id=129]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=130]
texture = SubResource( 70 )

[sub_resource type="VisualShaderNodeVectorOp" id=131]

[sub_resource type="VisualShaderNodeScalarOp" id=132]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=133]
uniform_name = "fall"

[sub_resource type="Gradient" id=134]
offsets = PoolRealArray( 0.883041, 0.906433 )

[sub_resource type="GradientTexture" id=135]
gradient = SubResource( 134 )

[sub_resource type="VisualShaderNodeTexture" id=136]
texture = SubResource( 135 )

[sub_resource type="VisualShaderNodeVec3Uniform" id=137]
uniform_name = "pos"

[sub_resource type="VisualShaderNodeVectorOp" id=138]

[sub_resource type="VisualShaderNodeVectorInterp" id=139]

[sub_resource type="VisualShaderNodeScalarUniform" id=140]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeVectorOp" id=141]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.9, 1.9, 1.9 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=142]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -1.5, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=143]

[sub_resource type="VisualShaderNodeInput" id=144]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=145]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=146]
input_name = "vertex"

[sub_resource type="VisualShader" id=147]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_4;
uniform sampler2D tex_vtx_17;
uniform sampler2D tex_vtx_22;
uniform sampler2D tex_vtx_36;
uniform sampler2D tex_vtx_34;
uniform vec3 fall;
uniform vec3 pos;
uniform sampler2D tex_vtx_12;
uniform float morph;
uniform sampler2D tex_frg_51;
uniform sampler2D tex_frg_52;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_28;
uniform sampler2D tex_frg_27;
uniform sampler2D tex_frg_29;
uniform sampler2D tex_frg_30;
uniform sampler2D tex_frg_31;
uniform sampler2D tex_frg_32;
uniform sampler2D tex_frg_36;
uniform sampler2D tex_frg_25;
uniform vec3 wetness;
uniform sampler2D tex_frg_12;
uniform bool wet;
uniform sampler2D tex_frg_43;
uniform sampler2D tex_frg_58;
uniform sampler2D tex_frg_60;
uniform bool split;
uniform sampler2D tex_frg_13;
uniform sampler2D tex_frg_4;
uniform bool alpha;



void vertex() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Texture:4
	vec4 tex_vtx_4_read = texture(tex_vtx_4, vec3(n_out3p1).xy);
	vec3 n_out4p0 = tex_vtx_4_read.rgb;
	float n_out4p1 = tex_vtx_4_read.a;

// VectorOp:5
	vec3 n_in5p1 = vec3(0.00000, -1.50000, 0.00000);
	vec3 n_out5p0 = n_out4p0 * n_in5p1;

// Input:7
	vec3 n_out7p0 = VERTEX;

// VectorOp:6
	vec3 n_out6p0 = n_out5p0 + n_out7p0;

// VectorOp:8
	vec3 n_in8p1 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_out8p0 = n_out6p0 + n_in8p1;

// VectorOp:13
	vec3 n_in13p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out13p0 = n_out8p0 * n_in13p1;

// Input:19
	vec3 n_out19p0 = vec3(UV, 0.0);

// VectorDecompose:20
	float n_out20p0 = n_out19p0.x;
	float n_out20p1 = n_out19p0.y;
	float n_out20p2 = n_out19p0.z;

// Texture:17
	vec4 tex_vtx_17_read = texture(tex_vtx_17, vec3(n_out20p1).xy);
	vec3 n_out17p0 = tex_vtx_17_read.rgb;
	float n_out17p1 = tex_vtx_17_read.a;

// ScalarOp:21
	float n_in21p1 = 1.00000;
	float n_out21p0 = dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333)) * n_in21p1;

// Input:16
	vec3 n_out16p0 = NORMAL;

// VectorOp:15
	vec3 n_out15p0 = vec3(n_out21p0) * n_out16p0;

// VectorOp:18
	vec3 n_out18p0 = n_out13p0 + n_out15p0;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorDecompose:26
	float n_out26p0 = n_out25p0.x;
	float n_out26p1 = n_out25p0.y;
	float n_out26p2 = n_out25p0.z;

// Texture:22
	vec4 tex_vtx_22_read = texture(tex_vtx_22, vec3(n_out26p1).xy);
	vec3 n_out22p0 = tex_vtx_22_read.rgb;
	float n_out22p1 = tex_vtx_22_read.a;

// VectorOp:23
	vec3 n_in23p1 = vec3(0.00000, -3.00000, 0.00000);
	vec3 n_out23p0 = n_out22p0 * n_in23p1;

// VectorOp:24
	vec3 n_out24p0 = n_out18p0 + n_out23p0;

// VectorOp:27
	vec3 n_in27p1 = vec3(0.40000, 2.20000, 1.25000);
	vec3 n_out27p0 = min(n_out24p0, n_in27p1);

// VectorOp:28
	vec3 n_in28p1 = vec3(-0.40000, -0.10000, -1.25000);
	vec3 n_out28p0 = max(n_out27p0, n_in28p1);

// VectorOp:29
	vec3 n_in29p1 = vec3(0.80000, 1.20000, 1.00000);
	vec3 n_out29p0 = n_out28p0 * n_in29p1;

// Input:32
	vec3 n_out32p0 = vec3(UV, 0.0);

// Texture:36
	vec4 tex_vtx_36_read = texture(tex_vtx_36, UV.xy);
	vec3 n_out36p0 = tex_vtx_36_read.rgb;
	float n_out36p1 = tex_vtx_36_read.a;

// ScalarOp:38
	float n_in38p1 = 0.10000;
	float n_out38p0 = dot(n_out36p0, vec3(0.333333, 0.333333, 0.333333)) * n_in38p1;

// VectorOp:37
	vec3 n_out37p0 = n_out32p0 + vec3(n_out38p0);

// VectorDecompose:33
	float n_out33p0 = n_out37p0.x;
	float n_out33p1 = n_out37p0.y;
	float n_out33p2 = n_out37p0.z;

// Texture:34
	vec4 tex_vtx_34_read = texture(tex_vtx_34, vec3(n_out33p1).xy);
	vec3 n_out34p0 = tex_vtx_34_read.rgb;
	float n_out34p1 = tex_vtx_34_read.a;

// VectorUniform:39
	vec3 n_out39p0 = fall;

// VectorOp:35
	vec3 n_out35p0 = n_out34p0 * n_out39p0;

// VectorOp:31
	vec3 n_out31p0 = n_out29p0 + n_out35p0;

// VectorUniform:40
	vec3 n_out40p0 = pos;

// VectorOp:41
	vec3 n_out41p0 = n_out31p0 + n_out40p0;

// VectorOp:10
	vec3 n_in10p1 = vec3(5.00000, 3.00000, 5.00000);
	vec3 n_out10p0 = n_out6p0 * n_in10p1;

// Texture:12
	vec4 tex_vtx_12_read = texture(tex_vtx_12, vec3(n_out20p1).xy);
	vec3 n_out12p0 = tex_vtx_12_read.rgb;
	float n_out12p1 = tex_vtx_12_read.a;

// VectorMix:11
	vec3 n_out11p0 = mix(n_out41p0, n_out10p0, n_out12p0);

// VectorOp:14
	vec3 n_in14p1 = vec3(0.00000, 3.00000, 0.00000);
	vec3 n_out14p0 = n_out11p0 + n_in14p1;

// Input:30
	vec3 n_out30p0 = VERTEX;

// VectorOp:44
	vec3 n_in44p1 = vec3(1.90000, 1.90000, 1.90000);
	vec3 n_out44p0 = n_out30p0 * n_in44p1;

// ScalarUniform:43
	float n_out43p0 = morph;

// VectorMix:42
	vec3 n_out42p0 = mix(n_out14p0, n_out44p0, vec3(n_out43p0));

// Output:0
	VERTEX = n_out42p0;
	COLOR.rgb = n_out30p0;

}

void fragment() {
// Input:47
	vec3 n_out47p0 = COLOR.rgb;

// VectorDecompose:50
	float n_out50p0 = n_out47p0.x;
	float n_out50p1 = n_out47p0.y;
	float n_out50p2 = n_out47p0.z;

// Texture:51
	vec4 tex_frg_51_read = texture(tex_frg_51, vec3(n_out50p0).xy);
	vec3 n_out51p0 = tex_frg_51_read.rgb;
	float n_out51p1 = tex_frg_51_read.a;

// VectorFunc:49
	vec3 n_out49p0 = abs(n_out47p0);

// VectorDecompose:48
	float n_out48p0 = n_out49p0.x;
	float n_out48p1 = n_out49p0.y;
	float n_out48p2 = n_out49p0.z;

// Texture:52
	vec4 tex_frg_52_read = texture(tex_frg_52, vec3(n_out48p0).xy);
	vec3 n_out52p0 = tex_frg_52_read.rgb;
	float n_out52p1 = tex_frg_52_read.a;

// ScalarOp:53
	float n_out53p0 = max(dot(n_out51p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out52p0, vec3(0.333333, 0.333333, 0.333333)));

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, UV.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Texture:28
	vec4 tex_frg_28_read = texture(tex_frg_28, n_out5p0.xy);
	vec3 n_out28p0 = tex_frg_28_read.rgb;
	float n_out28p1 = tex_frg_28_read.a;

// Input:23
	vec3 n_out23p0 = COLOR.rgb;

// VectorDecompose:24
	float n_out24p0 = n_out23p0.x;
	float n_out24p1 = n_out23p0.y;
	float n_out24p2 = n_out23p0.z;

// Texture:27
	vec4 tex_frg_27_read = texture(tex_frg_27, vec3(n_out24p0).xy);
	vec3 n_out27p0 = tex_frg_27_read.rgb;
	float n_out27p1 = tex_frg_27_read.a;

// Input:37
	vec3 n_out37p0 = vec3(UV, 0.0);

// VectorOp:38
	vec3 n_in38p1 = vec3(1.50000, 1.00000, 0.00000);
	vec3 n_out38p0 = n_out37p0 * n_in38p1;

// Texture:29
	vec4 tex_frg_29_read = texture(tex_frg_29, n_out38p0.xy);
	vec3 n_out29p0 = tex_frg_29_read.rgb;
	float n_out29p1 = tex_frg_29_read.a;

// Texture:30
	vec4 tex_frg_30_read = texture(tex_frg_30, n_out29p0.xy);
	vec3 n_out30p0 = tex_frg_30_read.rgb;
	float n_out30p1 = tex_frg_30_read.a;

// Texture:31
	vec4 tex_frg_31_read = texture(tex_frg_31, n_out38p0.xy);
	vec3 n_out31p0 = tex_frg_31_read.rgb;
	float n_out31p1 = tex_frg_31_read.a;

// Texture:32
	vec4 tex_frg_32_read = texture(tex_frg_32, n_out31p0.xy);
	vec3 n_out32p0 = tex_frg_32_read.rgb;
	float n_out32p1 = tex_frg_32_read.a;

// VectorOp:33
	vec3 n_out33p0 = n_out30p0 * n_out32p0;

// Texture:36
	vec4 tex_frg_36_read = texture(tex_frg_36, n_out27p0.xy);
	vec3 n_out36p0 = tex_frg_36_read.rgb;
	float n_out36p1 = tex_frg_36_read.a;

// VectorOp:35
	vec3 n_out35p0 = n_out33p0 * n_out36p0;

// VectorMix:34
	vec3 n_out34p0 = mix(n_out27p0, n_out35p0, vec3(n_out32p1));

// Texture:25
	vec4 tex_frg_25_read = texture(tex_frg_25, vec3(n_out24p0).xy);
	vec3 n_out25p0 = tex_frg_25_read.rgb;
	float n_out25p1 = tex_frg_25_read.a;

// VectorMix:26
	vec3 n_out26p0 = mix(n_out28p0, n_out34p0, n_out25p0);

// Input:10
	vec3 n_out10p0 = vec3(UV, 0.0);

// VectorUniform:42
	vec3 n_out42p0 = wetness;

// VectorOp:41
	vec3 n_out41p0 = n_out10p0 + n_out42p0;

// ScalarOp:19
	float n_in19p1 = 0.10000;
	float n_out19p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) * n_in19p1;

// VectorOp:18
	vec3 n_out18p0 = n_out41p0 + vec3(n_out19p0);

// VectorDecompose:11
	float n_out11p0 = n_out18p0.x;
	float n_out11p1 = n_out18p0.y;
	float n_out11p2 = n_out18p0.z;

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, vec3(n_out11p1).xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// BooleanUniform:39
	bool n_out39p0 = wet;

// ScalarMix:21
	float n_in21p1 = 1.00000;
	float n_out21p0 = mix(dot(n_out12p0, vec3(0.333333, 0.333333, 0.333333)), n_in21p1, n_out39p0 ? 1.0 : 0.0);

// VectorOp:20
	vec3 n_out20p0 = n_out26p0 * vec3(n_out21p0);

// VectorOp:54
	vec3 n_out54p0 = vec3(n_out53p0) * n_out20p0;

// Input:44
	vec3 n_out44p0 = vec3(UV, 0.0);

// VectorDecompose:45
	float n_out45p0 = n_out44p0.x;
	float n_out45p1 = n_out44p0.y;
	float n_out45p2 = n_out44p0.z;

// Texture:43
	vec4 tex_frg_43_read = texture(tex_frg_43, vec3(n_out45p1).xy);
	vec3 n_out43p0 = tex_frg_43_read.rgb;
	float n_out43p1 = tex_frg_43_read.a;

// Texture:58
	vec4 tex_frg_58_read = texture(tex_frg_58, UV.xy);
	vec3 n_out58p0 = tex_frg_58_read.rgb;
	float n_out58p1 = tex_frg_58_read.a;

// Texture:60
	vec4 tex_frg_60_read = texture(tex_frg_60, n_out58p0.xy);
	vec3 n_out60p0 = tex_frg_60_read.rgb;
	float n_out60p1 = tex_frg_60_read.a;

// VectorOp:57
	vec3 n_out57p0 = n_out43p0 * n_out60p0;

// VectorMix:46
	vec3 n_out46p0 = mix(n_out54p0, n_out57p0, vec3(n_out43p1));

// BooleanUniform:40
	bool n_out40p0 = split;

// VectorFunc:17
	vec3 n_out17p0 = vec3(1.0, 1.0, 1.0) - vec3(n_out40p0 ? 1.0 : 0.0);

// Texture:13
	vec4 tex_frg_13_read = texture(tex_frg_13, vec3(n_out11p1).xy);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// ScalarOp:16
	float n_out16p0 = max(dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333)));

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, vec3(n_out3p1).xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// ScalarOp:14
	float n_out14p0 = n_out16p0 * dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

// BooleanUniform:56
	bool n_out56p0 = alpha;

// ScalarMix:55
	float n_in55p1 = 1.00000;
	float n_out55p0 = mix(n_out14p0, n_in55p1, n_out56p0 ? 1.0 : 0.0);

// Output:0
	ALBEDO = n_out46p0;
	ALPHA = n_out55p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 2891.91, 42.7702 )
modes/cull = 2
modes/depth_draw = 3
flags/unshaded = true
nodes/vertex/0/position = Vector2( 4160, 380 )
nodes/vertex/2/node = SubResource( 110 )
nodes/vertex/2/position = Vector2( 140, 220 )
nodes/vertex/3/node = SubResource( 121 )
nodes/vertex/3/position = Vector2( 360, 280 )
nodes/vertex/4/node = SubResource( 136 )
nodes/vertex/4/position = Vector2( 600, 220 )
nodes/vertex/5/node = SubResource( 142 )
nodes/vertex/5/position = Vector2( 776.177, 314.533 )
nodes/vertex/6/node = SubResource( 143 )
nodes/vertex/6/position = Vector2( 967.101, 375.258 )
nodes/vertex/7/node = SubResource( 144 )
nodes/vertex/7/position = Vector2( 760, 460 )
nodes/vertex/8/node = SubResource( 145 )
nodes/vertex/8/position = Vector2( 1160, 400 )
nodes/vertex/9/node = SubResource( 146 )
nodes/vertex/9/position = Vector2( 1100, 240 )
nodes/vertex/10/node = SubResource( 96 )
nodes/vertex/10/position = Vector2( 1360, 280 )
nodes/vertex/11/node = SubResource( 97 )
nodes/vertex/11/position = Vector2( 3400, 320 )
nodes/vertex/12/node = SubResource( 100 )
nodes/vertex/12/position = Vector2( 1320, 800 )
nodes/vertex/13/node = SubResource( 101 )
nodes/vertex/13/position = Vector2( 1360, 400 )
nodes/vertex/14/node = SubResource( 102 )
nodes/vertex/14/position = Vector2( 3540, 360 )
nodes/vertex/15/node = SubResource( 103 )
nodes/vertex/15/position = Vector2( 1560, 500 )
nodes/vertex/16/node = SubResource( 104 )
nodes/vertex/16/position = Vector2( 1280, 720 )
nodes/vertex/17/node = SubResource( 107 )
nodes/vertex/17/position = Vector2( 1220, 540 )
nodes/vertex/18/node = SubResource( 108 )
nodes/vertex/18/position = Vector2( 1780, 400 )
nodes/vertex/19/node = SubResource( 109 )
nodes/vertex/19/position = Vector2( 780, 640 )
nodes/vertex/20/node = SubResource( 111 )
nodes/vertex/20/position = Vector2( 980, 720 )
nodes/vertex/21/node = SubResource( 112 )
nodes/vertex/21/position = Vector2( 1380, 540 )
nodes/vertex/22/node = SubResource( 113 )
nodes/vertex/22/position = Vector2( 1760, 520 )
nodes/vertex/23/node = SubResource( 114 )
nodes/vertex/23/position = Vector2( 1940, 540 )
nodes/vertex/24/node = SubResource( 115 )
nodes/vertex/24/position = Vector2( 2100, 400 )
nodes/vertex/25/node = SubResource( 116 )
nodes/vertex/25/position = Vector2( 1440, 660 )
nodes/vertex/26/node = SubResource( 117 )
nodes/vertex/26/position = Vector2( 1560, 700 )
nodes/vertex/27/node = SubResource( 118 )
nodes/vertex/27/position = Vector2( 2280, 400 )
nodes/vertex/28/node = SubResource( 119 )
nodes/vertex/28/position = Vector2( 2500, 400 )
nodes/vertex/29/node = SubResource( 120 )
nodes/vertex/29/position = Vector2( 2720, 400 )
nodes/vertex/30/node = SubResource( 122 )
nodes/vertex/30/position = Vector2( 3420, 480 )
nodes/vertex/31/node = SubResource( 123 )
nodes/vertex/31/position = Vector2( 3000, 460 )
nodes/vertex/32/node = SubResource( 124 )
nodes/vertex/32/position = Vector2( 2140, 560 )
nodes/vertex/33/node = SubResource( 125 )
nodes/vertex/33/position = Vector2( 2480, 580 )
nodes/vertex/34/node = SubResource( 128 )
nodes/vertex/34/position = Vector2( 2680, 540 )
nodes/vertex/35/node = SubResource( 129 )
nodes/vertex/35/position = Vector2( 2860, 580 )
nodes/vertex/36/node = SubResource( 130 )
nodes/vertex/36/position = Vector2( 2000, 640 )
nodes/vertex/37/node = SubResource( 131 )
nodes/vertex/37/position = Vector2( 2280, 600 )
nodes/vertex/38/node = SubResource( 132 )
nodes/vertex/38/position = Vector2( 2200, 720 )
nodes/vertex/39/node = SubResource( 133 )
nodes/vertex/39/position = Vector2( 2680, 740 )
nodes/vertex/40/node = SubResource( 137 )
nodes/vertex/40/position = Vector2( 3060, 580 )
nodes/vertex/41/node = SubResource( 138 )
nodes/vertex/41/position = Vector2( 3236.61, 489.063 )
nodes/vertex/42/node = SubResource( 139 )
nodes/vertex/42/position = Vector2( 3720, 400 )
nodes/vertex/43/node = SubResource( 140 )
nodes/vertex/43/position = Vector2( 3609.2, 574.848 )
nodes/vertex/44/node = SubResource( 141 )
nodes/vertex/44/position = Vector2( 3580, 480 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 7, 0, 6, 1, 6, 0, 8, 0, 12, 0, 11, 2, 10, 0, 11, 1, 6, 0, 10, 0, 8, 0, 13, 0, 11, 0, 14, 0, 16, 0, 15, 1, 13, 0, 18, 0, 15, 0, 18, 1, 19, 0, 20, 0, 20, 1, 17, 0, 20, 1, 12, 0, 17, 0, 21, 0, 21, 0, 15, 0, 22, 0, 23, 0, 18, 0, 24, 0, 23, 0, 24, 1, 25, 0, 26, 0, 26, 1, 22, 0, 24, 0, 27, 0, 27, 0, 28, 0, 28, 0, 29, 0, 30, 0, 0, 6, 29, 0, 31, 0, 33, 1, 34, 0, 34, 0, 35, 0, 35, 0, 31, 1, 32, 0, 37, 0, 36, 0, 38, 0, 38, 0, 37, 1, 37, 0, 33, 0, 39, 0, 35, 1, 31, 0, 41, 0, 40, 0, 41, 1, 41, 0, 11, 0, 14, 0, 42, 0, 43, 0, 42, 2, 30, 0, 44, 0, 44, 0, 42, 1, 42, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 4160, -220 )
nodes/fragment/2/node = SubResource( 17 )
nodes/fragment/2/position = Vector2( 100, 380 )
nodes/fragment/3/node = SubResource( 36 )
nodes/fragment/3/position = Vector2( 300, 400 )
nodes/fragment/4/node = SubResource( 56 )
nodes/fragment/4/position = Vector2( 520, 360 )
nodes/fragment/5/node = SubResource( 71 )
nodes/fragment/5/position = Vector2( 920, 100 )
nodes/fragment/6/node = SubResource( 89 )
nodes/fragment/6/position = Vector2( 240, 280 )
nodes/fragment/7/node = SubResource( 93 )
nodes/fragment/7/position = Vector2( 420, 260 )
nodes/fragment/8/node = SubResource( 94 )
nodes/fragment/8/position = Vector2( 600, 200 )
nodes/fragment/9/node = SubResource( 95 )
nodes/fragment/9/position = Vector2( 800, 280 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 240, 40 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 840, 80 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( 1200, -60 )
nodes/fragment/13/node = SubResource( 10 )
nodes/fragment/13/position = Vector2( 1100, 140 )
nodes/fragment/14/node = SubResource( 11 )
nodes/fragment/14/position = Vector2( 1740, 400 )
nodes/fragment/15/node = SubResource( 12 )
nodes/fragment/15/position = Vector2( 1100, 360 )
nodes/fragment/16/node = SubResource( 13 )
nodes/fragment/16/position = Vector2( 1480, 180 )
nodes/fragment/17/node = SubResource( 14 )
nodes/fragment/17/position = Vector2( 1240, 340 )
nodes/fragment/18/node = SubResource( 15 )
nodes/fragment/18/position = Vector2( 680, 60 )
nodes/fragment/19/node = SubResource( 16 )
nodes/fragment/19/position = Vector2( 520, 140 )
nodes/fragment/20/node = SubResource( 18 )
nodes/fragment/20/position = Vector2( 2640, 20 )
nodes/fragment/21/node = SubResource( 19 )
nodes/fragment/21/position = Vector2( 1480, -40 )
nodes/fragment/22/node = SubResource( 20 )
nodes/fragment/22/position = Vector2( 1280, 180 )
nodes/fragment/23/node = SubResource( 21 )
nodes/fragment/23/position = Vector2( 1600, -80 )
nodes/fragment/24/node = SubResource( 22 )
nodes/fragment/24/position = Vector2( 1760, 0 )
nodes/fragment/25/node = SubResource( 25 )
nodes/fragment/25/position = Vector2( 2180, -80 )
nodes/fragment/26/node = SubResource( 26 )
nodes/fragment/26/position = Vector2( 2440, 140 )
nodes/fragment/27/node = SubResource( 29 )
nodes/fragment/27/position = Vector2( 1980, -60 )
nodes/fragment/28/node = SubResource( 32 )
nodes/fragment/28/position = Vector2( 1620, 200 )
nodes/fragment/29/node = SubResource( 35 )
nodes/fragment/29/position = Vector2( 1960, 220 )
nodes/fragment/30/node = SubResource( 39 )
nodes/fragment/30/position = Vector2( 2220, 220 )
nodes/fragment/31/node = SubResource( 41 )
nodes/fragment/31/position = Vector2( 1960, 440 )
nodes/fragment/32/node = SubResource( 44 )
nodes/fragment/32/position = Vector2( 2200, 420 )
nodes/fragment/33/node = SubResource( 45 )
nodes/fragment/33/position = Vector2( 2413.73, 370.059 )
nodes/fragment/34/node = SubResource( 46 )
nodes/fragment/34/position = Vector2( 2620, 300 )
nodes/fragment/35/node = SubResource( 47 )
nodes/fragment/35/position = Vector2( 2580, 500 )
nodes/fragment/36/node = SubResource( 50 )
nodes/fragment/36/position = Vector2( 2380, 480 )
nodes/fragment/37/node = SubResource( 51 )
nodes/fragment/37/position = Vector2( 1480, 500 )
nodes/fragment/38/node = SubResource( 52 )
nodes/fragment/38/position = Vector2( 1700, 500 )
nodes/fragment/39/node = SubResource( 53 )
nodes/fragment/39/position = Vector2( 1280, 120 )
nodes/fragment/40/node = SubResource( 57 )
nodes/fragment/40/position = Vector2( 980, 420 )
nodes/fragment/41/node = SubResource( 58 )
nodes/fragment/41/position = Vector2( 420, 100 )
nodes/fragment/42/node = SubResource( 59 )
nodes/fragment/42/position = Vector2( 203.716, 206.568 )
nodes/fragment/43/node = SubResource( 62 )
nodes/fragment/43/position = Vector2( 2600, -220 )
nodes/fragment/44/node = SubResource( 63 )
nodes/fragment/44/position = Vector2( 2240, -120 )
nodes/fragment/45/node = SubResource( 64 )
nodes/fragment/45/position = Vector2( 2380, -120 )
nodes/fragment/46/node = SubResource( 65 )
nodes/fragment/46/position = Vector2( 3940, -120 )
nodes/fragment/47/node = SubResource( 66 )
nodes/fragment/47/position = Vector2( 2760, -180 )
nodes/fragment/48/node = SubResource( 67 )
nodes/fragment/48/position = Vector2( 3120, -160 )
nodes/fragment/49/node = SubResource( 68 )
nodes/fragment/49/position = Vector2( 2900, -120 )
nodes/fragment/50/node = SubResource( 72 )
nodes/fragment/50/position = Vector2( 3120, -280 )
nodes/fragment/51/node = SubResource( 75 )
nodes/fragment/51/position = Vector2( 3340, -340 )
nodes/fragment/52/node = SubResource( 78 )
nodes/fragment/52/position = Vector2( 3340, -160 )
nodes/fragment/53/node = SubResource( 79 )
nodes/fragment/53/position = Vector2( 3552.07, -168.447 )
nodes/fragment/54/node = SubResource( 80 )
nodes/fragment/54/position = Vector2( 3760, -120 )
nodes/fragment/55/node = SubResource( 81 )
nodes/fragment/55/position = Vector2( 3960, -260 )
nodes/fragment/56/node = SubResource( 82 )
nodes/fragment/56/position = Vector2( 3720, -220 )
nodes/fragment/57/node = SubResource( 83 )
nodes/fragment/57/position = Vector2( 3480, 40 )
nodes/fragment/58/node = SubResource( 86 )
nodes/fragment/58/position = Vector2( 2940, 140 )
nodes/fragment/60/node = SubResource( 92 )
nodes/fragment/60/position = Vector2( 3240, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 4, 0, 3, 1, 6, 0, 7, 0, 8, 0, 8, 0, 9, 0, 11, 1, 12, 0, 11, 1, 13, 0, 4, 0, 14, 1, 13, 0, 16, 1, 16, 0, 14, 0, 18, 0, 11, 0, 5, 0, 19, 0, 19, 0, 18, 1, 12, 0, 21, 0, 21, 0, 20, 1, 23, 0, 24, 0, 24, 0, 25, 0, 25, 0, 26, 2, 26, 0, 20, 0, 24, 0, 27, 0, 5, 0, 28, 0, 17, 0, 16, 0, 28, 0, 26, 0, 29, 0, 30, 0, 31, 0, 32, 0, 30, 0, 33, 0, 32, 0, 33, 1, 34, 0, 26, 1, 27, 0, 34, 0, 32, 1, 34, 2, 33, 0, 35, 0, 35, 0, 34, 1, 27, 0, 36, 0, 36, 0, 35, 1, 37, 0, 38, 0, 38, 0, 29, 0, 38, 0, 31, 0, 39, 0, 21, 2, 40, 0, 17, 0, 10, 0, 41, 0, 41, 0, 18, 0, 42, 0, 41, 1, 44, 0, 45, 0, 45, 1, 43, 0, 43, 1, 46, 2, 47, 0, 49, 0, 49, 0, 48, 0, 47, 0, 50, 0, 50, 0, 51, 0, 48, 0, 52, 0, 51, 0, 53, 0, 52, 0, 53, 1, 53, 0, 54, 0, 20, 0, 54, 1, 54, 0, 46, 0, 46, 0, 0, 0, 14, 0, 55, 0, 55, 0, 0, 1, 56, 0, 55, 2, 43, 0, 57, 0, 57, 0, 46, 1, 60, 0, 57, 1, 58, 0, 60, 0 )

[sub_resource type="ShaderMaterial" id=148]
shader = SubResource( 147 )
shader_param/fall = Vector3( 0, 0, 0 )
shader_param/pos = Vector3( 0, -0.00698552, 0 )
shader_param/morph = 1.0
shader_param/wetness = Vector3( 0, -0.454, 0 )
shader_param/wet = false
shader_param/split = false
shader_param/alpha = true

[sub_resource type="SphereMesh" id=149]
rings = 256

[sub_resource type="Animation" id=150]
length = 10.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:material/0:shader_param/pos")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 6.2, 6.7, 6.9, 7.1, 7.3, 7.5, 7.7, 8.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, -4.319, 0 ), Vector3( 0, -4.034, 0 ), Vector3( 0, -4.35, 0 ), Vector3( 0, -3.937, 0 ), Vector3( 0, -4.734, 0 ), Vector3( 0, -4.288, 0 ), Vector3( 0, -1.358, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material/0:shader_param/wet")
tracks/1/interp = 1
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 7.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material/0:shader_param/split")
tracks/2/interp = 1
tracks/2/loop_wrap = false
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 9, 9.1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, false, true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:material/0:shader_param/fall")
tracks/3/interp = 1
tracks/3/loop_wrap = false
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 9, 9.1, 9.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0, 0.197, 0 ), Vector3( 0, -4.011, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:material/0:shader_param/wetness")
tracks/4/interp = 1
tracks/4/loop_wrap = false
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 6.5, 6.6, 6.7, 7.2, 8.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -0.454, 0 ), Vector3( 0, -0.454, 0 ), Vector3( 0, -0.263, 0 ), Vector3( 0, -0.168, 0 ), Vector3( 0, -0.084, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:material/0:shader_param/morph")
tracks/5/interp = 1
tracks/5/loop_wrap = false
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 1.9 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:material/0:shader_param/alpha")
tracks/6/interp = 1
tracks/6/loop_wrap = false
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 1.4, 1.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, false, false ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:rotation_degrees")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 1.9, 6 ),
"transitions": PoolRealArray( 1, 0.517632, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0, 1080, 0 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath(".:material_override:shader_param/morph")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 0.63728, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0 ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.617214, -0.0969084, 0.780804, 0, 0.992386, 0.123168, -0.786795, -0.0760214, 0.612515, 9.24684, 2.02758, 7.21178 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 2 )

[node name="pastry" type="MeshInstance" parent="."]
material_override = SubResource( 148 )
extra_cull_margin = 2.0
mesh = SubResource( 149 )
material/0 = SubResource( 148 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="pastry"]
"anims/New Anim" = SubResource( 150 )
