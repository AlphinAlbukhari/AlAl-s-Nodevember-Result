[gd_scene load_steps=131 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="CubeMesh" id=1]
size = Vector3( 2, 3, 2 )
subdivide_height = 256

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.439252, 0.443925, 0.53271, 0.542056 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = SubResource( 3 )

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0.457944, 0.462617, 0.526767, 0.528037 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=7]
gradient = SubResource( 6 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = SubResource( 7 )

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=10]
function = 20

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "color"

[sub_resource type="Gradient" id=12]
offsets = PoolRealArray( 0.11215, 0.135514, 0.411215, 0.434579, 0.546729, 0.565421, 0.850467, 0.873832 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=13]
gradient = SubResource( 12 )

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = SubResource( 13 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]

[sub_resource type="VisualShaderNodeVectorCompose" id=16]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=17]

[sub_resource type="VisualShaderNodeTexture" id=18]
texture = SubResource( 13 )

[sub_resource type="Gradient" id=19]
offsets = PoolRealArray( 0.0981308, 0.116822, 0.906542, 0.943925 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=20]
gradient = SubResource( 19 )

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = SubResource( 20 )

[sub_resource type="VisualShaderNodeScalarOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=23]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 2, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=24]
function = 20

[sub_resource type="VisualShaderNodeVectorDecompose" id=25]

[sub_resource type="VisualShaderNodeVectorDecompose" id=26]

[sub_resource type="Gradient" id=27]
offsets = PoolRealArray( 0.107477, 0.126168 )

[sub_resource type="GradientTexture" id=28]
gradient = SubResource( 27 )

[sub_resource type="VisualShaderNodeTexture" id=29]
texture = SubResource( 28 )

[sub_resource type="VisualShaderNodeScalarOp" id=30]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=31]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.5, 0 ) ]

[sub_resource type="Gradient" id=32]
offsets = PoolRealArray( 0.82243, 0.836449 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=33]
gradient = SubResource( 32 )

[sub_resource type="VisualShaderNodeTexture" id=34]
texture = SubResource( 33 )

[sub_resource type="VisualShaderNodeScalarOp" id=35]
operator = 2

[sub_resource type="Gradient" id=36]
colors = PoolColorArray( 0.183594, 0.183594, 0.183594, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=37]
gradient = SubResource( 36 )

[sub_resource type="VisualShaderNodeTexture" id=38]
texture = SubResource( 37 )

[sub_resource type="VisualShaderNodeVectorOp" id=39]
operator = 6

[sub_resource type="Gradient" id=40]
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=41]
gradient = SubResource( 40 )

[sub_resource type="VisualShaderNodeTexture" id=42]
texture = SubResource( 41 )

[sub_resource type="Gradient" id=43]
colors = PoolColorArray( 1, 0.984375, 0, 1, 0, 0.8125, 1, 1 )

[sub_resource type="GradientTexture" id=44]
gradient = SubResource( 43 )

[sub_resource type="VisualShaderNodeTexture" id=45]
texture = SubResource( 44 )

[sub_resource type="VisualShaderNodeVectorOp" id=46]
operator = 2

[sub_resource type="Gradient" id=47]
offsets = PoolRealArray( 0, 0.216216, 0.28453, 0.286486, 0.297645, 0.299786, 0.389722, 0.475375, 0.481799, 0.503212, 0.509636, 0.648822, 0.691649, 0.698073 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.515625, 0.515625, 0.515625, 1, 0.513726, 0.513726, 0.513726, 1, 0.378906, 0.378906, 0.378906, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.761719, 0.761719, 0.761719, 1, 0.760784, 0.760784, 0.760784, 1, 0.550781, 0.550781, 0.550781, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.828125, 0.828125, 0.828125, 1 )

[sub_resource type="GradientTexture" id=48]
gradient = SubResource( 47 )

[sub_resource type="VisualShaderNodeTexture" id=49]
texture = SubResource( 48 )

[sub_resource type="VisualShaderNodeVectorOp" id=50]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=51]
default_input_values = [ 0, 0.0, 1, 2.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=52]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="Gradient" id=53]
offsets = PoolRealArray( 0, 0.00856531, 0.391863, 0.40257 )
colors = PoolColorArray( 0.457031, 0.457031, 0.457031, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.65625, 0.65625, 0.65625, 1 )

[sub_resource type="GradientTexture" id=54]
gradient = SubResource( 53 )

[sub_resource type="VisualShaderNodeTexture" id=55]
texture = SubResource( 54 )

[sub_resource type="VisualShaderNodeVectorOp" id=56]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=57]
default_input_values = [ 0, 0.0, 1, 1.01 ]

[sub_resource type="VisualShaderNodeScalarOp" id=58]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=59]

[sub_resource type="Gradient" id=60]
offsets = PoolRealArray( 0.182013, 0.184154, 0.199143, 0.201285, 0.381156, 0.383298, 0.404711, 0.408994, 0.597122, 0.59952 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=61]
gradient = SubResource( 60 )

[sub_resource type="VisualShaderNodeTexture" id=62]
texture = SubResource( 61 )

[sub_resource type="VisualShaderNodeScalarOp" id=63]
default_input_values = [ 0, 0.0, 1, 1.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=64]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=65]
input_name = "uv2"

[sub_resource type="VisualShaderNodeVectorDecompose" id=66]

[sub_resource type="Gradient" id=67]
colors = PoolColorArray( 0.546875, 0.546875, 0, 1, 0.831373, 0.831373, 0, 1 )

[sub_resource type="GradientTexture" id=68]
gradient = SubResource( 67 )

[sub_resource type="VisualShaderNodeTexture" id=69]
texture = SubResource( 68 )

[sub_resource type="VisualShaderNodeScalarOp" id=70]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=71]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="Gradient" id=72]
offsets = PoolRealArray( 0, 0.00887574, 0.198225, 0.204142, 0.210059, 0.211, 0.390533, 0.393491, 0.414201, 0.415 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=73]
gradient = SubResource( 72 )

[sub_resource type="VisualShaderNodeTexture" id=74]
texture = SubResource( 73 )

[sub_resource type="VisualShaderNodeVectorInterp" id=75]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeTexture" id=76]

[sub_resource type="VisualShaderNodeColorConstant" id=77]
constant = Color( 0.339844, 0.335251, 0, 1 )

[sub_resource type="VisualShaderNodeScalarInterp" id=78]

[sub_resource type="VisualShaderNodeScalarUniform" id=79]
uniform_name = "alpha"

[sub_resource type="VisualShaderNodeInput" id=80]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=81]

[sub_resource type="VisualShaderNodeVectorInterp" id=82]

[sub_resource type="VisualShaderNodeVectorDecompose" id=83]

[sub_resource type="Gradient" id=84]
offsets = PoolRealArray( 0.488, 0.490667, 0.514667, 0.522667 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=85]
gradient = SubResource( 84 )

[sub_resource type="VisualShaderNodeTexture" id=86]
texture = SubResource( 85 )

[sub_resource type="VisualShaderNodeVectorOp" id=87]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=88]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=89]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=90]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=91]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=92]

[sub_resource type="VisualShaderNodeVectorOp" id=93]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="Curve" id=94]
min_value = -1.0
max_value = 0.0
_data = [ Vector2( 0.421941, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.421941, -1 ), 0.0, 0.0, 0, 0, Vector2( 0.548523, -1 ), 0.0, 0.0, 1, 0, Vector2( 0.556962, 0 ), 0.0, -237.0, 0, 1 ]

[sub_resource type="CurveTexture" id=95]
curve = SubResource( 94 )

[sub_resource type="VisualShaderNodeTexture" id=96]
texture = SubResource( 95 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=97]

[sub_resource type="VisualShaderNodeScalarOp" id=98]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=99]
function = 15

[sub_resource type="VisualShaderNodeScalarClamp" id=100]

[sub_resource type="VisualShaderNodeVectorInterp" id=101]

[sub_resource type="VisualShaderNodeInput" id=102]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=103]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=104]

[sub_resource type="Curve" id=105]
min_value = -1.0
max_value = 0.0
_data = [ Vector2( 0.434599, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.451477, -1 ), 0.0, 0.0, 0, 0, Vector2( 0.531646, -1 ), 0.0, 0.0, 0, 0, Vector2( 0.535865, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=106]
curve = SubResource( 105 )

[sub_resource type="VisualShaderNodeTexture" id=107]
texture = SubResource( 106 )

[sub_resource type="VisualShaderNodeVectorOp" id=108]

[sub_resource type="VisualShaderNodeVectorOp" id=109]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=110]

[sub_resource type="VisualShaderNodeVectorOp" id=111]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1.9, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=112]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 2.85, 0 ) ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=113]

[sub_resource type="VisualShaderNodeVectorCompose" id=114]

[sub_resource type="VisualShaderNodeVec3Uniform" id=115]
uniform_name = "pos_bot"

[sub_resource type="VisualShaderNodeVectorDecompose" id=116]

[sub_resource type="VisualShaderNodeVec3Uniform" id=117]
uniform_name = "pos_mid"

[sub_resource type="VisualShaderNodeVectorOp" id=118]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVec3Uniform" id=119]
uniform_name = "mid"

[sub_resource type="VisualShaderNodeVectorInterp" id=120]

[sub_resource type="VisualShaderNodeInput" id=121]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=122]
uniform_name = "deform"

[sub_resource type="VisualShaderNodeVectorOp" id=123]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0.66666, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=124]
function = 15

[sub_resource type="VisualShaderNodeScalarClamp" id=125]

[sub_resource type="VisualShaderNodeVectorOp" id=126]

[sub_resource type="VisualShader" id=127]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, specular_schlick_ggx, unshaded;

uniform vec3 pos_bot;
uniform vec3 pos_mid;
uniform vec3 mid;
uniform sampler2D tex_vtx_12;
uniform sampler2D tex_vtx_23;
uniform sampler2D tex_vtx_31;
uniform float deform;
uniform sampler2D tex_frg_55;
uniform sampler2D tex_frg_44;
uniform sampler2D tex_frg_40;
uniform sampler2D tex_frg_35;
uniform sampler2D tex_frg_33;
uniform sampler2D tex_frg_30;
uniform sampler2D tex_frg_25;
uniform sampler2D tex_frg_20;
uniform sampler2D tex_frg_24;
uniform sampler2D tex_frg_37;
uniform sampler2D tex_frg_38;
uniform sampler2D tex_frg_49;
uniform sampler2D tex_frg_58;
uniform sampler2D tex_frg_14;
uniform sampler2D tex_frg_17;
uniform float alpha;



void vertex() {
// Input:29
	vec3 n_out29p0 = VERTEX;

// VectorUniform:39
	vec3 n_out39p0 = pos_bot;

// VectorOp:30
	vec3 n_out30p0 = n_out29p0 + n_out39p0;

// VectorUniform:40
	vec3 n_out40p0 = pos_mid;

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorOp:8
	vec3 n_out8p0 = n_out40p0 + n_out2p0;

// VectorUniform:42
	vec3 n_out42p0 = mid;

// VectorOp:41
	vec3 n_out41p0 = n_out8p0 + n_out42p0;

// VectorDecompose:11
	float n_out11p0 = n_out2p0.x;
	float n_out11p1 = n_out2p0.y;
	float n_out11p2 = n_out2p0.z;

// Texture:12
	vec4 tex_vtx_12_read = texture(tex_vtx_12, vec3(n_out11p1).xy);
	vec3 n_out12p0 = tex_vtx_12_read.rgb;
	float n_out12p1 = tex_vtx_12_read.a;

// VectorOp:15
	vec3 n_out15p0 = n_out41p0 * n_out12p0;

// Input:3
	vec3 n_out3p0 = VERTEX;

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// ScalarFunc:5
	float n_out5p0 = round(n_out4p1);

// ScalarClamp:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 1.00000;
	float n_out6p0 = clamp(n_out5p0, n_in6p1, n_in6p2);

// VectorMix:10
	vec3 n_out10p0 = mix(n_out15p0, n_out8p0, vec3(n_out6p0));

// Texture:23
	vec4 tex_vtx_23_read = texture(tex_vtx_23, vec3(n_out11p1).xy);
	vec3 n_out23p0 = tex_vtx_23_read.rgb;
	float n_out23p1 = tex_vtx_23_read.a;

// VectorDecompose:24
	float n_out24p0 = n_out23p0.x;
	float n_out24p1 = n_out23p0.y;
	float n_out24p2 = n_out23p0.z;

// Input:14
	vec3 n_out14p0 = NORMAL;

// VectorOp:22
	vec3 n_in22p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out22p0 = n_out14p0 * n_in22p1;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out24p0) * n_out22p0;

// VectorOp:20
	vec3 n_out20p0 = n_out10p0 + n_out13p0;

// ScalarOp:25
	float n_in25p1 = 1.00000;
	float n_out25p0 = n_out4p1 + n_in25p1;

// ScalarFunc:26
	float n_out26p0 = round(n_out25p0);

// ScalarClamp:27
	float n_in27p1 = 0.00000;
	float n_in27p2 = 1.00000;
	float n_out27p0 = clamp(n_out26p0, n_in27p1, n_in27p2);

// VectorMix:28
	vec3 n_out28p0 = mix(n_out30p0, n_out20p0, vec3(n_out27p0));

// Texture:31
	vec4 tex_vtx_31_read = texture(tex_vtx_31, vec3(n_out25p0).xy);
	vec3 n_out31p0 = tex_vtx_31_read.rgb;
	float n_out31p1 = tex_vtx_31_read.a;

// VectorDecompose:34
	float n_out34p0 = n_out31p0.x;
	float n_out34p1 = n_out31p0.y;
	float n_out34p2 = n_out31p0.z;

// VectorOp:33
	vec3 n_out33p0 = vec3(n_out34p0) * n_out22p0;

// VectorOp:32
	vec3 n_out32p0 = n_out28p0 + n_out33p0;

// VectorOp:35
	vec3 n_in35p1 = vec3(1.00000, 1.90000, 1.00000);
	vec3 n_out35p0 = n_out32p0 * n_in35p1;

// VectorOp:36
	vec3 n_in36p1 = vec3(0.00000, 2.85000, 0.00000);
	vec3 n_out36p0 = n_out35p0 + n_in36p1;

// Input:44
	vec3 n_out44p0 = VERTEX;

// VectorOp:46
	vec3 n_in46p1 = vec3(1.00000, 0.66666, 1.00000);
	vec3 n_out46p0 = n_out44p0 * n_in46p1;

// ScalarUniform:45
	float n_out45p0 = deform;

// VectorMix:43
	vec3 n_out43p0 = mix(n_out36p0, n_out46p0, vec3(n_out45p0));

// VectorDecompose:37
	float n_out37p0 = n_out36p0.x;
	float n_out37p1 = n_out36p0.y;
	float n_out37p2 = n_out36p0.z;

// VectorCompose:38
	float n_in38p2 = 0.00000;
	vec3 n_out38p0 = vec3(n_out37p0, n_out37p2, n_in38p2);

// Input:16
	vec3 n_out16p0 = VERTEX;

// Output:0
	VERTEX = n_out43p0;
	UV2 = n_out38p0.xy;
	COLOR.rgb = n_out16p0;

}

void fragment() {
// Color:60
	vec3 n_out60p0 = vec3(0.339844, 0.335251, 0.000000);
	float n_out60p1 = 1.000000;

// Input:53
	vec3 n_out53p0 = vec3(UV2, 0.0);

// VectorDecompose:54
	float n_out54p0 = n_out53p0.x;
	float n_out54p1 = n_out53p0.y;
	float n_out54p2 = n_out53p0.z;

// ScalarOp:56
	float n_in56p1 = 1.00000;
	float n_out56p0 = n_out54p1 + n_in56p1;

// ScalarOp:57
	float n_in57p1 = 0.50000;
	float n_out57p0 = n_out56p0 * n_in57p1;

// Texture:55
	vec4 tex_frg_55_read = texture(tex_frg_55, vec3(n_out57p0).xy);
	vec3 n_out55p0 = tex_frg_55_read.rgb;
	float n_out55p1 = tex_frg_55_read.a;

// Input:2
	vec3 n_out2p0 = COLOR.rgb;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// ScalarOp:46
	float n_in46p1 = 1.01000;
	float n_out46p0 = n_out3p0 + n_in46p1;

// ScalarOp:47
	float n_in47p1 = 0.20000;
	float n_out47p0 = n_out46p0 * n_in47p1;

// Texture:44
	vec4 tex_frg_44_read = texture(tex_frg_44, vec3(n_out47p0).xy);
	vec3 n_out44p0 = tex_frg_44_read.rgb;
	float n_out44p1 = tex_frg_44_read.a;

// ScalarOp:42
	float n_in42p1 = 2.00000;
	float n_out42p0 = n_out3p1 + n_in42p1;

// ScalarOp:43
	float n_in43p1 = 0.20000;
	float n_out43p0 = n_out42p0 * n_in43p1;

// Texture:40
	vec4 tex_frg_40_read = texture(tex_frg_40, vec3(n_out43p0).xy);
	vec3 n_out40p0 = tex_frg_40_read.rgb;
	float n_out40p1 = tex_frg_40_read.a;

// VectorOp:27
	vec3 n_in27p1 = vec3(1.00000, 2.00000, 1.00000);
	vec3 n_out27p0 = n_out2p0 * n_in27p1;

// VectorFunc:19
	vec3 n_out19p0 = fract(n_out27p0);

// VectorDecompose:21
	float n_out21p0 = n_out19p0.x;
	float n_out21p1 = n_out19p0.y;
	float n_out21p2 = n_out19p0.z;

// Texture:35
	vec4 tex_frg_35_read = texture(tex_frg_35, vec3(n_out21p1).xy);
	vec3 n_out35p0 = tex_frg_35_read.rgb;
	float n_out35p1 = tex_frg_35_read.a;

// VectorOp:32
	vec3 n_in32p1 = vec3(0.00000, 0.50000, 0.00000);
	vec3 n_out32p0 = n_out2p0 + n_in32p1;

// VectorFunc:28
	vec3 n_out28p0 = fract(n_out32p0);

// VectorDecompose:29
	float n_out29p0 = n_out28p0.x;
	float n_out29p1 = n_out28p0.y;
	float n_out29p2 = n_out28p0.z;

// Texture:33
	vec4 tex_frg_33_read = texture(tex_frg_33, vec3(n_out29p1).xy);
	vec3 n_out33p0 = tex_frg_33_read.rgb;
	float n_out33p1 = tex_frg_33_read.a;

// Texture:30
	vec4 tex_frg_30_read = texture(tex_frg_30, vec3(n_out29p1).xy);
	vec3 n_out30p0 = tex_frg_30_read.rgb;
	float n_out30p1 = tex_frg_30_read.a;

// Texture:25
	vec4 tex_frg_25_read = texture(tex_frg_25, vec3(n_out21p1).xy);
	vec3 n_out25p0 = tex_frg_25_read.rgb;
	float n_out25p1 = tex_frg_25_read.a;

// Texture:20
	vec4 tex_frg_20_read = texture(tex_frg_20, vec3(n_out21p0).xy);
	vec3 n_out20p0 = tex_frg_20_read.rgb;
	float n_out20p1 = tex_frg_20_read.a;

// VectorCompose:22
	float n_in22p1 = 1.00000;
	float n_in22p2 = 0.00000;
	vec3 n_out22p0 = vec3(n_out21p2, n_in22p1, n_in22p2);

// Texture:24
	vec4 tex_frg_24_read = texture(tex_frg_24, n_out22p0.xy);
	vec3 n_out24p0 = tex_frg_24_read.rgb;
	float n_out24p1 = tex_frg_24_read.a;

// ScalarOp:23
	float n_out23p0 = dot(n_out20p0, vec3(0.333333, 0.333333, 0.333333)) + dot(n_out24p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:26
	float n_out26p0 = dot(n_out25p0, vec3(0.333333, 0.333333, 0.333333)) * n_out23p0;

// ScalarOp:31
	float n_out31p0 = dot(n_out30p0, vec3(0.333333, 0.333333, 0.333333)) * n_out26p0;

// ScalarOp:34
	float n_out34p0 = dot(n_out33p0, vec3(0.333333, 0.333333, 0.333333)) * n_out31p0;

// Texture:37
	vec4 tex_frg_37_read = texture(tex_frg_37, vec3(n_out34p0).xy);
	vec3 n_out37p0 = tex_frg_37_read.rgb;
	float n_out37p1 = tex_frg_37_read.a;

// VectorOp:36
	vec3 n_out36p0 = max(n_out35p0, n_out37p0);

// Texture:38
	vec4 tex_frg_38_read = texture(tex_frg_38, vec3(n_out34p0).xy);
	vec3 n_out38p0 = tex_frg_38_read.rgb;
	float n_out38p1 = tex_frg_38_read.a;

// VectorOp:39
	vec3 n_out39p0 = n_out36p0 * n_out38p0;

// VectorOp:41
	vec3 n_out41p0 = n_out40p0 * n_out39p0;

// VectorOp:45
	vec3 n_out45p0 = n_out44p0 * n_out41p0;

// ScalarOp:50
	float n_in50p1 = 1.50000;
	float n_out50p0 = n_out3p1 + n_in50p1;

// ScalarOp:51
	float n_in51p1 = 0.20000;
	float n_out51p0 = n_out50p0 * n_in51p1;

// Texture:49
	vec4 tex_frg_49_read = texture(tex_frg_49, vec3(n_out51p0).xy);
	vec3 n_out49p0 = tex_frg_49_read.rgb;
	float n_out49p1 = tex_frg_49_read.a;

// VectorMix:48
	vec3 n_out48p0 = mix(n_out55p0, n_out45p0, n_out49p0);

// Texture:58
	vec4 tex_frg_58_read = texture(tex_frg_58, vec3(n_out51p0).xy);
	vec3 n_out58p0 = tex_frg_58_read.rgb;
	float n_out58p1 = tex_frg_58_read.a;

// VectorMix:59
	vec3 n_out59p0 = mix(n_out60p0, n_out48p0, n_out58p0);

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, vec3(n_out3p1).xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// ScalarOp:15
	float n_in15p1 = 1.00000;
	float n_out15p0 = n_out3p1 + n_in15p1;

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, vec3(n_out15p0).xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// ScalarOp:18
	float n_out18p0 = dot(n_out14p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarUniform:62
	float n_out62p0 = alpha;

// ScalarMix:61
	float n_in61p1 = 1.00000;
	float n_out61p0 = mix(n_out18p0, n_in61p1, n_out62p0);

// Output:0
	ALBEDO = n_out59p0;
	ALPHA = n_out61p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 5165.82, -137.049 )
modes/depth_draw = 3
flags/unshaded = true
nodes/vertex/0/position = Vector2( 3580, 180 )
nodes/vertex/2/node = SubResource( 91 )
nodes/vertex/2/position = Vector2( -20, 160 )
nodes/vertex/3/node = SubResource( 103 )
nodes/vertex/3/position = Vector2( -60, 60 )
nodes/vertex/4/node = SubResource( 116 )
nodes/vertex/4/position = Vector2( 120, 40 )
nodes/vertex/5/node = SubResource( 124 )
nodes/vertex/5/position = Vector2( 380, 60 )
nodes/vertex/6/node = SubResource( 125 )
nodes/vertex/6/position = Vector2( 620, 40 )
nodes/vertex/8/node = SubResource( 126 )
nodes/vertex/8/position = Vector2( 880, 140 )
nodes/vertex/10/node = SubResource( 82 )
nodes/vertex/10/position = Vector2( 1460, 220 )
nodes/vertex/11/node = SubResource( 83 )
nodes/vertex/11/position = Vector2( 160, 180 )
nodes/vertex/12/node = SubResource( 86 )
nodes/vertex/12/position = Vector2( 500, 460 )
nodes/vertex/13/node = SubResource( 87 )
nodes/vertex/13/position = Vector2( 900, 300 )
nodes/vertex/14/node = SubResource( 88 )
nodes/vertex/14/position = Vector2( 440, 380 )
nodes/vertex/15/node = SubResource( 89 )
nodes/vertex/15/position = Vector2( 1280, 260 )
nodes/vertex/16/node = SubResource( 90 )
nodes/vertex/16/position = Vector2( 1720, 420 )
nodes/vertex/20/node = SubResource( 92 )
nodes/vertex/20/position = Vector2( 1620, 240 )
nodes/vertex/22/node = SubResource( 93 )
nodes/vertex/22/position = Vector2( 660, 340 )
nodes/vertex/23/node = SubResource( 96 )
nodes/vertex/23/position = Vector2( 460, 160 )
nodes/vertex/24/node = SubResource( 97 )
nodes/vertex/24/position = Vector2( 660, 240 )
nodes/vertex/25/node = SubResource( 98 )
nodes/vertex/25/position = Vector2( 400, -60 )
nodes/vertex/26/node = SubResource( 99 )
nodes/vertex/26/position = Vector2( 600, -40 )
nodes/vertex/27/node = SubResource( 100 )
nodes/vertex/27/position = Vector2( 910.176, 5.60956 )
nodes/vertex/28/node = SubResource( 101 )
nodes/vertex/28/position = Vector2( 1800, 180 )
nodes/vertex/29/node = SubResource( 102 )
nodes/vertex/29/position = Vector2( 1360, 60 )
nodes/vertex/30/node = SubResource( 104 )
nodes/vertex/30/position = Vector2( 1540, 60 )
nodes/vertex/31/node = SubResource( 107 )
nodes/vertex/31/position = Vector2( 940, -200 )
nodes/vertex/32/node = SubResource( 108 )
nodes/vertex/32/position = Vector2( 1960, 160 )
nodes/vertex/33/node = SubResource( 109 )
nodes/vertex/33/position = Vector2( 1460, -60 )
nodes/vertex/34/node = SubResource( 110 )
nodes/vertex/34/position = Vector2( 1168, -73.4252 )
nodes/vertex/35/node = SubResource( 111 )
nodes/vertex/35/position = Vector2( 2160, 160 )
nodes/vertex/36/node = SubResource( 112 )
nodes/vertex/36/position = Vector2( 2361.14, 184.136 )
nodes/vertex/37/node = SubResource( 113 )
nodes/vertex/37/position = Vector2( 2580, 260 )
nodes/vertex/38/node = SubResource( 114 )
nodes/vertex/38/position = Vector2( 2800, 280 )
nodes/vertex/39/node = SubResource( 115 )
nodes/vertex/39/position = Vector2( 1320, 140 )
nodes/vertex/40/node = SubResource( 117 )
nodes/vertex/40/position = Vector2( 680, 160 )
nodes/vertex/41/node = SubResource( 118 )
nodes/vertex/41/position = Vector2( 1100, 280 )
nodes/vertex/42/node = SubResource( 119 )
nodes/vertex/42/position = Vector2( 860, 440 )
nodes/vertex/43/node = SubResource( 120 )
nodes/vertex/43/position = Vector2( 3420, 160 )
nodes/vertex/44/node = SubResource( 121 )
nodes/vertex/44/position = Vector2( 2960, 220 )
nodes/vertex/45/node = SubResource( 122 )
nodes/vertex/45/position = Vector2( 3039.62, 334.488 )
nodes/vertex/46/node = SubResource( 123 )
nodes/vertex/46/position = Vector2( 3200, 200 )
nodes/vertex/connections = PoolIntArray( 3, 0, 4, 0, 4, 1, 5, 0, 5, 0, 6, 0, 2, 0, 11, 0, 11, 1, 12, 0, 6, 0, 10, 2, 12, 0, 15, 1, 2, 0, 8, 1, 16, 0, 0, 6, 10, 0, 20, 0, 13, 0, 20, 1, 14, 0, 22, 0, 22, 0, 13, 1, 11, 1, 23, 0, 23, 0, 24, 0, 24, 0, 13, 0, 4, 1, 25, 0, 25, 0, 26, 0, 26, 0, 27, 0, 27, 0, 28, 2, 29, 0, 30, 0, 30, 0, 28, 0, 20, 0, 28, 1, 28, 0, 32, 0, 22, 0, 33, 1, 33, 0, 32, 1, 31, 0, 34, 0, 34, 0, 33, 0, 25, 0, 31, 0, 32, 0, 35, 0, 35, 0, 36, 0, 36, 0, 37, 0, 37, 0, 38, 0, 37, 2, 38, 1, 38, 0, 0, 5, 39, 0, 30, 1, 40, 0, 8, 0, 8, 0, 10, 1, 15, 0, 10, 0, 8, 0, 41, 0, 41, 0, 15, 0, 42, 0, 41, 1, 36, 0, 43, 0, 45, 0, 43, 2, 43, 0, 0, 0, 44, 0, 46, 0, 46, 0, 43, 1 )
nodes/fragment/0/position = Vector2( 5780, -120 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( 320, 200 )
nodes/fragment/3/node = SubResource( 26 )
nodes/fragment/3/position = Vector2( 660, 200 )
nodes/fragment/6/node = SubResource( 76 )
nodes/fragment/6/position = Vector2( 320, -100 )
nodes/fragment/7/node = SubResource( 80 )
nodes/fragment/7/position = Vector2( -20, 40 )
nodes/fragment/9/node = SubResource( 81 )
nodes/fragment/9/position = Vector2( 200, 80 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 1080, -100 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( 920, 200 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 1220, 120 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( 1460, 120 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( 874.981, 107.47 )
nodes/fragment/20/node = SubResource( 14 )
nodes/fragment/20/position = Vector2( 1380, -140 )
nodes/fragment/21/node = SubResource( 15 )
nodes/fragment/21/position = Vector2( 1080, 60 )
nodes/fragment/22/node = SubResource( 16 )
nodes/fragment/22/position = Vector2( 1380, 40 )
nodes/fragment/23/node = SubResource( 17 )
nodes/fragment/23/position = Vector2( 1840, 0 )
nodes/fragment/24/node = SubResource( 18 )
nodes/fragment/24/position = Vector2( 1620, 0 )
nodes/fragment/25/node = SubResource( 21 )
nodes/fragment/25/position = Vector2( 1800, -200 )
nodes/fragment/26/node = SubResource( 22 )
nodes/fragment/26/position = Vector2( 2040, 0 )
nodes/fragment/27/node = SubResource( 23 )
nodes/fragment/27/position = Vector2( 580, 100 )
nodes/fragment/28/node = SubResource( 24 )
nodes/fragment/28/position = Vector2( 700, -20 )
nodes/fragment/29/node = SubResource( 25 )
nodes/fragment/29/position = Vector2( 860, -80 )
nodes/fragment/30/node = SubResource( 29 )
nodes/fragment/30/position = Vector2( 1560, -220 )
nodes/fragment/31/node = SubResource( 30 )
nodes/fragment/31/position = Vector2( 2229.44, -76.9214 )
nodes/fragment/32/node = SubResource( 31 )
nodes/fragment/32/position = Vector2( 560, -160 )
nodes/fragment/33/node = SubResource( 34 )
nodes/fragment/33/position = Vector2( 1960, -260 )
nodes/fragment/34/node = SubResource( 35 )
nodes/fragment/34/position = Vector2( 2462.57, -82.5425 )
nodes/fragment/35/node = SubResource( 38 )
nodes/fragment/35/position = Vector2( 2380, -300 )
nodes/fragment/36/node = SubResource( 39 )
nodes/fragment/36/position = Vector2( 2880, -140 )
nodes/fragment/37/node = SubResource( 42 )
nodes/fragment/37/position = Vector2( 2680, -100 )
nodes/fragment/38/node = SubResource( 45 )
nodes/fragment/38/position = Vector2( 2920, -40 )
nodes/fragment/39/node = SubResource( 46 )
nodes/fragment/39/position = Vector2( 3640, -60 )
nodes/fragment/40/node = SubResource( 49 )
nodes/fragment/40/position = Vector2( 3600, -240 )
nodes/fragment/41/node = SubResource( 50 )
nodes/fragment/41/position = Vector2( 3880, -60 )
nodes/fragment/42/node = SubResource( 51 )
nodes/fragment/42/position = Vector2( 3080, -180 )
nodes/fragment/43/node = SubResource( 52 )
nodes/fragment/43/position = Vector2( 3317.58, -152.785 )
nodes/fragment/44/node = SubResource( 55 )
nodes/fragment/44/position = Vector2( 3860, -360 )
nodes/fragment/45/node = SubResource( 56 )
nodes/fragment/45/position = Vector2( 4131.26, -127.336 )
nodes/fragment/46/node = SubResource( 57 )
nodes/fragment/46/position = Vector2( 3440, -380 )
nodes/fragment/47/node = SubResource( 58 )
nodes/fragment/47/position = Vector2( 3640, -360 )
nodes/fragment/48/node = SubResource( 59 )
nodes/fragment/48/position = Vector2( 5240, -220 )
nodes/fragment/49/node = SubResource( 62 )
nodes/fragment/49/position = Vector2( 4700, -280 )
nodes/fragment/50/node = SubResource( 63 )
nodes/fragment/50/position = Vector2( 4132.5, -224.534 )
nodes/fragment/51/node = SubResource( 64 )
nodes/fragment/51/position = Vector2( 4371.28, -187.534 )
nodes/fragment/53/node = SubResource( 65 )
nodes/fragment/53/position = Vector2( 4120, -400 )
nodes/fragment/54/node = SubResource( 66 )
nodes/fragment/54/position = Vector2( 4320, -420 )
nodes/fragment/55/node = SubResource( 69 )
nodes/fragment/55/position = Vector2( 5060, -360 )
nodes/fragment/56/node = SubResource( 70 )
nodes/fragment/56/position = Vector2( 4560, -440 )
nodes/fragment/57/node = SubResource( 71 )
nodes/fragment/57/position = Vector2( 4780, -400 )
nodes/fragment/58/node = SubResource( 74 )
nodes/fragment/58/position = Vector2( 5140, -80 )
nodes/fragment/59/node = SubResource( 75 )
nodes/fragment/59/position = Vector2( 5560, -120 )
nodes/fragment/60/node = SubResource( 77 )
nodes/fragment/60/position = Vector2( 5400, -200 )
nodes/fragment/61/node = SubResource( 78 )
nodes/fragment/61/position = Vector2( 5600, -20 )
nodes/fragment/62/node = SubResource( 79 )
nodes/fragment/62/position = Vector2( 5380, 60 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 7, 0, 9, 0, 3, 1, 14, 0, 3, 1, 15, 0, 15, 0, 17, 0, 14, 0, 18, 0, 17, 0, 18, 1, 19, 0, 21, 0, 21, 2, 22, 0, 21, 0, 20, 0, 20, 0, 23, 0, 22, 0, 24, 0, 24, 0, 23, 1, 21, 1, 25, 0, 25, 0, 26, 0, 23, 0, 26, 1, 2, 0, 27, 0, 27, 0, 19, 0, 28, 0, 29, 0, 29, 1, 30, 0, 30, 0, 31, 0, 26, 0, 31, 1, 2, 0, 32, 0, 32, 0, 28, 0, 29, 1, 33, 0, 33, 0, 34, 0, 31, 0, 34, 1, 21, 1, 35, 0, 35, 0, 36, 0, 34, 0, 37, 0, 37, 0, 36, 1, 34, 0, 38, 0, 36, 0, 39, 0, 38, 0, 39, 1, 40, 0, 41, 0, 39, 0, 41, 1, 3, 1, 42, 0, 42, 0, 43, 0, 43, 0, 40, 0, 44, 0, 45, 0, 41, 0, 45, 1, 3, 0, 46, 0, 46, 0, 47, 0, 47, 0, 44, 0, 45, 0, 48, 1, 49, 0, 48, 2, 3, 1, 50, 0, 50, 0, 51, 0, 51, 0, 49, 0, 53, 0, 54, 0, 54, 1, 56, 0, 56, 0, 57, 0, 57, 0, 55, 0, 55, 0, 48, 0, 51, 0, 58, 0, 58, 0, 59, 2, 59, 0, 0, 0, 48, 0, 59, 1, 60, 0, 59, 0, 18, 0, 61, 0, 61, 0, 0, 1, 62, 0, 61, 2 )

[sub_resource type="ShaderMaterial" id=128]
shader = SubResource( 127 )
shader_param/pos_bot = Vector3( 0, 0, 0 )
shader_param/pos_mid = Vector3( 0, -3.861, 0 )
shader_param/mid = Vector3( 0, 1.945, 0 )
shader_param/deform = 0.0
shader_param/alpha = 0.0

[sub_resource type="Animation" id=129]
resource_name = "New Anim"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("tower building:material/0:shader_param/pos_bot")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2, 2.01, 2.3, 3 ),
"transitions": PoolRealArray( 1, 0.00515434, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, -1.724, 0 ), Vector3( 0, 5.094, 0 ), Vector3( 0, 0.739, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("tower building:material/0:shader_param/mid")
tracks/1/interp = 1
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 1, 1.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 5.58, 0 ), Vector3( 0, 6.005, 0 ), Vector3( 0, 1.945, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("tower building:material/0:shader_param/pos_mid")
tracks/2/interp = 1
tracks/2/loop_wrap = false
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 2, 3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 4.04, 0 ), Vector3( 0, -1.398, 0 ), Vector3( 0, -2.866, 0 ), Vector3( 0, -3.861, 0 ) ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="tower building" type="MeshInstance" parent="."]
extra_cull_margin = 4.17
mesh = SubResource( 1 )
material/0 = SubResource( 128 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.997817, 0.000712383, -0.0660437, 0, 0.999942, 0.0107859, 0.0660475, -0.0107624, 0.997758, -0.450614, 4.07497, 6.61542 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 129 )
