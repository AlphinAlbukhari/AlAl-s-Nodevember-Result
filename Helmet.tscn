[gd_scene load_steps=105 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="SphereMesh" id=1]
height = 2.411

[sub_resource type="VisualShaderNodeVectorOp" id=2]
operator = 6

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 0.0287356, 0.0344828, 0.965517, 0.971787 )
colors = PoolColorArray( 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = SubResource( 4 )

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0.396552, 0.431034 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = SubResource( 8 )

[sub_resource type="VisualShaderNodeScalarOp" id=10]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=12]

[sub_resource type="Gradient" id=13]
offsets = PoolRealArray( 0, 0.114943 )

[sub_resource type="GradientTexture" id=14]
gradient = SubResource( 13 )

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = SubResource( 14 )

[sub_resource type="VisualShaderNodeVectorOp" id=16]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=17]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=18]
operator = 2

[sub_resource type="Gradient" id=19]
offsets = PoolRealArray( 0.529781, 0.589342, 1 )
colors = PoolColorArray( 0.664063, 0.664063, 0.664063, 1, 0.195313, 0.195313, 0.195313, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=20]
gradient = SubResource( 19 )

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = SubResource( 20 )

[sub_resource type="Gradient" id=22]
offsets = PoolRealArray( 0.68652, 0.702194 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=23]
gradient = SubResource( 22 )

[sub_resource type="VisualShaderNodeTexture" id=24]
texture = SubResource( 23 )

[sub_resource type="VisualShaderNodeScalarOp" id=25]
output_port_for_preview = 0
operator = 2

[sub_resource type="OpenSimplexNoise" id=26]
period = 30.4
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=27]
seamless = true
noise = SubResource( 26 )

[sub_resource type="VisualShaderNodeTexture" id=28]
texture = SubResource( 27 )

[sub_resource type="VisualShaderNodeVectorInterp" id=29]

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=31]

[sub_resource type="VisualShaderNodeScalarOp" id=32]
default_input_values = [ 0, 0.0, 1, 0.4 ]

[sub_resource type="Gradient" id=33]
offsets = PoolRealArray( 0, 0.375, 0.409091, 0.698864 )
colors = PoolColorArray( 0, 0, 0, 1, 0.824219, 0.824219, 0.824219, 1, 0.613281, 0.613281, 0.613281, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=34]
gradient = SubResource( 33 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = SubResource( 34 )

[sub_resource type="Gradient" id=36]

[sub_resource type="GradientTexture" id=37]
gradient = SubResource( 36 )

[sub_resource type="VisualShaderNodeTexture" id=38]
texture = SubResource( 37 )

[sub_resource type="VisualShaderNodeVectorOp" id=39]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=40]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 5

[sub_resource type="VisualShaderNodeVectorOp" id=41]

[sub_resource type="VisualShaderNodeScalarOp" id=42]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="Gradient" id=43]
offsets = PoolRealArray( 0.0511364, 0.784091 )
colors = PoolColorArray( 0.214844, 0.214844, 0.214844, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=44]
gradient = SubResource( 43 )

[sub_resource type="VisualShaderNodeTexture" id=45]
texture = SubResource( 44 )

[sub_resource type="NoiseTexture" id=46]
seamless = true
as_normalmap = true
bump_strength = 3.0
noise = SubResource( 26 )

[sub_resource type="VisualShaderNodeTexture" id=47]
output_port_for_preview = 0
texture = SubResource( 46 )

[sub_resource type="VisualShaderNodeScalarConstant" id=48]
constant = 2.0

[sub_resource type="VisualShaderNodeVectorInterp" id=49]

[sub_resource type="VisualShaderNodeScalarUniform" id=50]
uniform_name = "alpha"

[sub_resource type="VisualShaderNodeVectorInterp" id=51]

[sub_resource type="VisualShaderNodeScalarUniform" id=52]
uniform_name = "albedo"

[sub_resource type="VisualShaderNodeScalarInterp" id=53]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=54]
uniform_name = "border"

[sub_resource type="VisualShaderNodeScalarOp" id=55]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=56]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=57]

[sub_resource type="Gradient" id=58]
offsets = PoolRealArray( 0.695402, 0.701149 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=59]
gradient = SubResource( 58 )

[sub_resource type="VisualShaderNodeTexture" id=60]
texture = SubResource( 59 )

[sub_resource type="Gradient" id=61]
offsets = PoolRealArray( 0.327586, 0.33908, 0.436782, 0.448276 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=62]
gradient = SubResource( 61 )

[sub_resource type="VisualShaderNodeTexture" id=63]
texture = SubResource( 62 )

[sub_resource type="Gradient" id=64]
offsets = PoolRealArray( 0.106583, 0.112853, 0.890805, 0.896552 )
colors = PoolColorArray( 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=65]
gradient = SubResource( 64 )

[sub_resource type="VisualShaderNodeTexture" id=66]
texture = SubResource( 65 )

[sub_resource type="VisualShaderNodeVectorOp" id=67]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0.1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=68]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=69]

[sub_resource type="Gradient" id=70]
offsets = PoolRealArray( 0.269608, 0.327586 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=71]
gradient = SubResource( 70 )

[sub_resource type="VisualShaderNodeTexture" id=72]
texture = SubResource( 71 )

[sub_resource type="VisualShaderNodeVectorOp" id=73]
operator = 2

[sub_resource type="Gradient" id=74]
offsets = PoolRealArray( 0.602941, 0.620985, 0.637306, 0.653105, 0.668094, 0.680942, 0.749465, 0.762313 )
colors = PoolColorArray( 0, 0, 0, 1, 0.234375, 0.234375, 0.234375, 1, 0.0703125, 0.0703125, 0.0703125, 1, 0.21875, 0.21875, 0.21875, 1, 0.183594, 0.183594, 0.183594, 1, 0.429688, 0.429688, 0.429688, 1, 0.410156, 0.410156, 0.410156, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=75]
gradient = SubResource( 74 )

[sub_resource type="VisualShaderNodeTexture" id=76]
texture = SubResource( 75 )

[sub_resource type="VisualShaderNodeInput" id=77]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=78]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=79]

[sub_resource type="VisualShaderNodeVectorOp" id=80]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=81]
input_name = "vertex"

[sub_resource type="Gradient" id=82]
offsets = PoolRealArray( 0.672414, 0.683908 )
colors = PoolColorArray( 0, 0, 0, 1, 0.00390625, 0.00390625, 0.00390625, 1 )

[sub_resource type="GradientTexture" id=83]
gradient = SubResource( 82 )

[sub_resource type="VisualShaderNodeTexture" id=84]
texture = SubResource( 83 )

[sub_resource type="VisualShaderNodeVectorOp" id=85]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=86]

[sub_resource type="VisualShaderNodeVectorOp" id=87]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 2, 0 ) ]

[sub_resource type="VisualShaderNodeVectorInterp" id=88]

[sub_resource type="VisualShaderNodeInput" id=89]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=90]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeInput" id=91]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=92]

[sub_resource type="VisualShaderNodeVectorFunc" id=93]
function = 6

[sub_resource type="Gradient" id=94]
offsets = PoolRealArray( 0, 0.186275 )
colors = PoolColorArray( 0.078125, 0.078125, 0.078125, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=95]
gradient = SubResource( 94 )

[sub_resource type="VisualShaderNodeTexture" id=96]
texture = SubResource( 95 )

[sub_resource type="VisualShaderNodeVectorOp" id=97]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=98]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=99]

[sub_resource type="VisualShader" id=100]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_vtx_20;
uniform sampler2D tex_vtx_15;
uniform sampler2D tex_vtx_13;
uniform sampler2D tex_vtx_6;
uniform float morph;
uniform sampler2D tex_frg_30;
uniform sampler2D tex_frg_31;
uniform sampler2D tex_frg_25;
uniform sampler2D tex_frg_36;
uniform sampler2D tex_frg_23;
uniform sampler2D tex_frg_13;
uniform sampler2D tex_frg_11;
uniform sampler2D tex_frg_9;
uniform sampler2D tex_frg_8;
uniform sampler2D tex_frg_22;
uniform float border;
uniform float albedo;
uniform sampler2D tex_frg_7;
uniform sampler2D tex_frg_17;
uniform float alpha;
uniform sampler2D tex_frg_37;



void vertex() {
// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// VectorDecompose:12
	float n_out12p0 = n_out11p0.x;
	float n_out12p1 = n_out11p0.y;
	float n_out12p2 = n_out11p0.z;

// Texture:20
	vec4 tex_vtx_20_read = texture(tex_vtx_20, vec3(n_out12p1).xy);
	vec3 n_out20p0 = tex_vtx_20_read.rgb;
	float n_out20p1 = tex_vtx_20_read.a;

// Input:16
	vec3 n_out16p0 = NORMAL;

// VectorOp:23
	vec3 n_in23p1 = vec3(0.00000, 2.00000, 0.00000);
	vec3 n_out23p0 = n_out16p0 + n_in23p1;

// VectorOp:21
	vec3 n_out21p0 = n_out20p0 * n_out23p0;

// Texture:15
	vec4 tex_vtx_15_read = texture(tex_vtx_15, vec3(n_out12p1).xy);
	vec3 n_out15p0 = tex_vtx_15_read.rgb;
	float n_out15p1 = tex_vtx_15_read.a;

// VectorOp:19
	vec3 n_in19p1 = vec3(1.00000, 0.00000, 1.00000);
	vec3 n_out19p0 = n_out16p0 * n_in19p1;

// VectorOp:17
	vec3 n_out17p0 = n_out15p0 * n_out19p0;

// Texture:13
	vec4 tex_vtx_13_read = texture(tex_vtx_13, vec3(n_out12p1).xy);
	vec3 n_out13p0 = tex_vtx_13_read.rgb;
	float n_out13p1 = tex_vtx_13_read.a;

// Input:3
	vec3 n_out3p0 = VERTEX;

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// VectorFunc:5
	vec3 n_out5p0 = abs(vec3(n_out4p0));

// Texture:6
	vec4 tex_vtx_6_read = texture(tex_vtx_6, n_out5p0.xy);
	vec3 n_out6p0 = tex_vtx_6_read.rgb;
	float n_out6p1 = tex_vtx_6_read.a;

// VectorOp:14
	vec3 n_out14p0 = n_out13p0 * n_out6p0;

// Input:8
	vec3 n_out8p0 = NORMAL;

// VectorOp:10
	vec3 n_in10p1 = vec3(0.00000, 1.00000, 0.10000);
	vec3 n_out10p0 = n_out8p0 * n_in10p1;

// VectorOp:7
	vec3 n_out7p0 = n_out14p0 * n_out10p0;

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorOp:9
	vec3 n_out9p0 = n_out7p0 + n_out2p0;

// VectorOp:18
	vec3 n_out18p0 = n_out17p0 + n_out9p0;

// VectorOp:22
	vec3 n_out22p0 = n_out21p0 + n_out18p0;

// Input:25
	vec3 n_out25p0 = VERTEX;

// ScalarUniform:26
	float n_out26p0 = morph;

// VectorMix:24
	vec3 n_out24p0 = mix(n_out22p0, n_out25p0, vec3(n_out26p0));

// Output:0
	VERTEX = n_out24p0;
	COLOR.rgb = n_out2p0;

}

void fragment() {
// Input:27
	vec3 n_out27p0 = COLOR.rgb;

// VectorDecompose:28
	float n_out28p0 = n_out27p0.x;
	float n_out28p1 = n_out27p0.y;
	float n_out28p2 = n_out27p0.z;

// ScalarOp:29
	float n_in29p1 = 0.40000;
	float n_out29p0 = n_out28p0 + n_in29p1;

// Texture:30
	vec4 tex_frg_30_read = texture(tex_frg_30, vec3(n_out29p0).xy);
	vec3 n_out30p0 = tex_frg_30_read.rgb;
	float n_out30p1 = tex_frg_30_read.a;

// ScalarOp:35
	float n_in35p1 = 2.00000;
	float n_out35p0 = pow(dot(n_out30p0, vec3(0.333333, 0.333333, 0.333333)), n_in35p1);

// Texture:31
	vec4 tex_frg_31_read = texture(tex_frg_31, vec3(n_out28p1).xy);
	vec3 n_out31p0 = tex_frg_31_read.rgb;
	float n_out31p1 = tex_frg_31_read.a;

// ScalarOp:33
	float n_in33p1 = 3.00000;
	float n_out33p0 = pow(dot(n_out31p0, vec3(0.333333, 0.333333, 0.333333)), n_in33p1);

// VectorOp:32
	vec3 n_out32p0 = vec3(n_out35p0) * vec3(n_out33p0);

// Texture:25
	vec4 tex_frg_25_read = texture(tex_frg_25, UV.xy);
	vec3 n_out25p0 = tex_frg_25_read.rgb;
	float n_out25p1 = tex_frg_25_read.a;

// Texture:36
	vec4 tex_frg_36_read = texture(tex_frg_36, n_out25p0.xy);
	vec3 n_out36p0 = tex_frg_36_read.rgb;
	float n_out36p1 = tex_frg_36_read.a;

// ScalarOp:46
	float n_in46p1 = 0.50000;
	float n_out46p0 = dot(n_out36p0, vec3(0.333333, 0.333333, 0.333333)) * n_in46p1;

// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out5p0.x;
	float n_out6p1 = n_out5p0.y;
	float n_out6p2 = n_out5p0.z;

// Texture:23
	vec4 tex_frg_23_read = texture(tex_frg_23, vec3(n_out6p1).xy);
	vec3 n_out23p0 = tex_frg_23_read.rgb;
	float n_out23p1 = tex_frg_23_read.a;

// Texture:13
	vec4 tex_frg_13_read = texture(tex_frg_13, vec3(n_out6p1).xy);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// Texture:11
	vec4 tex_frg_11_read = texture(tex_frg_11, UV.xy);
	vec3 n_out11p0 = tex_frg_11_read.rgb;
	float n_out11p1 = tex_frg_11_read.a;

// ScalarOp:20
	float n_out20p0 = max(dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out11p0, vec3(0.333333, 0.333333, 0.333333)));

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, vec3(n_out6p0).xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// Texture:8
	vec4 tex_frg_8_read = texture(tex_frg_8, vec3(n_out6p1).xy);
	vec3 n_out8p0 = tex_frg_8_read.rgb;
	float n_out8p1 = tex_frg_8_read.a;

// VectorOp:19
	vec3 n_out19p0 = max(n_out9p0, n_out8p0);

// ScalarOp:21
	float n_out21p0 = n_out20p0 * dot(n_out19p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:24
	float n_out24p0 = dot(n_out23p0, vec3(0.333333, 0.333333, 0.333333)) * n_out21p0;

// Texture:22
	vec4 tex_frg_22_read = texture(tex_frg_22, vec3(n_out24p0).xy);
	vec3 n_out22p0 = tex_frg_22_read.rgb;
	float n_out22p1 = tex_frg_22_read.a;

// ScalarUniform:45
	float n_out45p0 = border;

// ScalarMix:44
	float n_in44p1 = 0.00000;
	float n_out44p0 = mix(n_out22p1, n_in44p1, n_out45p0);

// VectorMix:26
	vec3 n_out26p0 = mix(vec3(n_out46p0), n_out22p0, vec3(n_out44p0));

// VectorOp:34
	vec3 n_out34p0 = n_out32p0 + n_out26p0;

// ScalarUniform:43
	float n_out43p0 = albedo;

// VectorMix:42
	vec3 n_in42p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out42p0 = mix(n_out34p0, n_in42p1, vec3(n_out43p0));

// ScalarOp:14
	float n_out14p0 = max(n_out13p1, n_out11p1);

// VectorOp:10
	vec3 n_out10p0 = max(vec3(n_out9p1), vec3(n_out8p1));

// ScalarOp:12
	float n_out12p0 = n_out14p0 * dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333));

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, vec3(n_out6p1).xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// ScalarOp:15
	float n_out15p0 = n_out12p0 * dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarClamp:16
	float n_in16p1 = 0.00000;
	float n_in16p2 = 1.00000;
	float n_out16p0 = clamp(n_out15p0, n_in16p1, n_in16p2);

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, vec3(n_out16p0).xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// ScalarUniform:41
	float n_out41p0 = alpha;

// VectorMix:40
	vec3 n_in40p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out40p0 = mix(n_out17p0, n_in40p1, vec3(n_out41p0));

// Scalar:39
	float n_out39p0 = 2.000000;

// Texture:37
	vec4 tex_frg_37_read = textureLod(tex_frg_37, UV.xy, n_out39p0);
	vec3 n_out37p0 = tex_frg_37_read.rgb;
	float n_out37p1 = tex_frg_37_read.a;

// Output:0
	ALBEDO = n_out42p0;
	ALPHA = dot(n_out40p0, vec3(0.333333, 0.333333, 0.333333));
	ROUGHNESS = dot(n_out34p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out37p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 1389.97, -196.967 )
modes/cull = 2
modes/depth_draw = 3
nodes/vertex/0/position = Vector2( 1660, -100 )
nodes/vertex/2/node = SubResource( 81 )
nodes/vertex/2/position = Vector2( 420, 280 )
nodes/vertex/3/node = SubResource( 91 )
nodes/vertex/3/position = Vector2( -560, 60 )
nodes/vertex/4/node = SubResource( 92 )
nodes/vertex/4/position = Vector2( -400, 40 )
nodes/vertex/5/node = SubResource( 93 )
nodes/vertex/5/position = Vector2( -200, 40 )
nodes/vertex/6/node = SubResource( 96 )
nodes/vertex/6/position = Vector2( -40, 0 )
nodes/vertex/7/node = SubResource( 97 )
nodes/vertex/7/position = Vector2( 420, 80 )
nodes/vertex/8/node = SubResource( 98 )
nodes/vertex/8/position = Vector2( -280, 260 )
nodes/vertex/9/node = SubResource( 99 )
nodes/vertex/9/position = Vector2( 620, 120 )
nodes/vertex/10/node = SubResource( 67 )
nodes/vertex/10/position = Vector2( -60, 200 )
nodes/vertex/11/node = SubResource( 68 )
nodes/vertex/11/position = Vector2( -400, -180 )
nodes/vertex/12/node = SubResource( 69 )
nodes/vertex/12/position = Vector2( -200, -200 )
nodes/vertex/13/node = SubResource( 72 )
nodes/vertex/13/position = Vector2( 60, -180 )
nodes/vertex/14/node = SubResource( 73 )
nodes/vertex/14/position = Vector2( 240, 40 )
nodes/vertex/15/node = SubResource( 76 )
nodes/vertex/15/position = Vector2( 360, -280 )
nodes/vertex/16/node = SubResource( 77 )
nodes/vertex/16/position = Vector2( 220, -80 )
nodes/vertex/17/node = SubResource( 78 )
nodes/vertex/17/position = Vector2( 600, -120 )
nodes/vertex/18/node = SubResource( 79 )
nodes/vertex/18/position = Vector2( 820, -20 )
nodes/vertex/19/node = SubResource( 80 )
nodes/vertex/19/position = Vector2( 400, -80 )
nodes/vertex/20/node = SubResource( 84 )
nodes/vertex/20/position = Vector2( 560, -440 )
nodes/vertex/21/node = SubResource( 85 )
nodes/vertex/21/position = Vector2( 960, -160 )
nodes/vertex/22/node = SubResource( 86 )
nodes/vertex/22/position = Vector2( 1160, -80 )
nodes/vertex/23/node = SubResource( 87 )
nodes/vertex/23/position = Vector2( 780, -160 )
nodes/vertex/24/node = SubResource( 88 )
nodes/vertex/24/position = Vector2( 1416.16, -56.0433 )
nodes/vertex/25/node = SubResource( 89 )
nodes/vertex/25/position = Vector2( 1140, 20 )
nodes/vertex/26/node = SubResource( 90 )
nodes/vertex/26/position = Vector2( 1180, 100 )
nodes/vertex/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 7, 0, 9, 0, 2, 0, 9, 1, 2, 0, 0, 6, 8, 0, 10, 0, 10, 0, 7, 1, 11, 0, 12, 0, 12, 1, 13, 0, 13, 0, 14, 0, 6, 0, 14, 1, 14, 0, 7, 0, 12, 1, 15, 0, 15, 0, 17, 0, 17, 0, 18, 0, 9, 0, 18, 1, 16, 0, 19, 0, 19, 0, 17, 1, 12, 1, 20, 0, 20, 0, 21, 0, 21, 0, 22, 0, 18, 0, 22, 1, 16, 0, 23, 0, 23, 0, 21, 1, 22, 0, 24, 0, 25, 0, 24, 1, 24, 0, 0, 0, 26, 0, 24, 2 )
nodes/fragment/0/position = Vector2( 2620, -120 )
nodes/fragment/5/node = SubResource( 56 )
nodes/fragment/5/position = Vector2( -480, 0 )
nodes/fragment/6/node = SubResource( 57 )
nodes/fragment/6/position = Vector2( -320, 20 )
nodes/fragment/7/node = SubResource( 60 )
nodes/fragment/7/position = Vector2( -40, 200 )
nodes/fragment/8/node = SubResource( 63 )
nodes/fragment/8/position = Vector2( -40, 20 )
nodes/fragment/9/node = SubResource( 66 )
nodes/fragment/9/position = Vector2( -60, -160 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( 140, 0 )
nodes/fragment/11/node = SubResource( 5 )
nodes/fragment/11/position = Vector2( 140, -180 )
nodes/fragment/12/node = SubResource( 6 )
nodes/fragment/12/position = Vector2( 560, -60 )
nodes/fragment/13/node = SubResource( 9 )
nodes/fragment/13/position = Vector2( 181.708, -361.081 )
nodes/fragment/14/node = SubResource( 10 )
nodes/fragment/14/position = Vector2( 390.933, -183.768 )
nodes/fragment/15/node = SubResource( 11 )
nodes/fragment/15/position = Vector2( 760, 20 )
nodes/fragment/16/node = SubResource( 12 )
nodes/fragment/16/position = Vector2( 920, 60 )
nodes/fragment/17/node = SubResource( 15 )
nodes/fragment/17/position = Vector2( 1100, 40 )
nodes/fragment/19/node = SubResource( 16 )
nodes/fragment/19/position = Vector2( 760, -80 )
nodes/fragment/20/node = SubResource( 17 )
nodes/fragment/20/position = Vector2( 760, -200 )
nodes/fragment/21/node = SubResource( 18 )
nodes/fragment/21/position = Vector2( 940, -140 )
nodes/fragment/22/node = SubResource( 21 )
nodes/fragment/22/position = Vector2( 1300, -140 )
nodes/fragment/23/node = SubResource( 24 )
nodes/fragment/23/position = Vector2( 940, -360 )
nodes/fragment/24/node = SubResource( 25 )
nodes/fragment/24/position = Vector2( 1120, -160 )
nodes/fragment/25/node = SubResource( 28 )
nodes/fragment/25/position = Vector2( 1280, -360 )
nodes/fragment/26/node = SubResource( 29 )
nodes/fragment/26/position = Vector2( 1900, -100 )
nodes/fragment/27/node = SubResource( 30 )
nodes/fragment/27/position = Vector2( 1080, -500 )
nodes/fragment/28/node = SubResource( 31 )
nodes/fragment/28/position = Vector2( 1260, -500 )
nodes/fragment/29/node = SubResource( 32 )
nodes/fragment/29/position = Vector2( 1460, -540 )
nodes/fragment/30/node = SubResource( 35 )
nodes/fragment/30/position = Vector2( 1640, -580 )
nodes/fragment/31/node = SubResource( 38 )
nodes/fragment/31/position = Vector2( 1520, -400 )
nodes/fragment/32/node = SubResource( 39 )
nodes/fragment/32/position = Vector2( 2000, -360 )
nodes/fragment/33/node = SubResource( 40 )
nodes/fragment/33/position = Vector2( 1700, -340 )
nodes/fragment/34/node = SubResource( 41 )
nodes/fragment/34/position = Vector2( 2200, -220 )
nodes/fragment/35/node = SubResource( 42 )
nodes/fragment/35/position = Vector2( 1820, -480 )
nodes/fragment/36/node = SubResource( 45 )
nodes/fragment/36/position = Vector2( 1500, -260 )
nodes/fragment/37/node = SubResource( 47 )
nodes/fragment/37/position = Vector2( 2200, 100 )
nodes/fragment/39/node = SubResource( 48 )
nodes/fragment/39/position = Vector2( 1920, 180 )
nodes/fragment/40/node = SubResource( 49 )
nodes/fragment/40/position = Vector2( 2360, -60 )
nodes/fragment/41/node = SubResource( 50 )
nodes/fragment/41/position = Vector2( 2120, 0 )
nodes/fragment/42/node = SubResource( 51 )
nodes/fragment/42/position = Vector2( 2380, -180 )
nodes/fragment/43/node = SubResource( 52 )
nodes/fragment/43/position = Vector2( 2120, -100 )
nodes/fragment/44/node = SubResource( 53 )
nodes/fragment/44/position = Vector2( 1717.75, -39.9671 )
nodes/fragment/45/node = SubResource( 54 )
nodes/fragment/45/position = Vector2( 1480, 40 )
nodes/fragment/46/node = SubResource( 55 )
nodes/fragment/46/position = Vector2( 1700, -180 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 0, 6, 1, 8, 0, 6, 0, 9, 0, 6, 1, 7, 0, 10, 0, 12, 1, 6, 1, 13, 0, 14, 0, 12, 0, 12, 0, 15, 0, 15, 0, 16, 0, 7, 0, 15, 1, 16, 0, 17, 0, 9, 1, 10, 0, 8, 1, 10, 1, 9, 0, 19, 0, 8, 0, 19, 1, 11, 1, 14, 1, 13, 1, 14, 0, 13, 0, 20, 0, 11, 0, 20, 1, 20, 0, 21, 0, 19, 0, 21, 1, 6, 1, 23, 0, 23, 0, 24, 0, 21, 0, 24, 1, 24, 0, 22, 0, 28, 0, 29, 0, 29, 0, 30, 0, 28, 1, 31, 0, 31, 0, 33, 0, 33, 0, 32, 1, 27, 0, 28, 0, 32, 0, 34, 0, 26, 0, 34, 1, 30, 0, 35, 0, 35, 0, 32, 0, 25, 0, 36, 0, 34, 0, 0, 3, 37, 0, 0, 8, 39, 0, 37, 1, 17, 0, 40, 0, 40, 0, 0, 1, 41, 0, 40, 2, 43, 0, 42, 2, 42, 0, 0, 0, 34, 0, 42, 0, 22, 0, 26, 1, 22, 1, 44, 0, 44, 0, 26, 2, 45, 0, 44, 2, 36, 0, 46, 0, 46, 0, 26, 0 )

[sub_resource type="ShaderMaterial" id=101]
shader = SubResource( 100 )
shader_param/morph = 1.0
shader_param/border = 1.0
shader_param/albedo = 1.0
shader_param/alpha = 1.0

[sub_resource type="Animation" id=102]
length = 9.0
tracks/0/type = "value"
tracks/0/path = NodePath("Helmet:material/0:shader_param/albedo")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 1.8, 2.2 ),
"transitions": PoolRealArray( 1, 1, 0.574349, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 1.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Helmet:material/0:shader_param/border")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 2.5, 2.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 1.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Helmet:material/0:shader_param/morph")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 8.5, 9 ),
"transitions": PoolRealArray( 1, 0.517632, 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0, 0.0, 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Helmet:material/0:shader_param/alpha")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 1, 1.3, 8.9, 9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 1.0, 1.0, 1.0, 0.0, 0.0, 1.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Helmet:rotation_degrees")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 3.3, 8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 720, 0 ) ]
}

[sub_resource type="Animation" id=103]
resource_name = "New Anim (2)"
length = 4.7
tracks/0/type = "value"
tracks/0/path = NodePath("Helmet:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 4.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 720, 0 ) ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="Helmet" type="MeshInstance" parent="."]
transform = Transform( 0.999991, 0, 0.00413518, 0, 1.0367, 0, -0.00413518, 0, 0.999991, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 101 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 102 )
"anims/New Anim (2)" = SubResource( 103 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.995996, 0.0117044, -0.0886289, 0, 0.991392, 0.130924, 0.0893984, -0.1304, 0.987423, -0.484199, 0.291385, 4 )

[node name="this is free" type="Label" parent="."]
visible = false
margin_right = 40.0
margin_bottom = 14.0
text = "As you may see, the subdivision is low and it use the default subdivision, which should be performance friendly and this one is MIT-Licensed.
If you can, try making a normal map and I guess that's a challenge from me"
__meta__ = {
"_edit_use_anchors_": false
}
