[gd_scene load_steps=80 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="CylinderMesh" id=1]
top_radius = 0.2
bottom_radius = 0.2
height = 5.0

[sub_resource type="VisualShaderNodeVectorOp" id=2]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0.508108, 1 )
colors = PoolColorArray( 0.648438, 0.648438, 0.648438, 1, 0.1875, 0.1875, 0.1875, 1 )

[sub_resource type="GradientTexture" id=5]
gradient = SubResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = SubResource( 5 )

[sub_resource type="VisualShaderNodeVectorInterp" id=7]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 15

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 31

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=13]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=14]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3, 2.2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=15]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.75, 0.75, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=16]
output_port_for_preview = 0

[sub_resource type="Gradient" id=17]
offsets = PoolRealArray( 0.291892, 0.340541 )

[sub_resource type="GradientTexture" id=18]
gradient = SubResource( 17 )

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = SubResource( 18 )

[sub_resource type="VisualShaderNodeVectorLen" id=20]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = SubResource( 18 )

[sub_resource type="VisualShaderNodeVectorOp" id=22]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 3, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.03, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=25]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarFunc" id=26]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=27]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.8, 0.82, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=28]

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="Gradient" id=30]
offsets = PoolRealArray( 0.0378378, 0.0594595 )

[sub_resource type="GradientTexture" id=31]
gradient = SubResource( 30 )

[sub_resource type="VisualShaderNodeTexture" id=32]
texture = SubResource( 31 )

[sub_resource type="VisualShaderNodeScalarOp" id=33]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorLen" id=34]

[sub_resource type="VisualShaderNodeScalarOp" id=35]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=36]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.75, 0.75, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=37]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.14, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=38]
texture = SubResource( 31 )

[sub_resource type="VisualShaderNodeScalarOp" id=39]
operator = 2

[sub_resource type="Gradient" id=40]
offsets = PoolRealArray( 0.108108, 0.459459 )

[sub_resource type="GradientTexture" id=41]
gradient = SubResource( 40 )

[sub_resource type="VisualShaderNodeTexture" id=42]
texture = SubResource( 41 )

[sub_resource type="VisualShaderNodeVectorLen" id=43]

[sub_resource type="VisualShaderNodeScalarOp" id=44]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="Gradient" id=45]
offsets = PoolRealArray( 0.87027, 0.886486 )
colors = PoolColorArray( 0.554688, 0, 0, 0, 1, 0, 0, 1 )

[sub_resource type="GradientTexture" id=46]
gradient = SubResource( 45 )

[sub_resource type="VisualShaderNodeTexture" id=47]
texture = SubResource( 46 )

[sub_resource type="VisualShaderNodeVectorInterp" id=48]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=49]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=50]
function = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=51]
constant = 1.57

[sub_resource type="VisualShaderNodeScalarOp" id=52]

[sub_resource type="VisualShaderNodeScalarOp" id=53]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=54]

[sub_resource type="VisualShaderNodeVectorOp" id=55]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1.1, 2.2 ) ]

[sub_resource type="VisualShaderNodeVectorInterp" id=56]

[sub_resource type="VisualShaderNodeInput" id=57]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=58]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=59]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=60]

[sub_resource type="VisualShaderNodeScalarClamp" id=61]

[sub_resource type="VisualShaderNodeVectorOp" id=62]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 6.3, 6.3, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=63]
function = 19

[sub_resource type="VisualShaderNodeVectorCompose" id=64]

[sub_resource type="VisualShaderNodeScalarOp" id=65]
operator = 6

[sub_resource type="VisualShaderNodeVectorInterp" id=66]

[sub_resource type="VisualShaderNodeInput" id=67]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=68]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeVectorDecompose" id=69]

[sub_resource type="VisualShaderNodeScalarOp" id=70]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=71]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=72]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=73]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=74]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=75]
function = 0

[sub_resource type="VisualShader" id=76]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform float morph;
uniform sampler2D tex_frg_14;
uniform sampler2D tex_frg_41;
uniform sampler2D tex_frg_36;
uniform sampler2D tex_frg_26;
uniform sampler2D tex_frg_28;
uniform sampler2D tex_frg_43;
uniform sampler2D tex_frg_7;



void vertex() {
// Input:18
	vec3 n_out18p0 = VERTEX;

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Scalar:12
	float n_out12p0 = 1.570000;

// ScalarFunc:11
	float n_out11p0 = cos(n_out12p0);

// ScalarOp:6
	float n_out6p0 = n_out3p1 * n_out11p0;

// ScalarFunc:8
	float n_out8p0 = sin(n_out12p0);

// ScalarOp:7
	float n_out7p0 = n_out3p2 * n_out8p0;

// ScalarOp:14
	float n_out14p0 = n_out6p0 - n_out7p0;

// ScalarFunc:9
	float n_out9p0 = sin(n_out12p0);

// ScalarOp:5
	float n_out5p0 = n_out3p1 * n_out9p0;

// ScalarFunc:10
	float n_out10p0 = cos(n_out12p0);

// ScalarOp:4
	float n_out4p0 = n_out3p2 * n_out10p0;

// ScalarOp:13
	float n_out13p0 = n_out5p0 + n_out4p0;

// VectorCompose:15
	vec3 n_out15p0 = vec3(n_out3p0, n_out14p0, n_out13p0);

// VectorOp:22
	vec3 n_in22p1 = vec3(6.30000, 6.30000, 1.00000);
	vec3 n_out22p0 = n_out15p0 * n_in22p1;

// VectorOp:16
	vec3 n_in16p1 = vec3(0.00000, 1.10000, 2.20000);
	vec3 n_out16p0 = n_out22p0 + n_in16p1;

// Input:19
	vec3 n_out19p0 = NORMAL;

// VectorDecompose:20
	float n_out20p0 = n_out19p0.x;
	float n_out20p1 = n_out19p0.y;
	float n_out20p2 = n_out19p0.z;

// ScalarFunc:23
	float n_out23p0 = -(n_out20p1);

// ScalarClamp:21
	float n_in21p1 = 0.00000;
	float n_in21p2 = 1.00000;
	float n_out21p0 = clamp(n_out23p0, n_in21p1, n_in21p2);

// VectorMix:17
	vec3 n_out17p0 = mix(n_out18p0, n_out16p0, vec3(n_out21p0));

// Input:27
	vec3 n_out27p0 = VERTEX;

// ScalarUniform:28
	float n_out28p0 = morph;

// VectorMix:26
	vec3 n_out26p0 = mix(n_out17p0, n_out27p0, vec3(n_out28p0));

// ScalarOp:25
	float n_out25p0 = max(n_out23p0, n_out20p1);

// VectorCompose:24
	vec3 n_out24p0 = vec3(n_out20p0, n_out25p0, n_out20p2);

// Output:0
	VERTEX = n_out26p0;
	NORMAL = n_out24p0;

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:12
	vec3 n_in12p1 = vec3(0.00000, 2.00000, 0.00000);
	vec3 n_out12p0 = n_out3p0 * n_in12p1;

// VectorDecompose:13
	float n_out13p0 = n_out12p0.x;
	float n_out13p1 = n_out12p0.y;
	float n_out13p2 = n_out12p0.z;

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, vec3(n_out13p1).xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// VectorOp:33
	vec3 n_in33p1 = vec3(0.80000, 0.82000, 0.00000);
	vec3 n_out33p0 = n_out3p0 - n_in33p1;

// VectorOp:40
	vec3 n_in40p1 = vec3(0.00000, 0.14000, 0.00000);
	vec3 n_out40p0 = n_out33p0 + n_in40p1;

// VectorLen:38
	float n_out38p0 = length(n_out40p0);

// ScalarOp:39
	float n_in39p1 = 4.00000;
	float n_out39p0 = n_out38p0 * n_in39p1;

// Texture:41
	vec4 tex_frg_41_read = texture(tex_frg_41, vec3(n_out39p0).xy);
	vec3 n_out41p0 = tex_frg_41_read.rgb;
	float n_out41p1 = tex_frg_41_read.a;

// VectorLen:34
	float n_out34p0 = length(n_out33p0);

// ScalarOp:35
	float n_in35p1 = 4.00000;
	float n_out35p0 = n_out34p0 * n_in35p1;

// Texture:36
	vec4 tex_frg_36_read = texture(tex_frg_36, vec3(n_out35p0).xy);
	vec3 n_out36p0 = tex_frg_36_read.rgb;
	float n_out36p1 = tex_frg_36_read.a;

// ScalarOp:42
	float n_out42p0 = dot(n_out41p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out36p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:24
	vec3 n_in24p1 = vec3(0.75000, 0.75000, 0.00000);
	vec3 n_out24p0 = n_out3p0 - n_in24p1;

// VectorOp:23
	vec3 n_in23p1 = vec3(3.00000, 2.20000, 0.00000);
	vec3 n_out23p0 = n_out24p0 * n_in23p1;

// VectorLen:25
	float n_out25p0 = length(n_out23p0);

// Texture:26
	vec4 tex_frg_26_read = texture(tex_frg_26, vec3(n_out25p0).xy);
	vec3 n_out26p0 = tex_frg_26_read.rgb;
	float n_out26p1 = tex_frg_26_read.a;

// VectorOp:30
	vec3 n_in30p1 = vec3(0.03000, 0.00000, 0.00000);
	vec3 n_out30p0 = n_out24p0 - n_in30p1;

// VectorOp:29
	vec3 n_in29p1 = vec3(3.00000, 2.00000, 0.00000);
	vec3 n_out29p0 = n_out30p0 * n_in29p1;

// VectorLen:27
	float n_out27p0 = length(n_out29p0);

// Texture:28
	vec4 tex_frg_28_read = texture(tex_frg_28, vec3(n_out27p0).xy);
	vec3 n_out28p0 = tex_frg_28_read.rgb;
	float n_out28p1 = tex_frg_28_read.a;

// ScalarFunc:32
	float n_out32p0 = 1.0 - dot(n_out28p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:31
	vec3 n_out31p0 = max(n_out26p0, vec3(n_out32p0));

// Texture:43
	vec4 tex_frg_43_read = texture(tex_frg_43, n_out31p0.xy);
	vec3 n_out43p0 = tex_frg_43_read.rgb;
	float n_out43p1 = tex_frg_43_read.a;

// ScalarOp:37
	float n_out37p0 = n_out42p0 * dot(n_out43p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:4
	vec3 n_in4p1 = vec3(0.75000, 0.75000, 0.00000);
	vec3 n_out4p0 = n_out3p0 - n_in4p1;

// VectorLen:5
	float n_out5p0 = length(n_out4p0);

// ScalarOp:6
	float n_in6p1 = 4.00000;
	float n_out6p0 = n_out5p0 * n_in6p1;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, vec3(n_out6p0).xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// VectorMix:8
	vec3 n_out8p0 = mix(vec3(n_out37p0), n_out7p0, vec3(n_out7p1));

// VectorDecompose:16
	float n_out16p0 = n_out3p0.x;
	float n_out16p1 = n_out3p0.y;
	float n_out16p2 = n_out3p0.z;

// ScalarFunc:17
	float n_out17p0 = round(n_out16p1);

// VectorMix:15
	vec3 n_out15p0 = mix(n_out14p0, n_out8p0, vec3(n_out17p0));

// ScalarFunc:19
	float n_out19p0 = 1.0 - n_out16p0;

// ScalarFunc:20
	float n_out20p0 = round(n_out19p0);

// ScalarOp:21
	float n_out21p0 = n_out20p0 * n_out17p0;

// VectorMix:22
	vec3 n_out22p0 = mix(n_out15p0, n_out14p0, vec3(n_out21p0));

// Output:0
	ALBEDO = n_out22p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 951.228, 178.753 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 1580, 280 )
nodes/vertex/2/node = SubResource( 59 )
nodes/vertex/2/position = Vector2( -420, 240 )
nodes/vertex/3/node = SubResource( 69 )
nodes/vertex/3/position = Vector2( -240, 240 )
nodes/vertex/4/node = SubResource( 70 )
nodes/vertex/4/position = Vector2( 39.311, 150.078 )
nodes/vertex/5/node = SubResource( 71 )
nodes/vertex/5/position = Vector2( 40, 40 )
nodes/vertex/6/node = SubResource( 72 )
nodes/vertex/6/position = Vector2( 40, 260 )
nodes/vertex/7/node = SubResource( 73 )
nodes/vertex/7/position = Vector2( 40, 380 )
nodes/vertex/8/node = SubResource( 74 )
nodes/vertex/8/position = Vector2( -240, 440 )
nodes/vertex/9/node = SubResource( 75 )
nodes/vertex/9/position = Vector2( -240, 80 )
nodes/vertex/10/node = SubResource( 49 )
nodes/vertex/10/position = Vector2( -240, 160 )
nodes/vertex/11/node = SubResource( 50 )
nodes/vertex/11/position = Vector2( -240, 360 )
nodes/vertex/12/node = SubResource( 51 )
nodes/vertex/12/position = Vector2( -660, 240 )
nodes/vertex/13/node = SubResource( 52 )
nodes/vertex/13/position = Vector2( 240, 100 )
nodes/vertex/14/node = SubResource( 53 )
nodes/vertex/14/position = Vector2( 240, 300 )
nodes/vertex/15/node = SubResource( 54 )
nodes/vertex/15/position = Vector2( 460, 220 )
nodes/vertex/16/node = SubResource( 55 )
nodes/vertex/16/position = Vector2( 880, 200 )
nodes/vertex/17/node = SubResource( 56 )
nodes/vertex/17/position = Vector2( 1140, 200 )
nodes/vertex/18/node = SubResource( 57 )
nodes/vertex/18/position = Vector2( 640, 320 )
nodes/vertex/19/node = SubResource( 58 )
nodes/vertex/19/position = Vector2( 240, 460 )
nodes/vertex/20/node = SubResource( 60 )
nodes/vertex/20/position = Vector2( 420, 420 )
nodes/vertex/21/node = SubResource( 61 )
nodes/vertex/21/position = Vector2( 880, 340 )
nodes/vertex/22/node = SubResource( 62 )
nodes/vertex/22/position = Vector2( 680, 200 )
nodes/vertex/23/node = SubResource( 63 )
nodes/vertex/23/position = Vector2( 660, 440 )
nodes/vertex/24/node = SubResource( 64 )
nodes/vertex/24/position = Vector2( 1060, 420 )
nodes/vertex/25/node = SubResource( 65 )
nodes/vertex/25/position = Vector2( 860, 460 )
nodes/vertex/26/node = SubResource( 66 )
nodes/vertex/26/position = Vector2( 1340, 280 )
nodes/vertex/27/node = SubResource( 67 )
nodes/vertex/27/position = Vector2( 1120, 300 )
nodes/vertex/28/node = SubResource( 68 )
nodes/vertex/28/position = Vector2( 1140, 360 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 2, 4, 0, 3, 1, 6, 0, 3, 2, 7, 0, 8, 0, 7, 1, 3, 1, 5, 0, 9, 0, 5, 1, 10, 0, 4, 1, 11, 0, 6, 1, 12, 0, 11, 0, 12, 0, 8, 0, 12, 0, 9, 0, 12, 0, 10, 0, 5, 0, 13, 0, 4, 0, 13, 1, 6, 0, 14, 0, 7, 0, 14, 1, 3, 0, 15, 0, 13, 0, 15, 2, 14, 0, 15, 1, 19, 0, 20, 0, 21, 0, 17, 2, 18, 0, 17, 0, 15, 0, 22, 0, 22, 0, 16, 0, 16, 0, 17, 1, 20, 1, 23, 0, 20, 0, 24, 0, 20, 2, 24, 2, 24, 0, 0, 1, 23, 0, 21, 0, 25, 0, 24, 1, 23, 0, 25, 0, 20, 1, 25, 1, 17, 0, 26, 0, 27, 0, 26, 1, 28, 0, 26, 2, 26, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 1920, 80 )
nodes/fragment/3/node = SubResource( 23 )
nodes/fragment/3/position = Vector2( -560, 240 )
nodes/fragment/4/node = SubResource( 36 )
nodes/fragment/4/position = Vector2( -20, 140 )
nodes/fragment/5/node = SubResource( 43 )
nodes/fragment/5/position = Vector2( 160, 140 )
nodes/fragment/6/node = SubResource( 44 )
nodes/fragment/6/position = Vector2( 340, 120 )
nodes/fragment/7/node = SubResource( 47 )
nodes/fragment/7/position = Vector2( 560, 100 )
nodes/fragment/8/node = SubResource( 48 )
nodes/fragment/8/position = Vector2( 1380, 220 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 100, 0 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 320, 0 )
nodes/fragment/14/node = SubResource( 6 )
nodes/fragment/14/position = Vector2( 780, -20 )
nodes/fragment/15/node = SubResource( 7 )
nodes/fragment/15/position = Vector2( 1560, 140 )
nodes/fragment/16/node = SubResource( 8 )
nodes/fragment/16/position = Vector2( 200, -120 )
nodes/fragment/17/node = SubResource( 9 )
nodes/fragment/17/position = Vector2( 440, -80 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( 440, -160 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 640, -160 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( 880, -140 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( 1740, 80 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -20, 480 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( -340, 480 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( 160, 480 )
nodes/fragment/26/node = SubResource( 19 )
nodes/fragment/26/position = Vector2( 400, 460 )
nodes/fragment/27/node = SubResource( 20 )
nodes/fragment/27/position = Vector2( 220, 680 )
nodes/fragment/28/node = SubResource( 21 )
nodes/fragment/28/position = Vector2( 400, 660 )
nodes/fragment/29/node = SubResource( 22 )
nodes/fragment/29/position = Vector2( 40, 680 )
nodes/fragment/30/node = SubResource( 24 )
nodes/fragment/30/position = Vector2( -140, 640 )
nodes/fragment/31/node = SubResource( 25 )
nodes/fragment/31/position = Vector2( 840, 620 )
nodes/fragment/32/node = SubResource( 26 )
nodes/fragment/32/position = Vector2( 600, 760 )
nodes/fragment/33/node = SubResource( 27 )
nodes/fragment/33/position = Vector2( -180, 260 )
nodes/fragment/34/node = SubResource( 28 )
nodes/fragment/34/position = Vector2( 20, 380 )
nodes/fragment/35/node = SubResource( 29 )
nodes/fragment/35/position = Vector2( 200, 340 )
nodes/fragment/36/node = SubResource( 32 )
nodes/fragment/36/position = Vector2( 600, 420 )
nodes/fragment/37/node = SubResource( 33 )
nodes/fragment/37/position = Vector2( 1200, 440 )
nodes/fragment/38/node = SubResource( 34 )
nodes/fragment/38/position = Vector2( 180, 260 )
nodes/fragment/39/node = SubResource( 35 )
nodes/fragment/39/position = Vector2( 360, 240 )
nodes/fragment/40/node = SubResource( 37 )
nodes/fragment/40/position = Vector2( 20, 260 )
nodes/fragment/41/node = SubResource( 38 )
nodes/fragment/41/position = Vector2( 780, 280 )
nodes/fragment/42/node = SubResource( 39 )
nodes/fragment/42/position = Vector2( 980, 440 )
nodes/fragment/43/node = SubResource( 42 )
nodes/fragment/43/position = Vector2( 1020, 620 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 7, 0, 7, 1, 8, 2, 3, 0, 12, 0, 12, 0, 13, 0, 13, 1, 14, 0, 3, 0, 16, 0, 16, 1, 17, 0, 17, 0, 15, 2, 8, 0, 15, 1, 14, 0, 15, 0, 16, 0, 19, 0, 19, 0, 20, 0, 20, 0, 21, 0, 17, 0, 21, 1, 21, 0, 22, 2, 14, 0, 22, 1, 15, 0, 22, 0, 22, 0, 0, 0, 25, 0, 26, 0, 3, 0, 24, 0, 24, 0, 23, 0, 23, 0, 25, 0, 27, 0, 28, 0, 29, 0, 27, 0, 24, 0, 30, 0, 30, 0, 29, 0, 26, 0, 31, 0, 28, 0, 32, 0, 32, 0, 31, 1, 3, 0, 33, 0, 33, 0, 34, 0, 34, 0, 35, 0, 35, 0, 36, 0, 7, 0, 8, 1, 37, 0, 8, 0, 38, 0, 39, 0, 33, 0, 40, 0, 40, 0, 38, 0, 39, 0, 41, 0, 41, 0, 42, 0, 36, 0, 42, 1, 42, 0, 37, 0, 31, 0, 43, 0, 43, 0, 37, 1 )

[sub_resource type="ShaderMaterial" id=77]
shader = SubResource( 76 )
shader_param/morph = 0.0

[sub_resource type="Animation" id=78]
resource_name = "New Anim"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("sign:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6, 0.9, 1.6, 2 ),
"transitions": PoolRealArray( 0.517632, 1, 0.535887, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, -29.299, 0 ), Vector3( 0, -20.5393, 0 ), Vector3( 0, 8.939, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("sign:material/0:shader_param/morph")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2.4, 2.9, 3.5, 3.9 ),
"transitions": PoolRealArray( 1, 0.659754, 1, 0.482968, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 1.0, 1.0, 0.0 ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="sign" type="MeshInstance" parent="."]
mesh = SubResource( 1 )
material/0 = SubResource( 77 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( -0.951519, -0.0858456, 0.295367, 0, 0.960264, 0.279092, -0.307589, 0.265561, -0.91371, 2.4723, 1.76829, -6.92712 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 78 )
