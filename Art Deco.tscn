[gd_scene load_steps=126 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="PlaneMesh" id=1]
subdivide_width = 512
subdivide_depth = 512

[sub_resource type="VisualShaderNodeVectorOp" id=2]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 8, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=3]
function = 20

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=6]
function = 34

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="Gradient" id=11]
offsets = PoolRealArray( 0, 0.00856531, 0.0149893, 0.141328 )
colors = PoolColorArray( 0.292969, 0.0858307, 0.0858307, 1, 0.101563, 0, 0, 1, 0, 0.113281, 0.100357, 1, 0.414063, 1, 0.931335, 1 )

[sub_resource type="GradientTexture" id=12]
gradient = SubResource( 11 )

[sub_resource type="VisualShaderNodeTexture" id=13]
output_port_for_preview = 0
texture = SubResource( 12 )

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorInterp" id=15]

[sub_resource type="VisualShaderNodeVectorOp" id=16]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=17]

[sub_resource type="Gradient" id=18]
offsets = PoolRealArray( 0.584906, 0.592453, 0.984906, 0.992453 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=19]
gradient = SubResource( 18 )

[sub_resource type="VisualShaderNodeTexture" id=20]
texture = SubResource( 19 )

[sub_resource type="VisualShaderNodeVectorOp" id=21]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 30, 20, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=22]
function = 20

[sub_resource type="VisualShaderNodeVectorOp" id=23]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=24]
function = 20

[sub_resource type="VisualShaderNodeVectorDecompose" id=25]

[sub_resource type="VisualShaderNodeVectorDecompose" id=26]

[sub_resource type="VisualShaderNodeVectorOp" id=27]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 5, 1, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=28]

[sub_resource type="GradientTexture" id=29]
gradient = SubResource( 28 )

[sub_resource type="VisualShaderNodeTexture" id=30]
texture = SubResource( 29 )

[sub_resource type="VisualShaderNodeTexture" id=31]
texture = SubResource( 29 )

[sub_resource type="VisualShaderNodeVectorInterp" id=32]

[sub_resource type="VisualShaderNodeScalarFunc" id=33]
function = 15

[sub_resource type="Gradient" id=34]
offsets = PoolRealArray( 0, 0.0867925, 0.962264, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=35]
gradient = SubResource( 34 )

[sub_resource type="VisualShaderNodeTexture" id=36]
texture = SubResource( 35 )

[sub_resource type="VisualShaderNodeVectorOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=38]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 1, 1, 1 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="Gradient" id=39]
offsets = PoolRealArray( 0, 0.104972, 0.895028, 0.994475 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=40]
gradient = SubResource( 39 )

[sub_resource type="VisualShaderNodeTexture" id=41]
texture = SubResource( 40 )

[sub_resource type="VisualShaderNodeVectorFunc" id=42]
output_port_for_preview = 0
function = 20

[sub_resource type="VisualShaderNodeScalarOp" id=43]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=44]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=45]
function = 20

[sub_resource type="Gradient" id=46]
offsets = PoolRealArray( 0.834254, 1 )

[sub_resource type="GradientTexture" id=47]
gradient = SubResource( 46 )

[sub_resource type="VisualShaderNodeTexture" id=48]
texture = SubResource( 47 )

[sub_resource type="OpenSimplexNoise" id=49]
period = 47.4
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=50]
noise = SubResource( 49 )

[sub_resource type="VisualShaderNodeTexture" id=51]
texture = SubResource( 50 )

[sub_resource type="VisualShaderNodeVectorInterp" id=52]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 1, 1, 1 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=53]
operator = 2

[sub_resource type="Gradient" id=54]
colors = PoolColorArray( 0.0820313, 0.0820313, 0.0820313, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=55]
gradient = SubResource( 54 )

[sub_resource type="VisualShaderNodeTexture" id=56]
texture = SubResource( 55 )

[sub_resource type="NoiseTexture" id=57]
as_normalmap = true
bump_strength = 4.0
noise = SubResource( 49 )

[sub_resource type="VisualShaderNodeTexture" id=58]
texture = SubResource( 57 )

[sub_resource type="VisualShaderNodeVectorOp" id=59]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.7, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=60]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=61]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0.5, 0.5, 0 ), 1, Vector3( 0.5, 0.5, 0 ), 2, Vector3( 1, 1, 1 ) ]

[sub_resource type="VisualShaderNodeInput" id=62]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=63]

[sub_resource type="Gradient" id=64]
offsets = PoolRealArray( 0.627027, 0.637838, 0.643243 )
colors = PoolColorArray( 0.386719, 0.386719, 0.386719, 1, 1, 1, 1, 1, 0.703125, 0.703125, 0.703125, 1 )

[sub_resource type="GradientTexture" id=65]
gradient = SubResource( 64 )

[sub_resource type="VisualShaderNodeTexture" id=66]
texture = SubResource( 65 )

[sub_resource type="VisualShaderNodeVectorOp" id=67]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=68]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=69]

[sub_resource type="Gradient" id=70]
offsets = PoolRealArray( 0.572289, 0.608434, 0.656627, 0.680723 )
colors = PoolColorArray( 1, 1, 1, 1, 0.5, 0.5, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=71]
gradient = SubResource( 70 )

[sub_resource type="VisualShaderNodeTexture" id=72]
output_port_for_preview = 0
texture = SubResource( 71 )

[sub_resource type="VisualShaderNodeVectorOp" id=73]

[sub_resource type="VisualShaderNodeInput" id=74]
input_name = "vertex"

[sub_resource type="Gradient" id=75]
offsets = PoolRealArray( 0.590361, 0.63253 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=76]
gradient = SubResource( 75 )

[sub_resource type="VisualShaderNodeTexture" id=77]
texture = SubResource( 76 )

[sub_resource type="VisualShaderNodeVectorOp" id=78]

[sub_resource type="VisualShaderNodeVectorDecompose" id=79]

[sub_resource type="VisualShaderNodeScalarOp" id=80]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="Curve" id=81]
_data = [ Vector2( 0, 0 ), 0.0, 1.0, 0, 0, Vector2( 0.5, 0.3 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), -1.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=82]
curve = SubResource( 81 )

[sub_resource type="VisualShaderNodeTexture" id=83]
texture = SubResource( 82 )

[sub_resource type="VisualShaderNodeVectorOp" id=84]

[sub_resource type="VisualShaderNodeVectorOp" id=85]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, -1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=86]

[sub_resource type="VisualShaderNodeInput" id=87]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=88]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=89]

[sub_resource type="VisualShaderNodeVectorOp" id=90]

[sub_resource type="VisualShaderNodeVectorOp" id=91]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.4, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=92]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=93]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=94]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 8, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=95]
function = 20

[sub_resource type="VisualShaderNodeVectorDecompose" id=96]

[sub_resource type="VisualShaderNodeScalarOp" id=97]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=98]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=99]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=100]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="Gradient" id=101]
offsets = PoolRealArray( 0, 0.00540541 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=102]
gradient = SubResource( 101 )

[sub_resource type="VisualShaderNodeTexture" id=103]
output_port_for_preview = 0
texture = SubResource( 102 )

[sub_resource type="VisualShaderNodeScalarOp" id=104]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=105]

[sub_resource type="VisualShaderNodeVectorFunc" id=106]
function = 34

[sub_resource type="VisualShaderNodeVectorOp" id=107]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.04, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=108]

[sub_resource type="VisualShaderNodeTexture" id=109]
output_port_for_preview = 0
texture = SubResource( 71 )

[sub_resource type="VisualShaderNodeVectorInterp" id=110]

[sub_resource type="VisualShaderNodeVectorFunc" id=111]
output_port_for_preview = 0
function = 20

[sub_resource type="VisualShaderNodeVectorInterp" id=112]

[sub_resource type="VisualShaderNodeScalarUniform" id=113]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeInput" id=114]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=115]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.7, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=116]
output_port_for_preview = 0

[sub_resource type="Gradient" id=117]
offsets = PoolRealArray( 0.572289, 0.627027 )
colors = PoolColorArray( 0, 0, 0, 1, 0.503906, 0.503906, 0.503906, 1 )

[sub_resource type="GradientTexture" id=118]
gradient = SubResource( 117 )

[sub_resource type="VisualShaderNodeTexture" id=119]
output_port_for_preview = 0
texture = SubResource( 118 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=120]

[sub_resource type="VisualShaderNodeVectorOp" id=121]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -0.2, 0 ) ]
operator = 2

[sub_resource type="VisualShader" id=122]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_32;
uniform sampler2D tex_vtx_38;
uniform sampler2D tex_vtx_16;
uniform sampler2D tex_vtx_12;
uniform sampler2D tex_vtx_7;
uniform float morph;
uniform sampler2D tex_frg_54;
uniform sampler2D tex_frg_44;
uniform sampler2D tex_frg_9;
uniform sampler2D tex_frg_39;
uniform sampler2D tex_frg_30;
uniform sampler2D tex_frg_31;
uniform sampler2D tex_frg_35;
uniform sampler2D tex_frg_48;
uniform sampler2D tex_frg_43;
uniform sampler2D tex_frg_19;
uniform sampler2D tex_frg_23;
uniform sampler2D tex_frg_49;



void vertex() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:26
	vec3 n_in26p1 = vec3(10.00000, 8.00000, 0.00000);
	vec3 n_out26p0 = n_out2p0 * n_in26p1;

// VectorFunc:27
	vec3 n_out27p0 = fract(n_out26p0);

// VectorFunc:35
	vec3 n_out35p0 = vec3(1.0, 1.0, 1.0) - n_out27p0;

// VectorDecompose:34
	float n_out34p0 = n_out35p0.x;
	float n_out34p1 = n_out35p0.y;
	float n_out34p2 = n_out35p0.z;

// ScalarOp:33
	float n_out33p0 = n_out34p0 * n_out34p1;

// VectorDecompose:28
	float n_out28p0 = n_out27p0.x;
	float n_out28p1 = n_out27p0.y;
	float n_out28p2 = n_out27p0.z;

// ScalarOp:29
	float n_out29p0 = n_out28p0 * n_out28p1;

// ScalarOp:30
	float n_out30p0 = n_out33p0 * n_out29p0;

// ScalarOp:31
	float n_in31p1 = 2.00000;
	float n_out31p0 = n_out30p0 * n_in31p1;

// Texture:32
	vec4 tex_vtx_32_read = texture(tex_vtx_32, vec3(n_out31p0).xy);
	vec3 n_out32p0 = tex_vtx_32_read.rgb;
	float n_out32p1 = tex_vtx_32_read.a;

// VectorOp:3
	vec3 n_in3p1 = vec3(5.00000, 1.00000, 0.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// VectorFunc:4
	vec3 n_out4p0 = fract(n_out3p0);

// VectorOp:5
	vec3 n_in5p1 = vec3(0.50000, 0.70000, 0.00000);
	vec3 n_out5p0 = n_out4p0 - n_in5p1;

// VectorFunc:6
	vec3 n_out6p0 = normalize(n_out5p0);

// VectorDecompose:8
	float n_out8p0 = n_out6p0.x;
	float n_out8p1 = n_out6p0.y;
	float n_out8p2 = n_out6p0.z;

// Texture:38
	vec4 tex_vtx_38_read = texture(tex_vtx_38, vec3(n_out8p1).xy);
	vec3 n_out38p0 = tex_vtx_38_read.rgb;
	float n_out38p1 = tex_vtx_38_read.a;

// VectorMix:39
	vec3 n_out39p0 = mix(n_out32p0, n_out38p0, vec3(n_out38p1));

// VectorOp:36
	vec3 n_in36p1 = vec3(0.00000, 0.04000, 0.00000);
	vec3 n_out36p0 = n_out39p0 * n_in36p1;

// VectorOp:20
	vec3 n_in20p1 = vec3(0.50000, 0.00000, 0.00000);
	vec3 n_out20p0 = n_out2p0 - n_in20p1;

// VectorDecompose:21
	float n_out21p0 = n_out20p0.x;
	float n_out21p1 = n_out20p0.y;
	float n_out21p2 = n_out20p0.z;

// ScalarFunc:25
	float n_out25p0 = 1.0 - n_out21p1;

// ScalarOp:24
	float n_out24p0 = n_out21p0 * n_out25p0;

// VectorOp:23
	vec3 n_in23p1 = vec3(1.40000, 0.00000, 0.00000);
	vec3 n_out23p0 = vec3(n_out24p0) * n_in23p1;

// Texture:16
	vec4 tex_vtx_16_read = texture(tex_vtx_16, UV.xy);
	vec3 n_out16p0 = tex_vtx_16_read.rgb;
	float n_out16p1 = tex_vtx_16_read.a;

// VectorDecompose:19
	float n_out19p0 = n_out16p0.x;
	float n_out19p1 = n_out16p0.y;
	float n_out19p2 = n_out16p0.z;

// VectorOp:18
	vec3 n_in18p1 = vec3(0.00000, 0.00000, -1.00000);
	vec3 n_out18p0 = vec3(n_out19p0) * n_in18p1;

// VectorOp:22
	vec3 n_out22p0 = n_out23p0 + n_out18p0;

// VectorDecompose:14
	float n_out14p0 = n_out2p0.x;
	float n_out14p1 = n_out2p0.y;
	float n_out14p2 = n_out2p0.z;

// Texture:12
	vec4 tex_vtx_12_read = texture(tex_vtx_12, vec3(n_out14p1).xy);
	vec3 n_out12p0 = tex_vtx_12_read.rgb;
	float n_out12p1 = tex_vtx_12_read.a;

// ScalarOp:15
	float n_in15p1 = 2.00000;
	float n_out15p0 = dot(n_out12p0, vec3(0.333333, 0.333333, 0.333333)) * n_in15p1;

// Texture:7
	vec4 tex_vtx_7_read = texture(tex_vtx_7, vec3(n_out8p1).xy);
	vec3 n_out7p0 = tex_vtx_7_read.rgb;
	float n_out7p1 = tex_vtx_7_read.a;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out15p0) + n_out7p0;

// VectorOp:9
	vec3 n_in9p1 = vec3(0.00000, -0.20000, 0.00000);
	vec3 n_out9p0 = n_out13p0 * n_in9p1;

// Input:11
	vec3 n_out11p0 = VERTEX;

// VectorOp:10
	vec3 n_out10p0 = n_out9p0 + n_out11p0;

// VectorOp:17
	vec3 n_out17p0 = n_out22p0 + n_out10p0;

// VectorOp:37
	vec3 n_out37p0 = n_out36p0 + n_out17p0;

// Input:42
	vec3 n_out42p0 = VERTEX;

// ScalarUniform:41
	float n_out41p0 = morph;

// VectorMix:40
	vec3 n_out40p0 = mix(n_out37p0, n_out42p0, vec3(n_out41p0));

// Output:0
	VERTEX = n_out40p0;

}

void fragment() {
// Input:52
	vec3 n_out52p0 = vec3(UV, 0.0);

// VectorDecompose:53
	float n_out53p0 = n_out52p0.x;
	float n_out53p1 = n_out52p0.y;
	float n_out53p2 = n_out52p0.z;

// Texture:54
	vec4 tex_frg_54_read = texture(tex_frg_54, vec3(n_out53p1).xy);
	vec3 n_out54p0 = tex_frg_54_read.rgb;
	float n_out54p1 = tex_frg_54_read.a;

// Texture:44
	vec4 tex_frg_44_read = texture(tex_frg_44, UV.xy);
	vec3 n_out44p0 = tex_frg_44_read.rgb;
	float n_out44p1 = tex_frg_44_read.a;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(5.00000, 1.00000, 0.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// VectorFunc:4
	vec3 n_out4p0 = fract(n_out3p0);

// VectorOp:5
	vec3 n_in5p1 = vec3(0.50000, 0.70000, 0.00000);
	vec3 n_out5p0 = n_out4p0 - n_in5p1;

// VectorFunc:6
	vec3 n_out6p0 = normalize(n_out5p0);

// VectorDecompose:8
	float n_out8p0 = n_out6p0.x;
	float n_out8p1 = n_out6p0.y;
	float n_out8p2 = n_out6p0.z;

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, vec3(n_out8p1).xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// VectorMix:45
	vec3 n_in45p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out45p0 = mix(n_in45p0, n_out44p0, vec3(n_out9p1));

// VectorOp:24
	vec3 n_in24p1 = vec3(30.00000, 20.00000, 0.00000);
	vec3 n_out24p0 = n_out2p0 * n_in24p1;

// VectorOp:41
	vec3 n_in41p1 = vec3(2.00000, 1.00000, 0.00000);
	vec3 n_out41p0 = n_out24p0 * n_in41p1;

// VectorFunc:42
	vec3 n_out42p0 = fract(n_out41p0);

// Texture:39
	vec4 tex_frg_39_read = texture(tex_frg_39, n_out42p0.xy);
	vec3 n_out39p0 = tex_frg_39_read.rgb;
	float n_out39p1 = tex_frg_39_read.a;

// VectorOp:26
	vec3 n_in26p1 = vec3(0.00000, 0.50000, 0.00000);
	vec3 n_out26p0 = n_out24p0 - n_in26p1;

// VectorFunc:27
	vec3 n_out27p0 = fract(n_out26p0);

// VectorDecompose:28
	float n_out28p0 = n_out27p0.x;
	float n_out28p1 = n_out27p0.y;
	float n_out28p2 = n_out27p0.z;

// Texture:30
	vec4 tex_frg_30_read = texture(tex_frg_30, vec3(n_out28p1).xy);
	vec3 n_out30p0 = tex_frg_30_read.rgb;
	float n_out30p1 = tex_frg_30_read.a;

// VectorFunc:25
	vec3 n_out25p0 = fract(n_out24p0);

// VectorDecompose:29
	float n_out29p0 = n_out25p0.x;
	float n_out29p1 = n_out25p0.y;
	float n_out29p2 = n_out25p0.z;

// Texture:31
	vec4 tex_frg_31_read = texture(tex_frg_31, vec3(n_out29p1).xy);
	vec3 n_out31p0 = tex_frg_31_read.rgb;
	float n_out31p1 = tex_frg_31_read.a;

// ScalarFunc:34
	float n_out34p0 = round(n_out29p0);

// VectorMix:32
	vec3 n_out32p0 = mix(n_out30p0, n_out31p0, vec3(n_out34p0));

// Texture:35
	vec4 tex_frg_35_read = texture(tex_frg_35, n_out32p0.xy);
	vec3 n_out35p0 = tex_frg_35_read.rgb;
	float n_out35p1 = tex_frg_35_read.a;

// ScalarOp:40
	float n_out40p0 = dot(n_out39p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out35p0, vec3(0.333333, 0.333333, 0.333333));

// Texture:48
	vec4 tex_frg_48_read = texture(tex_frg_48, vec3(n_out40p0).xy);
	vec3 n_out48p0 = tex_frg_48_read.rgb;
	float n_out48p1 = tex_frg_48_read.a;

// Texture:43
	vec4 tex_frg_43_read = texture(tex_frg_43, n_out9p0.xy);
	vec3 n_out43p0 = tex_frg_43_read.rgb;
	float n_out43p1 = tex_frg_43_read.a;

// VectorMix:38
	vec3 n_in38p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out38p0 = mix(n_in38p0, n_out48p0, n_out43p0);

// VectorOp:10
	vec3 n_in10p1 = vec3(10.00000, 8.00000, 0.00000);
	vec3 n_out10p0 = n_out2p0 * n_in10p1;

// VectorFunc:11
	vec3 n_out11p0 = fract(n_out10p0);

// VectorFunc:14
	vec3 n_out14p0 = vec3(1.0, 1.0, 1.0) - n_out11p0;

// VectorDecompose:15
	float n_out15p0 = n_out14p0.x;
	float n_out15p1 = n_out14p0.y;
	float n_out15p2 = n_out14p0.z;

// ScalarOp:16
	float n_out16p0 = n_out15p0 * n_out15p1;

// VectorDecompose:12
	float n_out12p0 = n_out11p0.x;
	float n_out12p1 = n_out11p0.y;
	float n_out12p2 = n_out11p0.z;

// ScalarOp:13
	float n_out13p0 = n_out12p0 * n_out12p1;

// ScalarOp:17
	float n_out17p0 = n_out16p0 * n_out13p0;

// ScalarOp:18
	float n_in18p1 = 2.00000;
	float n_out18p0 = n_out17p0 * n_in18p1;

// Texture:19
	vec4 tex_frg_19_read = texture(tex_frg_19, vec3(n_out18p0).xy);
	vec3 n_out19p0 = tex_frg_19_read.rgb;
	float n_out19p1 = tex_frg_19_read.a;

// VectorMix:20
	vec3 n_out20p0 = mix(n_out19p0, n_out9p0, vec3(n_out9p1));

// VectorOp:37
	vec3 n_out37p0 = n_out38p0 * n_out20p0;

// VectorOp:46
	vec3 n_out46p0 = n_out45p0 * n_out37p0;

// VectorOp:55
	vec3 n_out55p0 = n_out54p0 * n_out46p0;

// VectorOp:21
	vec3 n_in21p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out21p0 = n_out2p0 - n_in21p1;

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// Texture:23
	vec4 tex_frg_23_read = texture(tex_frg_23, vec3(n_out22p1).xy);
	vec3 n_out23p0 = tex_frg_23_read.rgb;
	float n_out23p1 = tex_frg_23_read.a;

// Texture:49
	vec4 tex_frg_49_read = texture(tex_frg_49, UV.xy);
	vec3 n_out49p0 = tex_frg_49_read.rgb;
	float n_out49p1 = tex_frg_49_read.a;

// VectorMix:51
	vec3 n_in51p0 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out51p0 = mix(n_in51p0, n_out49p0, vec3(n_out9p1));

// Output:0
	ALBEDO = n_out55p0;
	ALPHA = dot(n_out23p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out51p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 2012.43, 457.716 )
modes/depth_draw = 3
flags/unshaded = true
nodes/vertex/0/position = Vector2( 2760, 560 )
nodes/vertex/2/node = SubResource( 87 )
nodes/vertex/2/position = Vector2( -780, 500 )
nodes/vertex/3/node = SubResource( 98 )
nodes/vertex/3/position = Vector2( -470.74, 542.149 )
nodes/vertex/4/node = SubResource( 111 )
nodes/vertex/4/position = Vector2( -290.74, 562.149 )
nodes/vertex/5/node = SubResource( 115 )
nodes/vertex/5/position = Vector2( -70.7399, 562.149 )
nodes/vertex/6/node = SubResource( 116 )
nodes/vertex/6/position = Vector2( 109.26, 602.149 )
nodes/vertex/7/node = SubResource( 119 )
nodes/vertex/7/position = Vector2( 520, 570 )
nodes/vertex/8/node = SubResource( 120 )
nodes/vertex/8/position = Vector2( 309.26, 622.149 )
nodes/vertex/9/node = SubResource( 121 )
nodes/vertex/9/position = Vector2( 900, 560 )
nodes/vertex/10/node = SubResource( 73 )
nodes/vertex/10/position = Vector2( 1130, 690 )
nodes/vertex/11/node = SubResource( 74 )
nodes/vertex/11/position = Vector2( 930, 830 )
nodes/vertex/12/node = SubResource( 77 )
nodes/vertex/12/position = Vector2( 220, 340 )
nodes/vertex/13/node = SubResource( 78 )
nodes/vertex/13/position = Vector2( 700, 550 )
nodes/vertex/14/node = SubResource( 79 )
nodes/vertex/14/position = Vector2( -312.691, 454.441 )
nodes/vertex/15/node = SubResource( 80 )
nodes/vertex/15/position = Vector2( 480, 420 )
nodes/vertex/16/node = SubResource( 83 )
nodes/vertex/16/position = Vector2( 740, 320 )
nodes/vertex/17/node = SubResource( 84 )
nodes/vertex/17/position = Vector2( 1660, 700 )
nodes/vertex/18/node = SubResource( 85 )
nodes/vertex/18/position = Vector2( 1200, 560 )
nodes/vertex/19/node = SubResource( 86 )
nodes/vertex/19/position = Vector2( 960, 440 )
nodes/vertex/20/node = SubResource( 88 )
nodes/vertex/20/position = Vector2( -80, 220 )
nodes/vertex/21/node = SubResource( 89 )
nodes/vertex/21/position = Vector2( 600, 160 )
nodes/vertex/22/node = SubResource( 90 )
nodes/vertex/22/position = Vector2( 1380, 520 )
nodes/vertex/23/node = SubResource( 91 )
nodes/vertex/23/position = Vector2( 1200, 400 )
nodes/vertex/24/node = SubResource( 92 )
nodes/vertex/24/position = Vector2( 1020, 320 )
nodes/vertex/25/node = SubResource( 93 )
nodes/vertex/25/position = Vector2( 800, 260 )
nodes/vertex/26/node = SubResource( 94 )
nodes/vertex/26/position = Vector2( -480, 300 )
nodes/vertex/27/node = SubResource( 95 )
nodes/vertex/27/position = Vector2( -160, 120 )
nodes/vertex/28/node = SubResource( 96 )
nodes/vertex/28/position = Vector2( 120, 80 )
nodes/vertex/29/node = SubResource( 97 )
nodes/vertex/29/position = Vector2( 400, -40 )
nodes/vertex/30/node = SubResource( 99 )
nodes/vertex/30/position = Vector2( 800, -140 )
nodes/vertex/31/node = SubResource( 100 )
nodes/vertex/31/position = Vector2( 980, -80 )
nodes/vertex/32/node = SubResource( 103 )
nodes/vertex/32/position = Vector2( 1200, -100 )
nodes/vertex/33/node = SubResource( 104 )
nodes/vertex/33/position = Vector2( 640, -200 )
nodes/vertex/34/node = SubResource( 105 )
nodes/vertex/34/position = Vector2( 440, -180 )
nodes/vertex/35/node = SubResource( 106 )
nodes/vertex/35/position = Vector2( 160, -80 )
nodes/vertex/36/node = SubResource( 107 )
nodes/vertex/36/position = Vector2( 1980, 420 )
nodes/vertex/37/node = SubResource( 108 )
nodes/vertex/37/position = Vector2( 2180, 520 )
nodes/vertex/38/node = SubResource( 109 )
nodes/vertex/38/position = Vector2( 1620, 400 )
nodes/vertex/39/node = SubResource( 110 )
nodes/vertex/39/position = Vector2( 1800, 380 )
nodes/vertex/40/node = SubResource( 112 )
nodes/vertex/40/position = Vector2( 2472.43, 612.716 )
nodes/vertex/41/node = SubResource( 113 )
nodes/vertex/41/position = Vector2( 2244.43, 704.716 )
nodes/vertex/42/node = SubResource( 114 )
nodes/vertex/42/position = Vector2( 2240, 640 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 8, 0, 8, 1, 7, 0, 9, 0, 10, 0, 11, 0, 10, 1, 7, 0, 13, 1, 13, 0, 9, 0, 2, 0, 14, 0, 14, 1, 12, 0, 12, 0, 15, 0, 15, 0, 13, 0, 10, 0, 17, 1, 16, 0, 19, 0, 19, 0, 18, 0, 2, 0, 20, 0, 20, 0, 21, 0, 23, 0, 22, 0, 18, 0, 22, 1, 22, 0, 17, 0, 21, 0, 24, 0, 24, 0, 23, 0, 21, 1, 25, 0, 25, 0, 24, 1, 26, 0, 27, 0, 27, 0, 28, 0, 28, 0, 29, 0, 28, 1, 29, 1, 27, 0, 35, 0, 35, 0, 34, 0, 34, 0, 33, 0, 34, 1, 33, 1, 33, 0, 30, 0, 29, 0, 30, 1, 30, 0, 31, 0, 31, 0, 32, 0, 2, 0, 26, 0, 17, 0, 37, 1, 8, 1, 38, 0, 38, 0, 39, 1, 38, 1, 39, 2, 32, 0, 39, 0, 39, 0, 36, 0, 36, 0, 37, 0, 37, 0, 40, 0, 41, 0, 40, 2, 42, 0, 40, 1, 40, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 2660, 360 )
nodes/fragment/2/node = SubResource( 14 )
nodes/fragment/2/position = Vector2( -800, 480 )
nodes/fragment/3/node = SubResource( 27 )
nodes/fragment/3/position = Vector2( -320, 600 )
nodes/fragment/4/node = SubResource( 42 )
nodes/fragment/4/position = Vector2( -140, 620 )
nodes/fragment/5/node = SubResource( 59 )
nodes/fragment/5/position = Vector2( 80, 620 )
nodes/fragment/6/node = SubResource( 68 )
nodes/fragment/6/position = Vector2( 260, 660 )
nodes/fragment/8/node = SubResource( 69 )
nodes/fragment/8/position = Vector2( 460, 680 )
nodes/fragment/9/node = SubResource( 72 )
nodes/fragment/9/position = Vector2( 1100, 700 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( -340, 460 )
nodes/fragment/11/node = SubResource( 3 )
nodes/fragment/11/position = Vector2( -140, 500 )
nodes/fragment/12/node = SubResource( 4 )
nodes/fragment/12/position = Vector2( 80, 500 )
nodes/fragment/13/node = SubResource( 5 )
nodes/fragment/13/position = Vector2( 340, 440 )
nodes/fragment/14/node = SubResource( 6 )
nodes/fragment/14/position = Vector2( 100, 400 )
nodes/fragment/15/node = SubResource( 7 )
nodes/fragment/15/position = Vector2( 380, 300 )
nodes/fragment/16/node = SubResource( 8 )
nodes/fragment/16/position = Vector2( 580, 280 )
nodes/fragment/17/node = SubResource( 9 )
nodes/fragment/17/position = Vector2( 740, 340 )
nodes/fragment/18/node = SubResource( 10 )
nodes/fragment/18/position = Vector2( 920, 400 )
nodes/fragment/19/node = SubResource( 13 )
nodes/fragment/19/position = Vector2( 1140, 380 )
nodes/fragment/20/node = SubResource( 15 )
nodes/fragment/20/position = Vector2( 1359.69, 569.035 )
nodes/fragment/21/node = SubResource( 16 )
nodes/fragment/21/position = Vector2( -340, 360 )
nodes/fragment/22/node = SubResource( 17 )
nodes/fragment/22/position = Vector2( 1340, 360 )
nodes/fragment/23/node = SubResource( 20 )
nodes/fragment/23/position = Vector2( 1560, 300 )
nodes/fragment/24/node = SubResource( 21 )
nodes/fragment/24/position = Vector2( -400, 160 )
nodes/fragment/25/node = SubResource( 22 )
nodes/fragment/25/position = Vector2( -240, 220 )
nodes/fragment/26/node = SubResource( 23 )
nodes/fragment/26/position = Vector2( -220, 80 )
nodes/fragment/27/node = SubResource( 24 )
nodes/fragment/27/position = Vector2( -40, 100 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( 160, 60 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( -40, 200 )
nodes/fragment/30/node = SubResource( 30 )
nodes/fragment/30/position = Vector2( 400, -20 )
nodes/fragment/31/node = SubResource( 31 )
nodes/fragment/31/position = Vector2( 180, 160 )
nodes/fragment/32/node = SubResource( 32 )
nodes/fragment/32/position = Vector2( 616.849, 128.84 )
nodes/fragment/34/node = SubResource( 33 )
nodes/fragment/34/position = Vector2( 380, 240 )
nodes/fragment/35/node = SubResource( 36 )
nodes/fragment/35/position = Vector2( 820, 80 )
nodes/fragment/37/node = SubResource( 37 )
nodes/fragment/37/position = Vector2( 1960, 440 )
nodes/fragment/38/node = SubResource( 38 )
nodes/fragment/38/position = Vector2( 1740, 360 )
nodes/fragment/39/node = SubResource( 41 )
nodes/fragment/39/position = Vector2( 820, -100 )
nodes/fragment/40/node = SubResource( 43 )
nodes/fragment/40/position = Vector2( 1260, 100 )
nodes/fragment/41/node = SubResource( 44 )
nodes/fragment/41/position = Vector2( -200, -40 )
nodes/fragment/42/node = SubResource( 45 )
nodes/fragment/42/position = Vector2( 240, -80 )
nodes/fragment/43/node = SubResource( 48 )
nodes/fragment/43/position = Vector2( 1540, 520 )
nodes/fragment/44/node = SubResource( 51 )
nodes/fragment/44/position = Vector2( 1680, 80 )
nodes/fragment/45/node = SubResource( 52 )
nodes/fragment/45/position = Vector2( 1960, 280 )
nodes/fragment/46/node = SubResource( 53 )
nodes/fragment/46/position = Vector2( 2183.5, 382.341 )
nodes/fragment/48/node = SubResource( 56 )
nodes/fragment/48/position = Vector2( 1440, 100 )
nodes/fragment/49/node = SubResource( 58 )
nodes/fragment/49/position = Vector2( 1300, -120 )
nodes/fragment/50/node = SubResource( 60 )
nodes/fragment/50/position = Vector2( 1860, 540 )
nodes/fragment/51/node = SubResource( 61 )
nodes/fragment/51/position = Vector2( 2040, 580 )
nodes/fragment/52/node = SubResource( 62 )
nodes/fragment/52/position = Vector2( 1900, 180 )
nodes/fragment/53/node = SubResource( 63 )
nodes/fragment/53/position = Vector2( 2060, 180 )
nodes/fragment/54/node = SubResource( 66 )
nodes/fragment/54/position = Vector2( 2280, 120 )
nodes/fragment/55/node = SubResource( 67 )
nodes/fragment/55/position = Vector2( 2483.72, 325.281 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 8, 0, 8, 1, 9, 0, 2, 0, 10, 0, 10, 0, 11, 0, 11, 0, 12, 0, 12, 0, 13, 0, 12, 1, 13, 1, 11, 0, 14, 0, 14, 0, 15, 0, 15, 0, 16, 0, 15, 1, 16, 1, 16, 0, 17, 0, 13, 0, 17, 1, 17, 0, 18, 0, 18, 0, 19, 0, 19, 0, 20, 0, 9, 0, 20, 1, 9, 1, 20, 2, 2, 0, 21, 0, 23, 0, 0, 1, 2, 0, 24, 0, 24, 0, 26, 0, 24, 0, 25, 0, 26, 0, 27, 0, 27, 0, 28, 0, 25, 0, 29, 0, 28, 1, 30, 0, 29, 1, 31, 0, 30, 0, 32, 0, 31, 0, 32, 1, 34, 0, 32, 2, 32, 0, 35, 0, 21, 0, 22, 0, 22, 1, 23, 0, 20, 0, 37, 1, 38, 0, 37, 0, 29, 0, 34, 0, 39, 0, 40, 0, 35, 0, 40, 1, 24, 0, 41, 0, 41, 0, 42, 0, 42, 0, 39, 0, 9, 0, 43, 0, 43, 0, 38, 2, 44, 0, 45, 1, 45, 0, 46, 0, 37, 0, 46, 1, 40, 0, 48, 0, 48, 0, 38, 1, 9, 1, 45, 2, 40, 0, 50, 1, 9, 1, 51, 2, 51, 0, 0, 8, 49, 0, 51, 1, 52, 0, 53, 0, 53, 1, 54, 0, 54, 0, 55, 0, 46, 0, 55, 1, 55, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=123]
shader = SubResource( 122 )
shader_param/morph = 0.0

[sub_resource type="Animation" id=124]
resource_name = "New Anim"
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("artdeco:rotation_degrees")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2.1, 3.3 ),
"transitions": PoolRealArray( 0.63728, 1.46409, 1, 1 ),
"update": 0,
"values": [ Vector3( 90, 0, 0 ), Vector3( 90, 10, 0 ), Vector3( 90, -8, 0 ), Vector3( 90, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("artdeco:material/0:shader_param/morph")
tracks/1/interp = 1
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 4, 4.8, 5.2, 6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 1.0, 0.0 ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 1 )

[node name="artdeco" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 123 )

[node name="DirectionalLight" type="DirectionalLight" parent="artdeco"]
transform = Transform( 0.53506, -0.288943, 0.793865, -0.844814, -0.183001, 0.502792, 3.6928e-08, -0.939693, -0.34202, 0, 0, 0 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.978148, 0.207912, 0, -0.207912, 0.978148, 0, -0.215, 1.793 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 124 )
