[gd_scene load_steps=73 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="VisualShaderNodeScalarClamp" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
output_port_for_preview = 0
operator = 2

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 0, 0.23125, 0.29375 )
colors = PoolColorArray( 0.65625, 1, 0.871094, 1, 0.181274, 0.46875, 0.360947, 1, 0.223529, 0.223529, 0.223529, 0 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = SubResource( 4 )

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=8]
uniform_name = "Vectorleft"

[sub_resource type="VisualShaderNodeVec3Uniform" id=9]
uniform_name = "Vectorright"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.4, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=12]

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=14]

[sub_resource type="VisualShaderNodeVectorOp" id=15]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.6, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=18]

[sub_resource type="VisualShaderNodeScalarOp" id=19]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=20]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=21]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.4, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=22]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=23]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=25]

[sub_resource type="VisualShaderNodeVec3Uniform" id=26]
uniform_name = "vecl"

[sub_resource type="VisualShaderNodeVec3Uniform" id=27]
uniform_name = "vecr"

[sub_resource type="VisualShaderNodeVectorInterp" id=28]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=30]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.4, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=31]

[sub_resource type="VisualShaderNodeVectorLen" id=32]

[sub_resource type="VisualShaderNodeScalarOp" id=33]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=34]

[sub_resource type="VisualShaderNodeVectorOp" id=35]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.6, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=36]

[sub_resource type="VisualShaderNodeScalarOp" id=37]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=38]

[sub_resource type="VisualShaderNodeScalarOp" id=39]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=40]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=41]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=42]
uniform_name = "Vectorleft2"

[sub_resource type="VisualShaderNodeScalarOp" id=43]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=44]
uniform_name = "Vectorright2"

[sub_resource type="VisualShaderNodeVectorOp" id=45]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.4, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=46]

[sub_resource type="VisualShaderNodeScalarOp" id=47]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=48]

[sub_resource type="VisualShaderNodeVectorOp" id=49]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.6, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=50]

[sub_resource type="VisualShaderNodeScalarOp" id=51]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=52]

[sub_resource type="VisualShaderNodeScalarOp" id=53]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=54]

[sub_resource type="VisualShaderNodeVectorOp" id=55]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=56]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=57]

[sub_resource type="VisualShaderNodeScalarOp" id=58]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=59]

[sub_resource type="VisualShaderNodeVec3Uniform" id=60]
uniform_name = "vecl2"

[sub_resource type="VisualShaderNodeVec3Uniform" id=61]
uniform_name = "vecr2"

[sub_resource type="VisualShaderNodeScalarOp" id=62]
operator = 2

[sub_resource type="Gradient" id=69]
offsets = PoolRealArray( 0.8125, 1 )

[sub_resource type="GradientTexture" id=70]
gradient = SubResource( 69 )

[sub_resource type="VisualShaderNodeTexture" id=71]
texture = SubResource( 70 )

[sub_resource type="VisualShaderNodeVectorOp" id=63]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.6, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=64]

[sub_resource type="VisualShaderNodeScalarOp" id=65]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShader" id=66]
code = "shader_type canvas_item;
uniform vec3 Vectorleft;
uniform vec3 Vectorright;
uniform vec3 vecl;
uniform vec3 vecr;
uniform vec3 Vectorleft2;
uniform vec3 Vectorright2;
uniform vec3 vecl2;
uniform vec3 vecr2;
uniform sampler2D tex_frg_15;
uniform sampler2D tex_frg_68;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorUniform:18
	vec3 n_out18p0 = Vectorleft;

// VectorOp:3
	vec3 n_out3p0 = n_out2p0 - n_out18p0;

// VectorLen:4
	float n_out4p0 = length(n_out3p0);

// ScalarOp:5
	float n_in5p1 = 10.00000;
	float n_out5p0 = n_out4p0 * n_in5p1;

// ScalarClamp:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 1.00000;
	float n_out6p0 = clamp(n_out5p0, n_in6p1, n_in6p2);

// VectorUniform:19
	vec3 n_out19p0 = Vectorright;

// VectorOp:7
	vec3 n_out7p0 = n_out2p0 - n_out19p0;

// VectorLen:8
	float n_out8p0 = length(n_out7p0);

// ScalarOp:9
	float n_in9p1 = 10.00000;
	float n_out9p0 = n_out8p0 * n_in9p1;

// ScalarClamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out9p0, n_in10p1, n_in10p2);

// ScalarOp:11
	float n_out11p0 = n_out6p0 * n_out10p0;

// VectorUniform:34
	vec3 n_out34p0 = vecl;

// VectorOp:31
	vec3 n_out31p0 = n_out18p0 + n_out34p0;

// VectorOp:20
	vec3 n_out20p0 = n_out2p0 - n_out31p0;

// VectorLen:21
	float n_out21p0 = length(n_out20p0);

// ScalarOp:22
	float n_in22p1 = 10.00000;
	float n_out22p0 = n_out21p0 * n_in22p1;

// ScalarClamp:23
	float n_in23p1 = 0.00000;
	float n_in23p2 = 1.00000;
	float n_out23p0 = clamp(n_out22p0, n_in23p1, n_in23p2);

// VectorUniform:35
	vec3 n_out35p0 = vecr;

// VectorOp:33
	vec3 n_out33p0 = n_out19p0 + n_out35p0;

// VectorOp:24
	vec3 n_out24p0 = n_out2p0 - n_out33p0;

// VectorLen:25
	float n_out25p0 = length(n_out24p0);

// ScalarOp:26
	float n_in26p1 = 10.00000;
	float n_out26p0 = n_out25p0 * n_in26p1;

// ScalarClamp:27
	float n_in27p1 = 0.00000;
	float n_in27p2 = 1.00000;
	float n_out27p0 = clamp(n_out26p0, n_in27p1, n_in27p2);

// ScalarOp:28
	float n_out28p0 = n_out23p0 * n_out27p0;

// ScalarOp:32
	float n_out32p0 = n_out11p0 * n_out28p0;

// Input:37
	vec3 n_out37p0 = vec3(UV, 0.0);

// VectorUniform:49
	vec3 n_out49p0 = Vectorleft2;

// VectorOp:38
	vec3 n_out38p0 = n_out37p0 - n_out49p0;

// VectorLen:39
	float n_out39p0 = length(n_out38p0);

// ScalarOp:40
	float n_in40p1 = 10.00000;
	float n_out40p0 = n_out39p0 * n_in40p1;

// ScalarClamp:41
	float n_in41p1 = 0.00000;
	float n_in41p2 = 1.00000;
	float n_out41p0 = clamp(n_out40p0, n_in41p1, n_in41p2);

// VectorUniform:50
	vec3 n_out50p0 = Vectorright2;

// VectorOp:42
	vec3 n_out42p0 = n_out37p0 - n_out50p0;

// VectorLen:43
	float n_out43p0 = length(n_out42p0);

// ScalarOp:44
	float n_in44p1 = 10.00000;
	float n_out44p0 = n_out43p0 * n_in44p1;

// ScalarClamp:45
	float n_in45p1 = 0.00000;
	float n_in45p2 = 1.00000;
	float n_out45p0 = clamp(n_out44p0, n_in45p1, n_in45p2);

// ScalarOp:46
	float n_out46p0 = n_out41p0 * n_out45p0;

// VectorUniform:65
	vec3 n_out65p0 = vecl2;

// VectorOp:62
	vec3 n_out62p0 = n_out49p0 + n_out65p0;

// VectorOp:51
	vec3 n_out51p0 = n_out37p0 - n_out62p0;

// VectorLen:52
	float n_out52p0 = length(n_out51p0);

// ScalarOp:53
	float n_in53p1 = 10.00000;
	float n_out53p0 = n_out52p0 * n_in53p1;

// ScalarClamp:54
	float n_in54p1 = 0.00000;
	float n_in54p2 = 1.00000;
	float n_out54p0 = clamp(n_out53p0, n_in54p1, n_in54p2);

// VectorUniform:66
	vec3 n_out66p0 = vecr2;

// VectorOp:64
	vec3 n_out64p0 = n_out50p0 + n_out66p0;

// VectorOp:55
	vec3 n_out55p0 = n_out37p0 - n_out64p0;

// VectorLen:56
	float n_out56p0 = length(n_out55p0);

// ScalarOp:57
	float n_in57p1 = 10.00000;
	float n_out57p0 = n_out56p0 * n_in57p1;

// ScalarClamp:58
	float n_in58p1 = 0.00000;
	float n_in58p2 = 1.00000;
	float n_out58p0 = clamp(n_out57p0, n_in58p1, n_in58p2);

// ScalarOp:59
	float n_out59p0 = n_out54p0 * n_out58p0;

// ScalarOp:63
	float n_out63p0 = n_out46p0 * n_out59p0;

// ScalarOp:67
	float n_out67p0 = n_out32p0 * n_out63p0;

// Texture:15
	vec4 tex_frg_15_read = texture(tex_frg_15, vec3(n_out67p0).xy);
	vec3 n_out15p0 = tex_frg_15_read.rgb;
	float n_out15p1 = tex_frg_15_read.a;

// VectorMix:36
	vec3 n_in36p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out36p0 = mix(n_in36p0, n_out15p0, vec3(n_out15p1));

// Texture:68
	vec4 tex_frg_68_read = texture(tex_frg_68, vec3(n_out15p1).xy);
	vec3 n_out68p0 = tex_frg_68_read.rgb;
	float n_out68p1 = tex_frg_68_read.a;

// Output:0
	COLOR.rgb = n_out36p0;
	COLOR.a = dot(n_out68p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 1908.1, 152.598 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 2480, 220 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -580, 320 )
nodes/fragment/3/node = SubResource( 21 )
nodes/fragment/3/position = Vector2( 60, 120 )
nodes/fragment/4/node = SubResource( 32 )
nodes/fragment/4/position = Vector2( 420, 200 )
nodes/fragment/5/node = SubResource( 43 )
nodes/fragment/5/position = Vector2( 620, 160 )
nodes/fragment/6/node = SubResource( 54 )
nodes/fragment/6/position = Vector2( 800, 160 )
nodes/fragment/7/node = SubResource( 63 )
nodes/fragment/7/position = Vector2( 60, 280 )
nodes/fragment/8/node = SubResource( 64 )
nodes/fragment/8/position = Vector2( 420, 340 )
nodes/fragment/9/node = SubResource( 65 )
nodes/fragment/9/position = Vector2( 620, 300 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 800, 300 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 1020, 220 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( 1900, 200 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 240, 140 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 240, 280 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( -580, 240 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( -580, 400 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 60, 380 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( 420, 460 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( 620, 420 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( 800, 420 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( 60, 540 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( 420, 600 )
nodes/fragment/26/node = SubResource( 17 )
nodes/fragment/26/position = Vector2( 620, 560 )
nodes/fragment/27/node = SubResource( 18 )
nodes/fragment/27/position = Vector2( 800, 560 )
nodes/fragment/28/node = SubResource( 19 )
nodes/fragment/28/position = Vector2( 1020, 480 )
nodes/fragment/29/node = SubResource( 20 )
nodes/fragment/29/position = Vector2( 240, 400 )
nodes/fragment/30/node = SubResource( 22 )
nodes/fragment/30/position = Vector2( 240, 540 )
nodes/fragment/31/node = SubResource( 23 )
nodes/fragment/31/position = Vector2( -120, 400 )
nodes/fragment/32/node = SubResource( 24 )
nodes/fragment/32/position = Vector2( 1220, 360 )
nodes/fragment/33/node = SubResource( 25 )
nodes/fragment/33/position = Vector2( -140, 520 )
nodes/fragment/34/node = SubResource( 26 )
nodes/fragment/34/position = Vector2( -520, 480 )
nodes/fragment/35/node = SubResource( 27 )
nodes/fragment/35/position = Vector2( -520, 580 )
nodes/fragment/36/node = SubResource( 28 )
nodes/fragment/36/position = Vector2( 2080, 320 )
nodes/fragment/37/node = SubResource( 29 )
nodes/fragment/37/position = Vector2( -580, 880 )
nodes/fragment/38/node = SubResource( 30 )
nodes/fragment/38/position = Vector2( 60, 680 )
nodes/fragment/39/node = SubResource( 31 )
nodes/fragment/39/position = Vector2( 420, 760 )
nodes/fragment/40/node = SubResource( 33 )
nodes/fragment/40/position = Vector2( 620, 720 )
nodes/fragment/41/node = SubResource( 34 )
nodes/fragment/41/position = Vector2( 800, 720 )
nodes/fragment/42/node = SubResource( 35 )
nodes/fragment/42/position = Vector2( 60, 840 )
nodes/fragment/43/node = SubResource( 36 )
nodes/fragment/43/position = Vector2( 420, 900 )
nodes/fragment/44/node = SubResource( 37 )
nodes/fragment/44/position = Vector2( 620, 860 )
nodes/fragment/45/node = SubResource( 38 )
nodes/fragment/45/position = Vector2( 800, 860 )
nodes/fragment/46/node = SubResource( 39 )
nodes/fragment/46/position = Vector2( 1020, 780 )
nodes/fragment/47/node = SubResource( 40 )
nodes/fragment/47/position = Vector2( 240, 700 )
nodes/fragment/48/node = SubResource( 41 )
nodes/fragment/48/position = Vector2( 240, 840 )
nodes/fragment/49/node = SubResource( 42 )
nodes/fragment/49/position = Vector2( -480, 800 )
nodes/fragment/50/node = SubResource( 44 )
nodes/fragment/50/position = Vector2( -580, 960 )
nodes/fragment/51/node = SubResource( 45 )
nodes/fragment/51/position = Vector2( 60, 940 )
nodes/fragment/52/node = SubResource( 46 )
nodes/fragment/52/position = Vector2( 420, 1020 )
nodes/fragment/53/node = SubResource( 47 )
nodes/fragment/53/position = Vector2( 620, 980 )
nodes/fragment/54/node = SubResource( 48 )
nodes/fragment/54/position = Vector2( 800, 980 )
nodes/fragment/55/node = SubResource( 49 )
nodes/fragment/55/position = Vector2( 60, 1100 )
nodes/fragment/56/node = SubResource( 50 )
nodes/fragment/56/position = Vector2( 420, 1160 )
nodes/fragment/57/node = SubResource( 51 )
nodes/fragment/57/position = Vector2( 620, 1120 )
nodes/fragment/58/node = SubResource( 52 )
nodes/fragment/58/position = Vector2( 800, 1120 )
nodes/fragment/59/node = SubResource( 53 )
nodes/fragment/59/position = Vector2( 1020, 1040 )
nodes/fragment/60/node = SubResource( 55 )
nodes/fragment/60/position = Vector2( 240, 960 )
nodes/fragment/61/node = SubResource( 56 )
nodes/fragment/61/position = Vector2( 240, 1100 )
nodes/fragment/62/node = SubResource( 57 )
nodes/fragment/62/position = Vector2( -120, 960 )
nodes/fragment/63/node = SubResource( 58 )
nodes/fragment/63/position = Vector2( 1220, 920 )
nodes/fragment/64/node = SubResource( 59 )
nodes/fragment/64/position = Vector2( -140, 1080 )
nodes/fragment/65/node = SubResource( 60 )
nodes/fragment/65/position = Vector2( -520, 1040 )
nodes/fragment/66/node = SubResource( 61 )
nodes/fragment/66/position = Vector2( -520, 1140 )
nodes/fragment/67/node = SubResource( 62 )
nodes/fragment/67/position = Vector2( 1540, 500 )
nodes/fragment/68/node = SubResource( 71 )
nodes/fragment/68/position = Vector2( 2149.1, 294.598 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 5, 0, 6, 0, 8, 0, 9, 0, 9, 0, 10, 0, 6, 0, 11, 0, 10, 0, 11, 1, 2, 0, 7, 0, 2, 0, 3, 0, 3, 0, 16, 0, 7, 0, 17, 0, 7, 0, 8, 0, 3, 0, 4, 0, 18, 0, 3, 1, 19, 0, 7, 1, 21, 0, 22, 0, 22, 0, 23, 0, 25, 0, 26, 0, 26, 0, 27, 0, 23, 0, 28, 0, 27, 0, 28, 1, 20, 0, 29, 0, 24, 0, 30, 0, 24, 0, 25, 0, 20, 0, 21, 0, 2, 0, 20, 0, 18, 0, 31, 0, 31, 0, 20, 1, 11, 0, 32, 0, 28, 0, 32, 1, 19, 0, 33, 0, 2, 0, 24, 0, 33, 0, 24, 1, 34, 0, 31, 1, 35, 0, 33, 1, 15, 1, 36, 2, 15, 0, 36, 1, 39, 0, 40, 0, 40, 0, 41, 0, 43, 0, 44, 0, 44, 0, 45, 0, 41, 0, 46, 0, 45, 0, 46, 1, 37, 0, 42, 0, 37, 0, 38, 0, 38, 0, 47, 0, 42, 0, 48, 0, 42, 0, 43, 0, 38, 0, 39, 0, 49, 0, 38, 1, 50, 0, 42, 1, 52, 0, 53, 0, 53, 0, 54, 0, 56, 0, 57, 0, 57, 0, 58, 0, 54, 0, 59, 0, 58, 0, 59, 1, 51, 0, 60, 0, 55, 0, 61, 0, 55, 0, 56, 0, 51, 0, 52, 0, 37, 0, 51, 0, 49, 0, 62, 0, 62, 0, 51, 1, 46, 0, 63, 0, 59, 0, 63, 1, 50, 0, 64, 0, 37, 0, 55, 0, 64, 0, 55, 1, 65, 0, 62, 1, 66, 0, 64, 1, 32, 0, 67, 0, 63, 0, 67, 1, 67, 0, 15, 0, 36, 0, 0, 0, 15, 1, 68, 0, 68, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=67]
shader = SubResource( 66 )
shader_param/Vectorleft = Vector3( 0.4, 0.4, 0 )
shader_param/Vectorright = Vector3( 0.6, 0.4, 0 )
shader_param/vecl = Vector3( -0.25, 0, 0 )
shader_param/vecr = Vector3( 0.25, 0, 0 )
shader_param/Vectorleft2 = Vector3( 0.4, 0.6, 0 )
shader_param/Vectorright2 = Vector3( 0.6, 0.6, 0 )
shader_param/vecl2 = Vector3( -0.25, 0, 0 )
shader_param/vecr2 = Vector3( 0.25, 0, 0 )

[sub_resource type="Animation" id=68]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/Vectorleft")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 1.2, 1.4, 1.9 ),
"transitions": PoolRealArray( 0.63728, 1, 0.63728, 1, 0.63728, 1 ),
"update": 0,
"values": [ Vector3( 0.5, 0.5, 0 ), Vector3( 0.3, 0.5, 0 ), Vector3( 0.3, 0.5, 0 ), Vector3( 0.4, 0.5, 0 ), Vector3( 0.4, 0.5, 0 ), Vector3( 0.4, 0.4, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/Vectorright")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 1.2, 1.4, 1.9 ),
"transitions": PoolRealArray( 0.63728, 1, 0.63728, 1, 0.63728, 1 ),
"update": 0,
"values": [ Vector3( 0.5, 0.5, 0 ), Vector3( 0.7, 0.5, 0 ), Vector3( 0.7, 0.5, 0 ), Vector3( 0.6, 0.5, 0 ), Vector3( 0.6, 0.5, 0 ), Vector3( 0.6, 0.4, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/vecl")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 1.2, 1.4 ),
"transitions": PoolRealArray( 0.63728, 1, 0.63728, 1, 0.63728 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( -0.25, 0, 0 ), Vector3( -0.25, 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:material:shader_param/vecr")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 1.2, 1.4 ),
"transitions": PoolRealArray( 0.63728, 1, 0.63728, 1, 0.63728 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0.25, 0, 0 ), Vector3( 0.25, 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:material:shader_param/Vectorleft2")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 1.2, 1.4, 1.9 ),
"transitions": PoolRealArray( 0.63728, 1, 0.63728, 1, 0.63728, 1 ),
"update": 0,
"values": [ Vector3( 0.5, 0.5, 0 ), Vector3( 0.3, 0.5, 0 ), Vector3( 0.3, 0.5, 0 ), Vector3( 0.4, 0.5, 0 ), Vector3( 0.4, 0.5, 0 ), Vector3( 0.4, 0.6, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:material:shader_param/Vectorright2")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 1.2, 1.4, 1.9 ),
"transitions": PoolRealArray( 0.63728, 1, 0.63728, 1, 0.63728, 1 ),
"update": 0,
"values": [ Vector3( 0.5, 0.5, 0 ), Vector3( 0.7, 0.5, 0 ), Vector3( 0.7, 0.5, 0 ), Vector3( 0.6, 0.5, 0 ), Vector3( 0.6, 0.5, 0 ), Vector3( 0.6, 0.6, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:material:shader_param/vecl2")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.7, 1.2, 1.4 ),
"transitions": PoolRealArray( 0.63728, 0.63728, 1, 0.63728 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( -0.25, 0, 0 ), Vector3( -0.25, 0, 0 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:material:shader_param/vecr2")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 0.7, 1.2, 1.4 ),
"transitions": PoolRealArray( 0.63728, 0.63728, 1, 0.63728 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0.25, 0, 0 ), Vector3( 0.25, 0, 0 ) ]
}

[node name="ColorRect" type="ColorRect"]
material = SubResource( 67 )
margin_left = 188.988
margin_top = 52.9167
margin_right = 674.988
margin_bottom = 538.917
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 68 )
