[gd_scene load_steps=61 format=2]

[ext_resource path="res://60fps image sequence export.gd" type="Script" id=1]

[sub_resource type="OpenSimplexNoise" id=1]
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=2]
seamless = true
noise = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 1, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0.0837209, 1 )
colors = PoolColorArray( 0.0742188, 0.0370731, 0.0147858, 1, 0.601563, 0.47948, 0.289032, 1 )

[sub_resource type="GradientTexture" id=7]
gradient = SubResource( 6 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = SubResource( 7 )

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="OpenSimplexNoise" id=10]
persistence = 0.0

[sub_resource type="NoiseTexture" id=11]
seamless = true
as_normalmap = true
bump_strength = 32.0
noise = SubResource( 10 )

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = SubResource( 11 )

[sub_resource type="VisualShaderNodeScalarConstant" id=13]
constant = 2.0

[sub_resource type="Gradient" id=14]
offsets = PoolRealArray( 0, 0.474419, 1 )
colors = PoolColorArray( 0.792969, 0.792969, 0.792969, 1, 0.238281, 0.238281, 0.238281, 1, 0.792157, 0.792157, 0.792157, 1 )

[sub_resource type="GradientTexture" id=15]
gradient = SubResource( 14 )

[sub_resource type="VisualShaderNodeTexture" id=16]
texture = SubResource( 15 )

[sub_resource type="VisualShaderNodeScalarOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=19]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=20]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarInterp" id=22]
output_port_for_preview = 0

[sub_resource type="Gradient" id=23]
offsets = PoolRealArray( 0.0604651, 0.0790698, 0.562791, 0.572093 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=24]
gradient = SubResource( 23 )

[sub_resource type="VisualShaderNodeTexture" id=25]
output_port_for_preview = 0
texture = SubResource( 24 )

[sub_resource type="VisualShaderNodeVectorOp" id=26]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 16, 5, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=27]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="OpenSimplexNoise" id=28]

[sub_resource type="NoiseTexture" id=29]
seamless = true
noise = SubResource( 28 )

[sub_resource type="VisualShaderNodeTexture" id=30]
texture = SubResource( 29 )

[sub_resource type="VisualShaderNodeVectorOp" id=31]

[sub_resource type="VisualShaderNodeScalarOp" id=32]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=33]
output_port_for_preview = 0

[sub_resource type="Gradient" id=34]
offsets = PoolRealArray( 0.0186047, 0.0790698, 0.893023, 1 )
colors = PoolColorArray( 0.619608, 0.619608, 0.619608, 1, 0.261719, 0.261719, 0.261719, 1, 1, 1, 1, 1, 0.621094, 0.621094, 0.621094, 1 )

[sub_resource type="GradientTexture" id=35]
gradient = SubResource( 34 )

[sub_resource type="VisualShaderNodeTexture" id=36]
texture = SubResource( 35 )

[sub_resource type="VisualShaderNodeVectorOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=38]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=39]

[sub_resource type="VisualShaderNodeInput" id=40]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=41]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.1, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=42]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="Gradient" id=43]
offsets = PoolRealArray( 0, 0.0697674, 1 )
colors = PoolColorArray( 0.913725, 0.913725, 0.913725, 1, 0, 0, 0, 1, 0.914063, 0.914063, 0.914063, 1 )

[sub_resource type="GradientTexture" id=44]
gradient = SubResource( 43 )

[sub_resource type="VisualShaderNodeTexture" id=45]
texture = SubResource( 44 )

[sub_resource type="GradientTexture" id=46]
gradient = SubResource( 14 )

[sub_resource type="VisualShaderNodeTexture" id=47]
texture = SubResource( 46 )

[sub_resource type="VisualShaderNodeScalarOp" id=48]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=49]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=50]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 16, 5, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=51]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 4

[sub_resource type="VisualShaderNodeTexture" id=52]
texture = SubResource( 29 )

[sub_resource type="VisualShaderNodeVectorOp" id=53]

[sub_resource type="VisualShaderNodeScalarOp" id=54]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=55]
output_port_for_preview = 1

[sub_resource type="VisualShader" id=56]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_5;
uniform sampler2D tex_vtx_17;
uniform sampler2D tex_vtx_16;
uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_14;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_18;
uniform sampler2D tex_frg_9;



void vertex() {
// Texture:5
	vec4 tex_vtx_5_read = texture(tex_vtx_5, UV.xy);
	vec3 n_out5p0 = tex_vtx_5_read.rgb;
	float n_out5p1 = tex_vtx_5_read.a;

// ScalarOp:7
	float n_in7p1 = 1.00000;
	float n_out7p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) * n_in7p1;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(16.00000, 5.00000, 0.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// VectorOp:6
	vec3 n_out6p0 = vec3(n_out7p0) + n_out3p0;

// VectorOp:4
	vec3 n_in4p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out4p0 = mod(n_out6p0, n_in4p1);

// VectorDecompose:8
	float n_out8p0 = n_out4p0.x;
	float n_out8p1 = n_out4p0.y;
	float n_out8p2 = n_out4p0.z;

// Texture:17
	vec4 tex_vtx_17_read = texture(tex_vtx_17, vec3(n_out8p0).xy);
	vec3 n_out17p0 = tex_vtx_17_read.rgb;
	float n_out17p1 = tex_vtx_17_read.a;

// Texture:16
	vec4 tex_vtx_16_read = texture(tex_vtx_16, vec3(n_out8p1).xy);
	vec3 n_out16p0 = tex_vtx_16_read.rgb;
	float n_out16p1 = tex_vtx_16_read.a;

// ScalarOp:18
	float n_out18p0 = dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out16p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:15
	float n_in15p1 = 0.20000;
	float n_out15p0 = n_out18p0 * n_in15p1;

// Input:11
	vec3 n_out11p0 = NORMAL;

// VectorOp:14
	vec3 n_in14p1 = vec3(0.00000, 0.10000, 0.00000);
	vec3 n_out14p0 = n_out11p0 - n_in14p1;

// VectorOp:10
	vec3 n_out10p0 = vec3(n_out15p0) * n_out14p0;

// Input:13
	vec3 n_out13p0 = VERTEX;

// VectorOp:12
	vec3 n_out12p0 = n_out10p0 + n_out13p0;

// Output:0
	VERTEX = n_out12p0;

}

void fragment() {
// Input:12
	vec3 n_out12p0 = vec3(UV, 0.0);

// VectorOp:13
	vec3 n_in13p1 = vec3(4.00000, 1.00000, 0.00000);
	vec3 n_out13p0 = n_out12p0 * n_in13p1;

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, n_out13p0.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, n_out10p0.xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, UV.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarOp:7
	float n_in7p1 = 1.00000;
	float n_out7p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) * n_in7p1;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(16.00000, 5.00000, 0.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// VectorOp:6
	vec3 n_out6p0 = vec3(n_out7p0) + n_out3p0;

// VectorOp:4
	vec3 n_in4p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out4p0 = mod(n_out6p0, n_in4p1);

// VectorDecompose:8
	float n_out8p0 = n_out4p0.x;
	float n_out8p1 = n_out4p0.y;
	float n_out8p2 = n_out4p0.z;

// Texture:18
	vec4 tex_frg_18_read = texture(tex_frg_18, vec3(n_out8p0).xy);
	vec3 n_out18p0 = tex_frg_18_read.rgb;
	float n_out18p1 = tex_frg_18_read.a;

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, vec3(n_out8p1).xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// ScalarOp:19
	float n_out19p0 = dot(n_out18p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out9p0, vec3(0.333333, 0.333333, 0.333333));

// VectorOp:15
	vec3 n_out15p0 = n_out14p0 * vec3(n_out19p0);

// Output:0
	ALBEDO = n_out15p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 434.752, 201.008 )
flags/unshaded = true
nodes/vertex/0/position = Vector2( 1520, 140 )
nodes/vertex/2/node = SubResource( 49 )
nodes/vertex/2/position = Vector2( -677.204, 113.573 )
nodes/vertex/3/node = SubResource( 50 )
nodes/vertex/3/position = Vector2( -497.204, 93.5731 )
nodes/vertex/4/node = SubResource( 51 )
nodes/vertex/4/position = Vector2( 42.7963, 53.5731 )
nodes/vertex/5/node = SubResource( 52 )
nodes/vertex/5/position = Vector2( -637.204, -146.427 )
nodes/vertex/6/node = SubResource( 53 )
nodes/vertex/6/position = Vector2( -197.204, -46.4269 )
nodes/vertex/7/node = SubResource( 54 )
nodes/vertex/7/position = Vector2( -397.204, -46.4269 )
nodes/vertex/8/node = SubResource( 55 )
nodes/vertex/8/position = Vector2( 222.796, 73.5731 )
nodes/vertex/10/node = SubResource( 37 )
nodes/vertex/10/position = Vector2( 1080, 140 )
nodes/vertex/11/node = SubResource( 38 )
nodes/vertex/11/position = Vector2( 640, 320 )
nodes/vertex/12/node = SubResource( 39 )
nodes/vertex/12/position = Vector2( 1300, 140 )
nodes/vertex/13/node = SubResource( 40 )
nodes/vertex/13/position = Vector2( 1100, 260 )
nodes/vertex/14/node = SubResource( 41 )
nodes/vertex/14/position = Vector2( 880, 280 )
nodes/vertex/15/node = SubResource( 42 )
nodes/vertex/15/position = Vector2( 900, 120 )
nodes/vertex/16/node = SubResource( 45 )
nodes/vertex/16/position = Vector2( 460, 120 )
nodes/vertex/17/node = SubResource( 47 )
nodes/vertex/17/position = Vector2( 460, -80 )
nodes/vertex/18/node = SubResource( 48 )
nodes/vertex/18/position = Vector2( 671.636, 95.2794 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 5, 0, 7, 0, 7, 0, 6, 0, 4, 0, 8, 0, 3, 0, 6, 1, 6, 0, 4, 0, 10, 0, 12, 0, 13, 0, 12, 1, 11, 0, 14, 0, 14, 0, 10, 1, 15, 0, 10, 0, 8, 1, 16, 0, 8, 0, 17, 0, 17, 0, 18, 0, 16, 0, 18, 1, 18, 0, 15, 0, 12, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 1740, 40 )
nodes/fragment/2/node = SubResource( 18 )
nodes/fragment/2/position = Vector2( -340, 180 )
nodes/fragment/3/node = SubResource( 26 )
nodes/fragment/3/position = Vector2( -160, 160 )
nodes/fragment/4/node = SubResource( 27 )
nodes/fragment/4/position = Vector2( 420, 60 )
nodes/fragment/5/node = SubResource( 30 )
nodes/fragment/5/position = Vector2( -300, -80 )
nodes/fragment/6/node = SubResource( 31 )
nodes/fragment/6/position = Vector2( 140, 20 )
nodes/fragment/7/node = SubResource( 32 )
nodes/fragment/7/position = Vector2( -60, 20 )
nodes/fragment/8/node = SubResource( 33 )
nodes/fragment/8/position = Vector2( 580, 40 )
nodes/fragment/9/node = SubResource( 36 )
nodes/fragment/9/position = Vector2( 1100, 200 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 760, -200 )
nodes/fragment/12/node = SubResource( 4 )
nodes/fragment/12/position = Vector2( 220, -100 )
nodes/fragment/13/node = SubResource( 5 )
nodes/fragment/13/position = Vector2( 460, -80 )
nodes/fragment/14/node = SubResource( 8 )
nodes/fragment/14/position = Vector2( 1320, -60 )
nodes/fragment/15/node = SubResource( 9 )
nodes/fragment/15/position = Vector2( 1520, 80 )
nodes/fragment/16/node = SubResource( 12 )
nodes/fragment/16/position = Vector2( 1460, 180 )
nodes/fragment/17/node = SubResource( 13 )
nodes/fragment/17/position = Vector2( 1220, 380 )
nodes/fragment/18/node = SubResource( 16 )
nodes/fragment/18/position = Vector2( 1100, 20 )
nodes/fragment/19/node = SubResource( 17 )
nodes/fragment/19/position = Vector2( 1300, 200 )
nodes/fragment/20/node = SubResource( 19 )
nodes/fragment/20/position = Vector2( 260, 220 )
nodes/fragment/21/node = SubResource( 20 )
nodes/fragment/21/position = Vector2( 420, 280 )
nodes/fragment/22/node = SubResource( 21 )
nodes/fragment/22/position = Vector2( 600, 260 )
nodes/fragment/24/node = SubResource( 22 )
nodes/fragment/24/position = Vector2( 880, 240 )
nodes/fragment/25/node = SubResource( 25 )
nodes/fragment/25/position = Vector2( 600, 460 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 5, 0, 7, 0, 7, 0, 6, 0, 4, 0, 8, 0, 8, 1, 9, 0, 3, 0, 6, 1, 12, 0, 13, 0, 13, 0, 10, 0, 10, 0, 14, 0, 14, 0, 15, 0, 15, 0, 0, 0, 13, 0, 16, 0, 17, 0, 16, 1, 18, 0, 19, 0, 9, 0, 19, 1, 19, 0, 15, 1, 6, 0, 20, 0, 6, 0, 4, 0, 21, 0, 22, 0, 20, 0, 21, 0, 8, 0, 24, 0, 22, 0, 24, 1, 22, 1, 25, 0, 25, 0, 24, 2, 8, 0, 18, 0 )

[sub_resource type="ShaderMaterial" id=57]
shader = SubResource( 56 )

[sub_resource type="SphereMesh" id=58]
radial_segments = 128
rings = 512

[sub_resource type="Animation" id=59]
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("MeshInstance:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, -360, 0 ) ]
}

[node name="Layered" type="Spatial"]
script = ExtResource( 1 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.709903, 0.7043, 0, -0.7043, 0.709903, 0, 0, 0 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, -1.74846e-07, 0, 1, 0, 1.74846e-07, 0, 1, 0, 0, 0 )
material_override = SubResource( 57 )
mesh = SubResource( 58 )
material/0 = null

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.938746, 0.34461, 0, -0.34461, 0.938746, -2.00272e-05, 1.2913, 4.30687 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 59 )
