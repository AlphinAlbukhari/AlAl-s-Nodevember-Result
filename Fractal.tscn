[gd_scene load_steps=32 format=2]

[ext_resource path="res://addons/shaderV/tools/sinTime.gd" type="Script" id=1]

[sub_resource type="Gradient" id=1]
offsets = PoolRealArray( 0, 0.00628931, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 17

[sub_resource type="VisualShaderNodeScalarClamp" id=6]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 3.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeVectorFunc" id=8]
function = 20

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarFunc" id=12]
function = 12

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
function = 17

[sub_resource type="VisualShaderNodeCustom" id=19]
default_input_values = [ 0, 1.0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarFunc" id=20]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=22]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorLen" id=23]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=25]
function = 17

[sub_resource type="VisualShaderNodeCustom" id=26]
default_input_values = [ 0, 1.0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=27]
default_input_values = [ 0, 1.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "time"

[sub_resource type="VisualShader" id=29]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_10;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out3p0 = n_out2p0 - n_in3p1;

// Input:9
	float n_out9p0 = TIME;

// ScalarFunc:17
	float n_out17p0 = 1.0 - n_out9p0;

// ScalarOp:18
	float n_in18p1 = 10.00000;
	float n_out18p0 = mod(n_out17p0, n_in18p1);

// VectorOp:11
	vec3 n_out11p0 = n_out3p0 * vec3(n_out18p0);

// VectorFunc:15
	vec3 n_out15p0 = fract(n_out11p0);

// VectorOp:16
	vec3 n_in16p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out16p0 = n_out15p0 - n_in16p1;

// VectorLen:4
	float n_out4p0 = length(n_out16p0);

// SinTIME:7
	float n_in7p0 = 1.00000;
	float n_out7p0;
	{
		n_out7p0 = sin(n_in7p0 * TIME);
	}

// ScalarOp:8
	float n_in8p1 = 5.00000;
	float n_out8p0 = n_out7p0 * n_in8p1;

// ScalarFunc:19
	float n_out19p0 = abs(n_out8p0);

// ScalarOp:5
	float n_out5p0 = n_out4p0 * n_out19p0;

// ScalarFunc:6
	float n_out6p0 = fract(n_out5p0);

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, vec3(n_out6p0).xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// ScalarFunc:20
	float n_out20p0 = 1.0 - dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:21
	float n_in21p1 = 2.00000;
	float n_out21p0 = pow(n_out20p0, n_in21p1);

// ScalarFunc:22
	float n_out22p0 = 1.0 - n_out21p0;

// SinTIME:25
	float n_in25p0 = 1.00000;
	float n_out25p0;
	{
		n_out25p0 = sin(n_in25p0 * TIME);
	}

// ScalarFunc:26
	float n_out26p0 = abs(n_out25p0);

// ScalarOp:27
	float n_in27p1 = 10.00000;
	float n_out27p0 = n_out26p0 * n_in27p1;

// ScalarOp:23
	float n_out23p0 = n_out22p0 * n_out27p0;

// ScalarFunc:24
	float n_out24p0 = fract(n_out23p0);

// Output:0
	COLOR.rgb = vec3(n_out24p0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 2449.51, 104.29 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 4320, 120 )
nodes/fragment/2/node = SubResource( 13 )
nodes/fragment/2/position = Vector2( 1580, 80 )
nodes/fragment/3/node = SubResource( 22 )
nodes/fragment/3/position = Vector2( 1740, 80 )
nodes/fragment/4/node = SubResource( 23 )
nodes/fragment/4/position = Vector2( 2500, 100 )
nodes/fragment/5/node = SubResource( 24 )
nodes/fragment/5/position = Vector2( 2680, 80 )
nodes/fragment/6/node = SubResource( 25 )
nodes/fragment/6/position = Vector2( 2880, 20 )
nodes/fragment/7/node = SubResource( 26 )
nodes/fragment/7/position = Vector2( 1940, 260 )
nodes/fragment/8/node = SubResource( 27 )
nodes/fragment/8/position = Vector2( 2140, 200 )
nodes/fragment/9/node = SubResource( 28 )
nodes/fragment/9/position = Vector2( 940, 200 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 3120, 0 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 1920, 100 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( 1380, 220 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( 1760, 200 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( 1578.97, 208.542 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( 2100, 80 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( 2320, 100 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( 1140, 200 )
nodes/fragment/18/node = SubResource( 11 )
nodes/fragment/18/position = Vector2( 1360, 120 )
nodes/fragment/19/node = SubResource( 12 )
nodes/fragment/19/position = Vector2( 2340, 220 )
nodes/fragment/20/node = SubResource( 14 )
nodes/fragment/20/position = Vector2( 3309.16, 85.5561 )
nodes/fragment/21/node = SubResource( 15 )
nodes/fragment/21/position = Vector2( 3520, 100 )
nodes/fragment/22/node = SubResource( 16 )
nodes/fragment/22/position = Vector2( 3706.85, 134.556 )
nodes/fragment/23/node = SubResource( 17 )
nodes/fragment/23/position = Vector2( 3911.65, 151.556 )
nodes/fragment/24/node = SubResource( 18 )
nodes/fragment/24/position = Vector2( 4100, 160 )
nodes/fragment/25/node = SubResource( 19 )
nodes/fragment/25/position = Vector2( 3220, 240 )
nodes/fragment/26/node = SubResource( 20 )
nodes/fragment/26/position = Vector2( 3460, 240 )
nodes/fragment/27/node = SubResource( 21 )
nodes/fragment/27/position = Vector2( 3697.49, 242.589 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 10, 0, 5, 0, 6, 0, 2, 0, 3, 0, 3, 0, 11, 0, 14, 0, 13, 0, 11, 0, 15, 0, 15, 0, 16, 0, 16, 0, 4, 0, 17, 0, 12, 0, 17, 0, 18, 0, 18, 0, 14, 0, 18, 0, 11, 1, 8, 0, 19, 0, 19, 0, 5, 1, 10, 0, 20, 0, 20, 0, 21, 0, 22, 0, 23, 0, 23, 0, 24, 0, 24, 0, 0, 0, 26, 0, 27, 0, 27, 0, 23, 1, 21, 0, 22, 0, 9, 0, 17, 0, 7, 0, 8, 0, 25, 0, 26, 0 )

[sub_resource type="ShaderMaterial" id=30]
shader = SubResource( 29 )

[node name="fractal" type="ColorRect"]
material = SubResource( 30 )
margin_right = 595.0
margin_bottom = 595.0
__meta__ = {
"_edit_use_anchors_": false
}
