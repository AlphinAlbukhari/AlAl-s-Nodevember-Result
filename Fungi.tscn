[gd_scene load_steps=122 format=2]

[ext_resource path="res://addons/shaderV/rgba/noise/worley3d.gd" type="Script" id=1]
[ext_resource path="res://60fps image sequence export.gd" type="Script" id=2]

[sub_resource type="Gradient" id=1]

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = SubResource( 2 )

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0.507317, 0.521951 )
colors = PoolColorArray( 1, 0.140625, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=5]
gradient = SubResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = SubResource( 5 )

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0.486081, 0.490364, 0.496788, 0.521951, 0.546039 )
colors = PoolColorArray( 0, 0, 0, 1, 0.367188, 0.367188, 0.367188, 1, 0.84375, 0.84375, 0.84375, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = SubResource( 8 )

[sub_resource type="VisualShaderNodeVectorInterp" id=10]

[sub_resource type="Gradient" id=11]
offsets = PoolRealArray( 0.0920771, 0.473233, 0.513919 )
colors = PoolColorArray( 0.871094, 0.871094, 0.871094, 1, 0.167969, 0.167969, 0.167969, 1, 0.0664063, 0.0664063, 0.0664063, 1 )

[sub_resource type="GradientTexture" id=12]
gradient = SubResource( 11 )

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = SubResource( 12 )

[sub_resource type="VisualShaderNodeVectorOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=17]

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.7 ]

[sub_resource type="Gradient" id=21]
offsets = PoolRealArray( 0.424084, 0.576419, 0.624454, 0.668122, 0.772926, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 0.503906, 0.503906, 0.503906, 1, 0.640625, 0.640625, 0.640625, 1, 0.550781, 0.550781, 0.550781, 1, 0.125, 0.125, 0.125, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=22]
gradient = SubResource( 21 )

[sub_resource type="VisualShaderNodeTexture" id=23]
texture = SubResource( 22 )

[sub_resource type="VisualShaderNodeVectorInterp" id=24]

[sub_resource type="Gradient" id=25]
offsets = PoolRealArray( 0.510917, 0.515284, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=26]
gradient = SubResource( 25 )

[sub_resource type="VisualShaderNodeTexture" id=27]
texture = SubResource( 26 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=28]

[sub_resource type="VisualShaderNodeVectorCompose" id=29]

[sub_resource type="Gradient" id=30]
offsets = PoolRealArray( 0.120419, 0.314136, 0.335079 )
colors = PoolColorArray( 1, 0.991699, 0.46875, 1, 0.121094, 0.105011, 0, 1, 0.3125, 0.300293, 0, 0 )

[sub_resource type="GradientTexture" id=31]
gradient = SubResource( 30 )

[sub_resource type="VisualShaderNodeTexture" id=32]
texture = SubResource( 31 )

[sub_resource type="Gradient" id=33]
offsets = PoolRealArray( 0.225131, 0.324607 )
colors = PoolColorArray( 0.683594, 0.683594, 0.683594, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=34]
gradient = SubResource( 33 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = SubResource( 34 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=36]

[sub_resource type="VisualShaderNodeVectorInterp" id=37]

[sub_resource type="VisualShaderNodeCustom" id=38]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1, 4, 0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=39]
operator = 2

[sub_resource type="OpenSimplexNoise" id=40]

[sub_resource type="NoiseTexture" id=41]
seamless = true
noise = SubResource( 40 )

[sub_resource type="VisualShaderNodeTexture" id=42]
texture = SubResource( 41 )

[sub_resource type="Gradient" id=43]
colors = PoolColorArray( 0.152344, 0.0315399, 0.0315399, 1, 0.964844, 0.189801, 0.0376892, 1 )

[sub_resource type="GradientTexture" id=44]
gradient = SubResource( 43 )

[sub_resource type="VisualShaderNodeTexture" id=45]
texture = SubResource( 44 )

[sub_resource type="VisualShaderNodeCustom" id=46]
default_input_values = [ 1, Vector3( 0, 0, 0 ), 2, 5, 3, 1, 4, 0 ]
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=47]
input_name = "uv"

[sub_resource type="Gradient" id=48]
offsets = PoolRealArray( 0.120419, 0.293194, 0.314136 )
colors = PoolColorArray( 1, 0.991699, 0.46875, 1, 0.121094, 0.105011, 0, 1, 0.3125, 0.300293, 0, 0 )

[sub_resource type="GradientTexture" id=49]
gradient = SubResource( 48 )

[sub_resource type="VisualShaderNodeTexture" id=50]
texture = SubResource( 49 )

[sub_resource type="VisualShaderNodeVectorOp" id=51]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 16, 8, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=52]

[sub_resource type="Gradient" id=53]
offsets = PoolRealArray( 0.287958, 0.376963, 0.465969, 0.47644 )
colors = PoolColorArray( 0, 0, 0, 1, 0.222656, 0.222656, 0.222656, 1, 0.140625, 0.140625, 0.140625, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=54]
gradient = SubResource( 53 )

[sub_resource type="VisualShaderNodeTexture" id=55]
texture = SubResource( 54 )

[sub_resource type="VisualShaderNodeScalarOp" id=56]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=57]

[sub_resource type="VisualShaderNodeScalarOp" id=58]
default_input_values = [ 0, 0.0, 1, 0.4 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=59]
default_input_values = [ 0, 0.0, 1, 0.4 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=60]
default_input_values = [ 0, 0.0, 1, 1.2 ]
operator = 5

[sub_resource type="OpenSimplexNoise" id=61]
period = 20.2
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=62]
height = 1
noise = SubResource( 61 )

[sub_resource type="VisualShaderNodeTexture" id=63]
texture = SubResource( 62 )

[sub_resource type="Gradient" id=64]
offsets = PoolRealArray( 0.335079, 0.481675, 0.513089 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=65]
gradient = SubResource( 64 )

[sub_resource type="VisualShaderNodeTexture" id=66]
texture = SubResource( 65 )

[sub_resource type="VisualShaderNodeVectorOp" id=67]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=68]
operator = 6

[sub_resource type="Gradient" id=69]
offsets = PoolRealArray( 0, 0.60733 )
colors = PoolColorArray( 0.550781, 0.550781, 0.550781, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=70]
gradient = SubResource( 69 )

[sub_resource type="VisualShaderNodeTexture" id=71]
texture = SubResource( 70 )

[sub_resource type="Gradient" id=72]
offsets = PoolRealArray( 0.52356, 0.528796 )

[sub_resource type="GradientTexture" id=73]
gradient = SubResource( 72 )

[sub_resource type="VisualShaderNodeTexture" id=74]
texture = SubResource( 73 )

[sub_resource type="OpenSimplexNoise" id=75]
period = 78.7
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=76]
seamless = true
noise = SubResource( 75 )

[sub_resource type="VisualShaderNodeTexture" id=77]
texture = SubResource( 76 )

[sub_resource type="VisualShaderNodeScalarOp" id=78]
operator = 2

[sub_resource type="Gradient" id=79]
colors = PoolColorArray( 0.503906, 0.503906, 0.503906, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=80]
gradient = SubResource( 79 )

[sub_resource type="VisualShaderNodeTexture" id=81]
texture = SubResource( 80 )

[sub_resource type="OpenSimplexNoise" id=82]
period = 1.7
persistence = 1.0

[sub_resource type="NoiseTexture" id=83]
seamless = true
noise = SubResource( 82 )

[sub_resource type="VisualShaderNodeTexture" id=84]
texture = SubResource( 83 )

[sub_resource type="VisualShaderNodeInput" id=85]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id=86]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=87]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, -2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=88]

[sub_resource type="VisualShaderNodeVectorOp" id=89]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="Gradient" id=90]
offsets = PoolRealArray( 0.512195, 0.517073 )
colors = PoolColorArray( 1, 1, 1, 1, 0.664063, 0.664063, 0.664063, 1 )

[sub_resource type="GradientTexture" id=91]
gradient = SubResource( 90 )

[sub_resource type="VisualShaderNodeTexture" id=92]
texture = SubResource( 91 )

[sub_resource type="VisualShaderNodeVectorOp" id=93]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=94]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 2

[sub_resource type="Gradient" id=95]
offsets = PoolRealArray( 0.487805, 0.521951, 0.531707 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=96]
gradient = SubResource( 95 )

[sub_resource type="VisualShaderNodeTexture" id=97]
texture = SubResource( 96 )

[sub_resource type="VisualShaderNodeVectorOp" id=98]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.5, 0 ) ]
operator = 2

[sub_resource type="Gradient" id=99]
offsets = PoolRealArray( 0.482927, 0.502439, 0.570732 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0 )

[sub_resource type="GradientTexture" id=100]
gradient = SubResource( 99 )

[sub_resource type="VisualShaderNodeTexture" id=101]
texture = SubResource( 100 )

[sub_resource type="VisualShaderNodeVectorOp" id=102]

[sub_resource type="VisualShaderNodeInput" id=103]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=104]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorInterp" id=105]

[sub_resource type="VisualShaderNodeScalarUniform" id=106]
uniform_name = "morph"

[sub_resource type="VisualShaderNodeVectorDecompose" id=107]

[sub_resource type="VisualShaderNodeInput" id=108]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=109]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=110]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=111]

[sub_resource type="VisualShaderNodeInput" id=112]
input_name = "vertex"

[sub_resource type="Gradient" id=113]
offsets = PoolRealArray( 0.658537, 0.702439, 0.819512, 0.951219 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 1, 1, 1, 0.74044, 0.74044, 0.74044, 1, 0.523438, 0.523438, 0.523438, 1 )

[sub_resource type="GradientTexture" id=114]
gradient = SubResource( 113 )

[sub_resource type="VisualShaderNodeTexture" id=115]
texture = SubResource( 114 )

[sub_resource type="VisualShader" id=116]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_18;
uniform sampler2D tex_vtx_13;
uniform sampler2D tex_vtx_9;
uniform sampler2D tex_vtx_2;
uniform float morph;
uniform sampler2D tex_frg_47;
uniform sampler2D tex_frg_46;
uniform sampler2D tex_frg_50;
uniform sampler2D tex_frg_14;
uniform sampler2D tex_frg_33;
uniform sampler2D tex_frg_34;
uniform sampler2D tex_frg_6;
uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_12;
uniform sampler2D tex_frg_21;
uniform sampler2D tex_frg_52;
uniform sampler2D tex_frg_54;
uniform sampler2D tex_frg_23;
uniform sampler2D tex_frg_28;
uniform sampler2D tex_frg_29;
uniform sampler2D tex_frg_37;
uniform sampler2D tex_frg_40;


// Worley3D

vec2 cellular3dNoiseFunc(vec3 P, float _jitter_w3d) {
	float K = 0.142857142857;
	float Ko = 0.428571428571;
	float K2 = 0.020408163265306;
	float Kz = 0.166666666667;
	float Kzo = 0.416666666667;
	
	vec3 Pi = floor(P) - floor(floor(P) * (1.0 / 289.0)) * 289.0;
	vec3 Pf = fract(P) - 0.5;
	
	vec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);
	vec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);
	vec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);
	
	vec3 p = ((34.0*(Pi.x+vec3(-1.0,0.0,1.0))+1.0)*(Pi.x+vec3(-1.0,0.0,1.0)))-floor(((34.0*(Pi.x+vec3(-1.0,0.0,1.0))+1.0)
				*(Pi.x+vec3(-1.0,0.0,1.0)))*(1.0/289.0))*289.0;
	vec3 p1 = ((34.0*(p+Pi.y-1.0)+1.0)*(p+Pi.y-1.0))-floor(((34.0*(p+Pi.y-1.0)+1.0)*(p+Pi.y-1.0))*(1.0/289.0))*289.0;
	vec3 p2 = ((34.0*(p+Pi.y)+1.0)*(p+Pi.y))-floor(((34.0*(p+Pi.y)+1.0)*(p+Pi.y))*(1.0/289.0))*289.0;
	vec3 p3 = ((34.0*(p+Pi.y+1.0)+1.0)*(p+Pi.y+1.0))-floor(((34.0*(p+Pi.y+1.0)+1.0)*(p+Pi.y+1.0))*(1.0/289.0))*289.0;
	
	vec3 p11 = ((34.0*(p1+Pi.z-1.0)+1.0)*(p1+Pi.z-1.0))-floor(((34.0*(p1+Pi.z-1.0)+1.0)*(p1+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p12 = ((34.0*(p1+Pi.z)+1.0)*(p1+Pi.z))-floor(((34.0*(p1+Pi.z)+1.0)*(p1+Pi.z))*(1.0/289.0))*289.0;
	vec3 p13 = ((34.0*(p1+Pi.z+1.0)+1.0)*(p1+Pi.z+1.0))-floor(((34.0*(p1+Pi.z+1.0)+1.0)*(p1+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 p21 = ((34.0*(p2+Pi.z-1.0)+1.0)*(p2+Pi.z-1.0))-floor(((34.0*(p2+Pi.z-1.0)+1.0)*(p2+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p22 = ((34.0*(p2+Pi.z)+1.0)*(p2+Pi.z))-floor(((34.0*(p2+Pi.z)+1.0)*(p2+Pi.z))*(1.0/289.0))*289.0;
	vec3 p23 = ((34.0*(p2+Pi.z+1.0)+1.0)*(p2+Pi.z+1.0))-floor(((34.0*(p2+Pi.z+1.0)+1.0)*(p2+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 p31 = ((34.0*(p3+Pi.z-1.0)+1.0)*(p3+Pi.z-1.0))-floor(((34.0*(p3+Pi.z-1.0)+1.0)*(p3+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p32 = ((34.0*(p3+Pi.z)+1.0)*(p3+Pi.z))-floor(((34.0*(p3+Pi.z)+1.0)*(p3+Pi.z))*(1.0/289.0))*289.0;
	vec3 p33 = ((34.0*(p3+Pi.z+1.0)+1.0)*(p3+Pi.z+1.0))-floor(((34.0*(p3+Pi.z+1.0)+1.0)*(p3+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 ox11 = fract(p11*K) - Ko;
	vec3 oy11 = ((floor(p11*K))-floor((floor(p11*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz11 = floor(p11*K2)*Kz - Kzo;
	
	vec3 ox12 = fract(p12*K) - Ko;
	vec3 oy12 = ((floor(p12*K))-floor((floor(p12*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz12 = floor(p12*K2)*Kz - Kzo;
	
	vec3 ox13 = fract(p13*K) - Ko;
	vec3 oy13 = ((floor(p13*K))-floor((floor(p13*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz13 = floor(p13*K2)*Kz - Kzo;
	
	vec3 ox21 = fract(p21*K) - Ko;
	vec3 oy21 = ((floor(p21*K))-floor((floor(p21*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz21 = floor(p21*K2)*Kz - Kzo;
	
	vec3 ox22 = fract(p22*K) - Ko;
	vec3 oy22 = ((floor(p22*K))-floor((floor(p22*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz22 = floor(p22*K2)*Kz - Kzo;
	
	vec3 ox23 = fract(p23*K) - Ko;
	vec3 oy23 = ((floor(p23*K))-floor((floor(p23*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz23 = floor(p23*K2)*Kz - Kzo;
	
	vec3 ox31 = fract(p31*K) - Ko;
	vec3 oy31 = ((floor(p31*K))-floor((floor(p31*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz31 = floor(p31*K2)*Kz - Kzo;
	
	vec3 ox32 = fract(p32*K) - Ko;
	vec3 oy32 = ((floor(p32*K))-floor((floor(p32*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz32 = floor(p32*K2)*Kz - Kzo;
	
	vec3 ox33 = fract(p33*K) - Ko;
	vec3 oy33 = ((floor(p33*K))-floor((floor(p33*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz33 = floor(p33*K2)*Kz - Kzo;
	
	vec3 dx11 = Pfx + _jitter_w3d*ox11;
	vec3 dy11 = Pfy.x + _jitter_w3d*oy11;
	vec3 dz11 = Pfz.x + _jitter_w3d*oz11;
	
	vec3 dx12 = Pfx + _jitter_w3d*ox12;
	vec3 dy12 = Pfy.x + _jitter_w3d*oy12;
	vec3 dz12 = Pfz.y + _jitter_w3d*oz12;
	
	vec3 dx13 = Pfx + _jitter_w3d*ox13;
	vec3 dy13 = Pfy.x + _jitter_w3d*oy13;
	vec3 dz13 = Pfz.z + _jitter_w3d*oz13;
	
	vec3 dx21 = Pfx + _jitter_w3d*ox21;
	vec3 dy21 = Pfy.y + _jitter_w3d*oy21;
	vec3 dz21 = Pfz.x + _jitter_w3d*oz21;
	
	vec3 dx22 = Pfx + _jitter_w3d*ox22;
	vec3 dy22 = Pfy.y + _jitter_w3d*oy22;
	vec3 dz22 = Pfz.y + _jitter_w3d*oz22;
	
	vec3 dx23 = Pfx + _jitter_w3d*ox23;
	vec3 dy23 = Pfy.y + _jitter_w3d*oy23;
	vec3 dz23 = Pfz.z + _jitter_w3d*oz23;
	
	vec3 dx31 = Pfx + _jitter_w3d*ox31;
	vec3 dy31 = Pfy.z + _jitter_w3d*oy31;
	vec3 dz31 = Pfz.x + _jitter_w3d*oz31;
	
	vec3 dx32 = Pfx + _jitter_w3d*ox32;
	vec3 dy32 = Pfy.z + _jitter_w3d*oy32;
	vec3 dz32 = Pfz.y + _jitter_w3d*oz32;
	
	vec3 dx33 = Pfx + _jitter_w3d*ox33;
	vec3 dy33 = Pfy.z + _jitter_w3d*oy33;
	vec3 dz33 = Pfz.z + _jitter_w3d*oz33;
	
	vec3 d11 = dx11 * dx11 + dy11 * dy11 + dz11 * dz11;
	vec3 d12 = dx12 * dx12 + dy12 * dy12 + dz12 * dz12;
	vec3 d13 = dx13 * dx13 + dy13 * dy13 + dz13 * dz13;
	vec3 d21 = dx21 * dx21 + dy21 * dy21 + dz21 * dz21;
	vec3 d22 = dx22 * dx22 + dy22 * dy22 + dz22 * dz22;
	vec3 d23 = dx23 * dx23 + dy23 * dy23 + dz23 * dz23;
	vec3 d31 = dx31 * dx31 + dy31 * dy31 + dz31 * dz31;
	vec3 d32 = dx32 * dx32 + dy32 * dy32 + dz32 * dz32;
	vec3 d33 = dx33 * dx33 + dy33 * dy33 + dz33 * dz33;

	vec3 d1a = min(d11, d12);
	d12 = max(d11, d12);
	d11 = min(d1a, d13);
	d13 = max(d1a, d13);
	d12 = min(d12, d13);
	vec3 d2a = min(d21, d22);
	d22 = max(d21, d22);
	d21 = min(d2a, d23);
	d23 = max(d2a, d23);
	d22 = min(d22, d23);
	vec3 d3a = min(d31, d32);
	d32 = max(d31, d32);
	d31 = min(d3a, d33);
	d33 = max(d3a, d33);
	d32 = min(d32, d33);
	vec3 da = min(d11, d21);
	d21 = max(d11, d21);
	d11 = min(da, d31);
	d31 = max(da, d31);
	d11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;
	d11.xz = (d11.x < d11.z) ? d11.xz : d11.zx;
	d12 = min(d12, d21);
	d12 = min(d12, d22);
	d12 = min(d12, d31);
	d12 = min(d12, d32);
	d11.yz = min(d11.yz,d12.xy);
	d11.y = min(d11.y,d12.z);
	d11.y = min(d11.y,d11.z);
	return sqrt(d11.xy);
}


void vertex() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out4p0.x;
	float n_out3p1 = n_out4p0.y;
	float n_out3p2 = n_out4p0.z;

// Texture:18
	vec4 tex_vtx_18_read = texture(tex_vtx_18, vec3(n_out3p1).xy);
	vec3 n_out18p0 = tex_vtx_18_read.rgb;
	float n_out18p1 = tex_vtx_18_read.a;

// VectorOp:19
	vec3 n_in19p1 = vec3(0.00000, 0.50000, 0.00000);
	vec3 n_out19p0 = n_out18p0 * n_in19p1;

// Texture:13
	vec4 tex_vtx_13_read = texture(tex_vtx_13, vec3(n_out3p1).xy);
	vec3 n_out13p0 = tex_vtx_13_read.rgb;
	float n_out13p1 = tex_vtx_13_read.a;

// Texture:9
	vec4 tex_vtx_9_read = texture(tex_vtx_9, vec3(n_out3p1).xy);
	vec3 n_out9p0 = tex_vtx_9_read.rgb;
	float n_out9p1 = tex_vtx_9_read.a;

// VectorOp:10
	vec3 n_in10p1 = vec3(0.00000, -2.00000, 0.00000);
	vec3 n_out10p0 = n_out9p0 * n_in10p1;

// Texture:2
	vec4 tex_vtx_2_read = texture(tex_vtx_2, vec3(n_out3p1).xy);
	vec3 n_out2p0 = tex_vtx_2_read.rgb;
	float n_out2p1 = tex_vtx_2_read.a;

// Input:6
	vec3 n_out6p0 = NORMAL;

// VectorOp:12
	vec3 n_in12p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out12p0 = n_out6p0 * n_in12p1;

// VectorOp:5
	vec3 n_out5p0 = n_out2p0 * n_out12p0;

// Input:8
	vec3 n_out8p0 = VERTEX;

// VectorOp:7
	vec3 n_out7p0 = n_out5p0 + n_out8p0;

// VectorOp:11
	vec3 n_out11p0 = n_out10p0 + n_out7p0;

// VectorOp:16
	vec3 n_out16p0 = n_out13p0 * n_out11p0;

// VectorOp:17
	vec3 n_in17p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out17p0 = n_out16p0 * n_in17p1;

// VectorOp:20
	vec3 n_out20p0 = n_out19p0 + n_out17p0;

// Input:22
	vec3 n_out22p0 = VERTEX;

// ScalarUniform:24
	float n_out24p0 = morph;

// VectorMix:23
	vec3 n_out23p0 = mix(n_out20p0, n_out22p0, vec3(n_out24p0));

// Output:0
	VERTEX = n_out23p0;
	COLOR.rgb = n_out20p0;

}

void fragment() {
// Input:36
	vec3 n_out36p0 = vec3(UV, 0.0);

// VectorDecompose:39
	float n_out39p0 = n_out36p0.x;
	float n_out39p1 = n_out36p0.y;
	float n_out39p2 = n_out36p0.z;

// Texture:47
	vec4 tex_frg_47_read = texture(tex_frg_47, vec3(n_out39p1).xy);
	vec3 n_out47p0 = tex_frg_47_read.rgb;
	float n_out47p1 = tex_frg_47_read.a;

// Texture:46
	vec4 tex_frg_46_read = texture(tex_frg_46, UV.xy);
	vec3 n_out46p0 = tex_frg_46_read.rgb;
	float n_out46p1 = tex_frg_46_read.a;

// Texture:50
	vec4 tex_frg_50_read = texture(tex_frg_50, n_out46p0.xy);
	vec3 n_out50p0 = tex_frg_50_read.rgb;
	float n_out50p1 = tex_frg_50_read.a;

// ScalarOp:49
	float n_out49p0 = max(dot(n_out47p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out50p0, vec3(0.333333, 0.333333, 0.333333)));

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, vec3(n_out3p1).xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// Texture:33
	vec4 tex_frg_33_read = texture(tex_frg_33, UV.xy);
	vec3 n_out33p0 = tex_frg_33_read.rgb;
	float n_out33p1 = tex_frg_33_read.a;

// Texture:34
	vec4 tex_frg_34_read = texture(tex_frg_34, n_out33p0.xy);
	vec3 n_out34p0 = tex_frg_34_read.rgb;
	float n_out34p1 = tex_frg_34_read.a;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, n_out6p0.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// ScalarOp:45
	float n_in45p1 = 1.20000;
	float n_out45p0 = pow(dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333)), n_in45p1);

// ScalarOp:16
	float n_in16p1 = 10.00000;
	float n_out16p0 = n_out45p0 * n_in16p1;

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, vec3(n_out3p1).xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// VectorMix:13
	vec3 n_out13p0 = mix(n_out34p0, vec3(n_out16p0), n_out12p0);

// VectorOp:15
	vec3 n_out15p0 = n_out14p0 * n_out13p0;

// Input:17
	vec3 n_out17p0 = COLOR.rgb;

// VectorDecompose:18
	float n_out18p0 = n_out17p0.x;
	float n_out18p1 = n_out17p0.y;
	float n_out18p2 = n_out17p0.z;

// ScalarOp:19
	float n_in19p1 = 0.20000;
	float n_out19p0 = n_out18p1 * n_in19p1;

// ScalarOp:20
	float n_in20p1 = 0.70000;
	float n_out20p0 = n_out19p0 + n_in20p1;

// Texture:21
	vec4 tex_frg_21_read = texture(tex_frg_21, vec3(n_out20p0).xy);
	vec3 n_out21p0 = tex_frg_21_read.rgb;
	float n_out21p1 = tex_frg_21_read.a;

// Texture:52
	vec4 tex_frg_52_read = texture(tex_frg_52, UV.xy);
	vec3 n_out52p0 = tex_frg_52_read.rgb;
	float n_out52p1 = tex_frg_52_read.a;

// Texture:54
	vec4 tex_frg_54_read = texture(tex_frg_54, n_out52p0.xy);
	vec3 n_out54p0 = tex_frg_54_read.rgb;
	float n_out54p1 = tex_frg_54_read.a;

// ScalarOp:53
	float n_out53p0 = dot(n_out21p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out54p0, vec3(0.333333, 0.333333, 0.333333));

// Texture:23
	vec4 tex_frg_23_read = texture(tex_frg_23, vec3(n_out3p1).xy);
	vec3 n_out23p0 = tex_frg_23_read.rgb;
	float n_out23p1 = tex_frg_23_read.a;

// VectorMix:22
	vec3 n_out22p0 = mix(n_out15p0, vec3(n_out53p0), n_out23p0);

// Input:8
	vec3 n_out8p0 = COLOR.rgb;

// VectorDecompose:26
	float n_out26p0 = n_out8p0.x;
	float n_out26p1 = n_out8p0.y;
	float n_out26p2 = n_out8p0.z;

// VectorCompose:27
	float n_in27p2 = 0.00000;
	vec3 n_out27p0 = vec3(n_out26p0, n_out26p2, n_in27p2);

// VectorOp:9
	vec3 n_in9p1 = vec3(2.00000, 2.00000, 0.00000);
	vec3 n_out9p0 = n_out27p0 * n_in9p1;

// Worley3D:31
	vec3 n_in31p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in31p2 = 5.00000;
	float n_in31p3 = 1.00000;
	float n_in31p4 = 0.00000;
	float n_out31p0;
	float n_out31p1;
	{
		vec2 n_out31p0n_out31p1 = cellular3dNoiseFunc(vec3((n_out9p0.xy+n_in31p1.xy)*n_in31p2, n_in31p4), min(max(n_in31p3, 0.0), 1.0));
		n_out31p0 = n_out31p0n_out31p1.x;
		n_out31p1 = n_out31p0n_out31p1.y;
	}

// Texture:28
	vec4 tex_frg_28_read = texture(tex_frg_28, vec3(n_out31p0).xy);
	vec3 n_out28p0 = tex_frg_28_read.rgb;
	float n_out28p1 = tex_frg_28_read.a;

// Texture:29
	vec4 tex_frg_29_read = texture(tex_frg_29, vec3(n_out3p1).xy);
	vec3 n_out29p0 = tex_frg_29_read.rgb;
	float n_out29p1 = tex_frg_29_read.a;

// VectorOp:32
	vec3 n_out32p0 = n_out29p0 * vec3(n_out28p1);

// ScalarOp:44
	float n_in44p1 = 0.40000;
	float n_out44p0 = dot(n_out32p0, vec3(0.333333, 0.333333, 0.333333)) * n_in44p1;

// VectorMix:30
	vec3 n_out30p0 = mix(n_out22p0, n_out28p0, vec3(n_out44p0));

// VectorOp:38
	vec3 n_in38p1 = vec3(16.00000, 8.00000, 0.00000);
	vec3 n_out38p0 = n_out36p0 * n_in38p1;

// Worley3D:35
	vec3 n_in35p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in35p2 = 5.00000;
	float n_in35p3 = 1.00000;
	float n_in35p4 = 0.00000;
	float n_out35p0;
	float n_out35p1;
	{
		vec2 n_out35p0n_out35p1 = cellular3dNoiseFunc(vec3((n_out38p0.xy+n_in35p1.xy)*n_in35p2, n_in35p4), min(max(n_in35p3, 0.0), 1.0));
		n_out35p0 = n_out35p0n_out35p1.x;
		n_out35p1 = n_out35p0n_out35p1.y;
	}

// Texture:37
	vec4 tex_frg_37_read = texture(tex_frg_37, vec3(n_out35p0).xy);
	vec3 n_out37p0 = tex_frg_37_read.rgb;
	float n_out37p1 = tex_frg_37_read.a;

// Texture:40
	vec4 tex_frg_40_read = texture(tex_frg_40, vec3(n_out39p1).xy);
	vec3 n_out40p0 = tex_frg_40_read.rgb;
	float n_out40p1 = tex_frg_40_read.a;

// ScalarOp:41
	float n_out41p0 = dot(n_out40p0, vec3(0.333333, 0.333333, 0.333333)) * n_out37p1;

// ScalarOp:43
	float n_in43p1 = 0.40000;
	float n_out43p0 = n_out41p0 * n_in43p1;

// VectorMix:42
	vec3 n_out42p0 = mix(n_out30p0, n_out37p0, vec3(n_out43p0));

// VectorOp:48
	vec3 n_out48p0 = vec3(n_out49p0) * n_out42p0;

// Output:0
	ALBEDO = n_out48p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 1719.54, -9.76704 )
flags/unshaded = true
nodes/vertex/0/position = Vector2( 2060, 180 )
nodes/vertex/2/node = SubResource( 101 )
nodes/vertex/2/position = Vector2( 120.926, 105.667 )
nodes/vertex/3/node = SubResource( 107 )
nodes/vertex/3/position = Vector2( -99.0739, 145.667 )
nodes/vertex/4/node = SubResource( 108 )
nodes/vertex/4/position = Vector2( -259.074, 165.667 )
nodes/vertex/5/node = SubResource( 109 )
nodes/vertex/5/position = Vector2( 340, 200 )
nodes/vertex/6/node = SubResource( 110 )
nodes/vertex/6/position = Vector2( -100, 340 )
nodes/vertex/7/node = SubResource( 111 )
nodes/vertex/7/position = Vector2( 580.709, 216.304 )
nodes/vertex/8/node = SubResource( 112 )
nodes/vertex/8/position = Vector2( 360, 340 )
nodes/vertex/9/node = SubResource( 115 )
nodes/vertex/9/position = Vector2( 560, 20 )
nodes/vertex/10/node = SubResource( 87 )
nodes/vertex/10/position = Vector2( 760, 120 )
nodes/vertex/11/node = SubResource( 88 )
nodes/vertex/11/position = Vector2( 940, 160 )
nodes/vertex/12/node = SubResource( 89 )
nodes/vertex/12/position = Vector2( 131.377, 342.978 )
nodes/vertex/13/node = SubResource( 92 )
nodes/vertex/13/position = Vector2( 780, -80 )
nodes/vertex/16/node = SubResource( 93 )
nodes/vertex/16/position = Vector2( 1180, 120 )
nodes/vertex/17/node = SubResource( 94 )
nodes/vertex/17/position = Vector2( 1360, 160 )
nodes/vertex/18/node = SubResource( 97 )
nodes/vertex/18/position = Vector2( 960, -160 )
nodes/vertex/19/node = SubResource( 98 )
nodes/vertex/19/position = Vector2( 1220, -40 )
nodes/vertex/20/node = SubResource( 102 )
nodes/vertex/20/position = Vector2( 1540, 120 )
nodes/vertex/21/node = SubResource( 103 )
nodes/vertex/21/position = Vector2( 1380, 320 )
nodes/vertex/22/node = SubResource( 104 )
nodes/vertex/22/position = Vector2( 1560, 240 )
nodes/vertex/23/node = SubResource( 105 )
nodes/vertex/23/position = Vector2( 1785.99, 155.644 )
nodes/vertex/24/node = SubResource( 106 )
nodes/vertex/24/position = Vector2( 1560, 320 )
nodes/vertex/connections = PoolIntArray( 4, 0, 3, 0, 3, 1, 2, 0, 2, 0, 5, 0, 5, 0, 7, 0, 8, 0, 7, 1, 3, 1, 9, 0, 9, 0, 10, 0, 10, 0, 11, 0, 7, 0, 11, 1, 6, 0, 12, 0, 12, 0, 5, 1, 3, 1, 13, 0, 11, 0, 16, 1, 13, 0, 16, 0, 16, 0, 17, 0, 3, 1, 18, 0, 18, 0, 19, 0, 19, 0, 20, 0, 17, 0, 20, 1, 20, 0, 0, 6, 20, 0, 23, 0, 22, 0, 23, 1, 24, 0, 23, 2, 23, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 2560, -20 )
nodes/fragment/2/node = SubResource( 19 )
nodes/fragment/2/position = Vector2( -100, 100 )
nodes/fragment/3/node = SubResource( 36 )
nodes/fragment/3/position = Vector2( 60, 80 )
nodes/fragment/6/node = SubResource( 84 )
nodes/fragment/6/position = Vector2( -300, 400 )
nodes/fragment/8/node = SubResource( 85 )
nodes/fragment/8/position = Vector2( -420, -100 )
nodes/fragment/9/node = SubResource( 86 )
nodes/fragment/9/position = Vector2( 400, -80 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( -40, 420 )
nodes/fragment/11/node = SubResource( 6 )
nodes/fragment/11/position = Vector2( -160, 180 )
nodes/fragment/12/node = SubResource( 9 )
nodes/fragment/12/position = Vector2( 340, 220 )
nodes/fragment/13/node = SubResource( 10 )
nodes/fragment/13/position = Vector2( 620, 240 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( 560, 20 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( 800, 160 )
nodes/fragment/16/node = SubResource( 15 )
nodes/fragment/16/position = Vector2( 360, 420 )
nodes/fragment/17/node = SubResource( 16 )
nodes/fragment/17/position = Vector2( 80, 740 )
nodes/fragment/18/node = SubResource( 17 )
nodes/fragment/18/position = Vector2( 340, 600 )
nodes/fragment/19/node = SubResource( 18 )
nodes/fragment/19/position = Vector2( 560, 600 )
nodes/fragment/20/node = SubResource( 20 )
nodes/fragment/20/position = Vector2( 760, 580 )
nodes/fragment/21/node = SubResource( 23 )
nodes/fragment/21/position = Vector2( 940, 520 )
nodes/fragment/22/node = SubResource( 24 )
nodes/fragment/22/position = Vector2( 1360, 480 )
nodes/fragment/23/node = SubResource( 27 )
nodes/fragment/23/position = Vector2( 880, 340 )
nodes/fragment/26/node = SubResource( 28 )
nodes/fragment/26/position = Vector2( -180, -100 )
nodes/fragment/27/node = SubResource( 29 )
nodes/fragment/27/position = Vector2( 115.469, -73.7799 )
nodes/fragment/28/node = SubResource( 32 )
nodes/fragment/28/position = Vector2( 1030.64, 78.4695 )
nodes/fragment/29/node = SubResource( 35 )
nodes/fragment/29/position = Vector2( 420, -280 )
nodes/fragment/30/node = SubResource( 37 )
nodes/fragment/30/position = Vector2( 1720, 200 )
nodes/fragment/31/node = SubResource( 38 )
nodes/fragment/31/position = Vector2( 760, -20 )
nodes/fragment/32/node = SubResource( 39 )
nodes/fragment/32/position = Vector2( 1280, 120 )
nodes/fragment/33/node = SubResource( 42 )
nodes/fragment/33/position = Vector2( 60, 200 )
nodes/fragment/34/node = SubResource( 45 )
nodes/fragment/34/position = Vector2( 320, 40 )
nodes/fragment/35/node = SubResource( 46 )
nodes/fragment/35/position = Vector2( 1120, -120 )
nodes/fragment/36/node = SubResource( 47 )
nodes/fragment/36/position = Vector2( 640, -180 )
nodes/fragment/37/node = SubResource( 50 )
nodes/fragment/37/position = Vector2( 1420, -80 )
nodes/fragment/38/node = SubResource( 51 )
nodes/fragment/38/position = Vector2( 860, -160 )
nodes/fragment/39/node = SubResource( 52 )
nodes/fragment/39/position = Vector2( 1000, -240 )
nodes/fragment/40/node = SubResource( 55 )
nodes/fragment/40/position = Vector2( 1400, -280 )
nodes/fragment/41/node = SubResource( 56 )
nodes/fragment/41/position = Vector2( 1640, 20 )
nodes/fragment/42/node = SubResource( 57 )
nodes/fragment/42/position = Vector2( 2140, 60 )
nodes/fragment/43/node = SubResource( 58 )
nodes/fragment/43/position = Vector2( 1840, 20 )
nodes/fragment/44/node = SubResource( 59 )
nodes/fragment/44/position = Vector2( 1500, 180 )
nodes/fragment/45/node = SubResource( 60 )
nodes/fragment/45/position = Vector2( 140, 460 )
nodes/fragment/46/node = SubResource( 63 )
nodes/fragment/46/position = Vector2( 1640, -200 )
nodes/fragment/47/node = SubResource( 66 )
nodes/fragment/47/position = Vector2( 1720, -420 )
nodes/fragment/48/node = SubResource( 67 )
nodes/fragment/48/position = Vector2( 2380, -20 )
nodes/fragment/49/node = SubResource( 68 )
nodes/fragment/49/position = Vector2( 2120, -160 )
nodes/fragment/50/node = SubResource( 71 )
nodes/fragment/50/position = Vector2( 1860, -160 )
nodes/fragment/51/node = SubResource( 74 )
nodes/fragment/51/position = Vector2( 2100, -340 )
nodes/fragment/52/node = SubResource( 77 )
nodes/fragment/52/position = Vector2( 500, 740 )
nodes/fragment/53/node = SubResource( 78 )
nodes/fragment/53/position = Vector2( 1171.51, 571.468 )
nodes/fragment/54/node = SubResource( 81 )
nodes/fragment/54/position = Vector2( 900, 720 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 6, 0, 10, 0, 3, 1, 12, 0, 12, 0, 13, 2, 3, 1, 14, 0, 14, 0, 15, 0, 13, 0, 15, 1, 17, 0, 18, 0, 18, 1, 19, 0, 19, 0, 20, 0, 20, 0, 21, 0, 15, 0, 22, 0, 3, 1, 23, 0, 23, 0, 22, 2, 8, 0, 26, 0, 27, 0, 9, 0, 3, 1, 29, 0, 28, 0, 30, 1, 22, 0, 30, 0, 9, 0, 31, 0, 29, 0, 32, 0, 28, 1, 32, 1, 31, 0, 28, 0, 33, 0, 34, 0, 26, 0, 27, 0, 26, 2, 27, 1, 35, 0, 37, 0, 36, 0, 38, 0, 38, 0, 35, 0, 36, 0, 39, 0, 39, 1, 40, 0, 40, 0, 41, 0, 37, 1, 41, 1, 37, 0, 42, 1, 30, 0, 42, 0, 41, 0, 43, 0, 43, 0, 42, 2, 32, 0, 44, 0, 44, 0, 30, 2, 16, 0, 13, 1, 10, 0, 45, 0, 45, 0, 16, 0, 34, 0, 13, 0, 39, 1, 47, 0, 42, 0, 48, 1, 47, 0, 49, 0, 49, 0, 48, 0, 46, 0, 50, 0, 50, 0, 49, 1, 39, 1, 51, 0, 21, 0, 53, 0, 53, 0, 22, 1, 52, 0, 54, 0, 54, 0, 53, 1, 48, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=117]
shader = SubResource( 116 )
shader_param/morph = 0.0

[sub_resource type="SphereMesh" id=118]

[sub_resource type="Animation" id=119]
resource_name = "New Anim"
length = 6.8
tracks/0/type = "value"
tracks/0/path = NodePath("Fungi:material_override:shader_param/morph")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7, 1.4, 6.8, 7.7 ),
"transitions": PoolRealArray( 1, 0.307786, 1, 0.297302, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0, 0.0, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Camera:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.9, 2.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 3.74839, -0.73979, 3.98895 ), Vector3( 3.74839, -0.73979, 3.98895 ), Vector3( 3.74839, 0.821579, 3.98895 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Camera:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.9, 2.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 3.199, 44.867, 0 ), Vector3( 3.199, 44.867, 0 ), Vector3( -8.649, 44.867, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Fungi:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 3.4, 6 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 0, 0 ), Vector3( 0, 360, 0 ) ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 2 )

[node name="Fungi" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 1.74846e-07, 0, 1, 0, -1.74846e-07, 0, 1, 0, 0, 0 )
material_override = SubResource( 117 )
mesh = SubResource( 118 )
material/0 = null

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.708746, -0.106088, 0.697441, 0, 0.988628, 0.150381, -0.705463, -0.106582, 0.700687, 3.74839, 0.821579, 3.98895 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
"anims/New Anim" = SubResource( 119 )
